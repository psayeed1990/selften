{"version":3,"sources":["config.js","auth/index.js","core/cartHelpers.js","core/Menu.js","core/Footer.js","core/Layout.js","user/Signup.js","user/Signin.js","core/apiCore.js","core/ShowImage.js","core/Card.js","core/Search.js","core/ShowThumb.js","admin/topup/ShowTopups.js","core/slider/HomeSlider.js","core/Home.js","auth/PrivateRoute.js","user/apiUser.js","user/UserDashboard.js","auth/AdminRoute.js","context/notificationsContext.js","user/AdminDashboard.js","admin/apiAdmin.js","admin/AddCategory.js","admin/AddProduct.js","core/Checkbox.js","core/RadioBox.js","core/fixedPrices.js","core/Shop.js","core/SingleProductCard.js","core/Product.js","core/Checkout.js","core/Cart.js","admin/Orders.js","user/Profile.js","admin/ManageProducts.js","admin/UpdateProduct.js","admin/updateCategory.js","admin/topup/AddTopupThumb.js","core/topup/TopupForm.js","admin/rechargePackage/AddRechargePackage.js","admin/topupOrder/ShowTopupOrders.js","admin/balance/AddBalance.js","message/ShowMessagePair.js","message/ShowChat.js","admin/topupOrder/AssignedTopupOrders.js","admin/topupOrder/ShowAdmins.js","admin/diamonds/ModifyDiamondsValue.js","admin/coupon/AddCoupon.js","admin/coupon/ShowCoupon.js","core/topup/TopupOrderSuccess.js","core/topup/TopupOrderFail.js","Routes.js","index.js","images/logo/Logo.png"],"names":["API","isAuthenticated","window","localStorage","getItem","JSON","parse","addItem","item","arguments","length","undefined","next","f","cart","push","Object","objectSpread","count","Array","from","Set","map","p","_id","id","find","setItem","stringify","updateItem","productId","product","i","removeItem","splice","isActive","history","path","location","pathname","color","withRouter","_ref","react_default","a","createElement","className","react_router_dom","to","src","Logo","style","user","role","react","cursor","onClick","fetch","concat","method","then","response","console","log","catch","err","signout","Footer","width","Layout","title","description","children","core_Menu","core_Footer","Signup","_useState","useState","name","email","password","error","success","_useState2","slicedToArray","values","setValues","handleChange","event","defineProperty","target","value","clickSubmit","preventDefault","headers","Accept","Content-Type","body","json","data","core_Layout","display","onChange","type","Signin","loading","redirectToReferrer","authenticate","react_router","createTopupOrder","userId","token","order","withSSLCommerz","Authorization","getTopupThumbs","getProducts","sortBy","getCategories","getFilteredProducts","skip","limit","filters","ShowImage","url","alt","maxHeight","maxWidth","Card","_ref$showViewProductB","showViewProductButton","_ref$showAddToCartBut","showAddToCartButton","_ref$cartUpdate","cartUpdate","_ref$showRemoveProduc","showRemoveProductButton","_ref$setRun","setRun","_ref$run","run","redirect","setRedirect","_useState3","_useState4","setCount","addToCart","shouldRedirect","core_ShowImage","substring","price","category","moment","createdAt","fromNow","quantity","showViewButton","showAddToCartBtn","showRemoveButton","showCartUpdateOptions","Search","categories","search","results","searched","setData","useEffect","searchData","params","query","queryString","list","searchSubmit","e","_objectSpread2","onSubmit","c","key","placeholder","border","searchMessage","core_Card","searchedProducts","ShowThumb","ShowTopups","topupThumbnails","setThumbNails","thumbs","thumb","exact","core_ShowThumb","HomeSLider","sliderMiddle","sliderLeft","sliderRight","slider","class","Home","productsBySell","setProductsBySell","productsByArrival","setProductsByArrival","_useState5","_useState6","setError","HomeSlider","topup_ShowTopups","core_Search","PrivateRoute","Component","component","rest","objectWithoutProperties","assign","render","props","state","getCouponsByUser","collectCouponByUser","couponId","getDiamonds","UserLinks","_isAuthenticated$user","Dashboard","setHistory","_isAuthenticated2$use","init","getPurchaseHistory","UserDashboard_UserLinks","h","products","purchaseHistory","AdminRoute","NotificationsContext","createContext","UserProvider","notifications","setNotifications","_isAuthenticated","getUnseenMessagesByReceiver","messages","Provider","AdminLinks","_useContext","useContext","_useContext2","AdminDashboard","AdminDashboard_AdminLinks","showCoupon","coupon","showBalance","updateTopupOrderAdmin","topupOrderId","sentStatus","status","customerId","AddCategory","setName","setSuccess","createCategory","showSuccess","showError","autoFocus","required","AddProduct","shipping","photo","createdProduct","redirectToProfile","formData","FormData","files","set","createProduct","accept","Checkbox","handleFilters","checked","setCheked","handleToggle","currentCategoryId","indexOf","newCheckedCategoryId","toConsumableArray","RadioBox","prices","setValue","array","Shop","myFilters","setMyFilters","setCategories","_useState7","_useState8","_useState9","_useState10","setSkip","_useState11","_useState12","size","setSize","_useState13","_useState14","filteredResults","setFilteredResults","loadFilteredResults","newFilters","loadMore","toSkip","filterBy","priceValues","handlePrice","parseInt","core_Checkbox","core_RadioBox","SingleProductCard","Product","setProduct","relatedProduct","setRelatedProduct","loadSingleProduct","read","match","core_SingleProductCard","Checkout","clientToken","instance","address","getToken","getBraintreeClientToken","handleAddress","getTotal","reduce","currentValue","nextValue","deliveryAddress","buy","requestPaymentMethod","paymentData","paymentMethodNonce","nonce","amount","processPayment","createOrderData","transaction_id","transaction","createOrder","message","showDropIn","onBlur","lib_default","options","authorization","paypal","flow","onInstance","Cart","items","setItems","showItems","core_Checkout","Orders","orders","setOrders","statusValues","setStatusValues","loadOrders","listOrders","loadStatusValues","getStatusValues","showInput","readOnly","handleStatusChange","orderId","updateOrderStatus","o","oIndex","borderBottom","index","showStatus","pIndex","padding","Profile","update","alert","auth","updateUser","profileUpdate","redirectUser","ManageProducts","setProducts","loadProducts","destroy","deleteProduct","UpdateProduct","getProduct","initCategories","updateProduct","UpdateCategory","categoryId","getCategory","submitCategoryForm","updateCategory","data-dismiss","aria-label","aria-hidden","AddTopupThumb","createdTopup","topup","createTopupThumb","disabled","selected","TopupForm","_useParams","useParams","wallet","setWallet","setAmount","adminLimit","setAdminLimit","diamondValue","setDiamondValue","gameUserId","accountType","gmailOrFacebook","securityCode","selectRecharge","selectRecharges","createdTopupOrder","game","takaPerDiamond","balance","selectedpack","filter","sr","packageAmount","packageName","replace","GatewayPageURL","AddRechargePackage","topupGameNames","topupGameName","createdRechargePackage","rechargePackage","createRechargePackage","ShowTopupOrders","getTopupOrdersAdmin","markTopupOrderStatus","topupGameId","pair","assignedTo","AddBalance","oldBalance","createdBalance","stock","addBalance","newOldBalance","Number","newPostForm","ShowMessagePair","messagesPair","setMessagesPair","getMessage","receivedMsg","seen","receiver","ShowChat","socketRef","useRef","pairId","receiverId","createdMessage","current","io","connect","messageByPairId","realReciever","newMsgDetails","emit","on","msg","AssignedTopupOrders","getAssignedTopupOrdersAdmin","ShowAdmins","useHistory","admins","setAdmins","getAllAdmins","assignTopupToAdmin","adminId","assignTopupOrder","admin","ModifyDiamondsValue","oldDiamondValue","createdDiamondValue","diamondVal","addDiamondValue","AddCoupon","userCoupons","setUserCoupons","diamondAmount","setDiamondAmount","coupons","couponName","couponCode","shortDetails","discounts","diamonds","createdCoupon","addCoupon","apply","ShowCoupon","boughtCoupon","TopupOrderSuccess","transactionId","TopupOrderFail","Routes","notificationsContext_UserProvider","auth_PrivateRoute","auth_AdminRoute","ReactDOM","src_Routes","document","getElementById","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.94f6494e.chunk.js","sourcesContent":["export const API = '/api'; //process.env.REACT_APP_API_URL;\n","import { API } from '../config';\n\nexport const signup = user => {\n    return fetch(`${API}/signup`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const signin = user => {\n    return fetch(`${API}/signin`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const authenticate = (data, next) => {\n    if (typeof window !== 'undefined') {\n        localStorage.setItem('jwt', JSON.stringify(data));\n        next();\n    }\n};\n\nexport const signout = next => {\n    if (typeof window !== 'undefined') {\n        localStorage.removeItem('jwt');\n        next();\n        return fetch(`${API}/signout`, {\n            method: 'GET'\n        })\n            .then(response => {\n                console.log('signout', response);\n            })\n            .catch(err => console.log(err));\n    }\n};\n\nexport const isAuthenticated = () => {\n    if (typeof window == 'undefined') {\n        return false;\n    }\n    if (localStorage.getItem('jwt')) {\n        return JSON.parse(localStorage.getItem('jwt'));\n    } else {\n        return false;\n    }\n};\n","export const addItem = (item = [], count = 0, next = f => f) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n        cart.push({\n            ...item,\n            count: 1\n        });\n\n        // remove duplicates\n        // build an Array from new Set and turn it back into array using Array.from\n        // so that later we can re-map it\n        // new set will only allow unique values in it\n        // so pass the ids of each object/product\n        // If the loop tries to add the same value again, it'll get ignored\n        // ...with the array of ids we got on when first map() was used\n        // run map() on it again and return the actual product from the cart\n\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\n            return cart.find(p => p._id === id);\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n        next();\n    }\n};\n\nexport const itemTotal = () => {\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            return JSON.parse(localStorage.getItem('cart')).length;\n        }\n    }\n    return 0;\n};\n\nexport const getCart = () => {\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            return JSON.parse(localStorage.getItem('cart'));\n        }\n    }\n    return [];\n};\n\nexport const updateItem = (productId, count) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart[i].count = count;\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n};\n\nexport const removeItem = productId => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart.splice(i, 1);\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n    return cart;\n};\n\nexport const emptyCart = next => {\n    if (typeof window !== 'undefined') {\n        localStorage.removeItem('cart');\n        next();\n    }\n};\n","import React, { Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { signout, isAuthenticated } from \"../auth\";\nimport { itemTotal } from \"./cartHelpers\";\nimport Logo from './../images/logo/Logo.png';\nimport './menu.css';\n\n\nconst isActive = (history, path) => {\n    if (history.location.pathname === path) {\n        return { color: \"#ff9900\" };\n    } else {\n        return { color: \"#ffffff\" };\n    }\n};\n\nconst Menu = ({ history }) => (\n    <div className=\"row less-width\">\n        <div className=\"col-md-6\">\n            <div className=\"row\">\n                <div className=\"col-md-3\">\n                    <Link\n                        to=\"/\"\n                    >\n                        <img className=\"logo\" src={Logo} />\n                    </Link>\n                </div>\n                {/* <div className=\"col-md-8\">\n                    <Search />\n                </div> */}\n            </div>\n        </div>\n        <div className=\"col-md-5\">\n            <ul className=\"nav nav-tabs bg-primary\">\n                \n                <li className=\"nav-item\">\n                    <Link\n                        className=\"nav-link\"\n                        style={isActive(history, \"/\")}\n                        to=\"/\"\n                    >\n                        Home\n                    </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link\n                        className=\"nav-link\"\n                        style={isActive(history, \"/shop\")}\n                        to=\"/shop\"\n                    >\n                        Shop\n                    </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link\n                        className=\"nav-link\"\n                        style={isActive(history, \"/cart\")}\n                        to=\"/cart\"\n                    >\n                        Cart{\" \"}\n                        <sup>\n                            <small className=\"cart-badge\">{itemTotal()}</small>\n                        </sup>\n                    </Link>\n                </li>\n\n                {isAuthenticated() && isAuthenticated().user.role === 0 && (\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link\"\n                            style={isActive(history, \"/user/dashboard\")}\n                            to=\"/user/dashboard\"\n                        >\n                            Dashboard\n                        </Link>\n                    </li>\n                )}\n\n                {isAuthenticated() && isAuthenticated().user.role === 1 && (\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link\"\n                            style={isActive(history, \"/admin/dashboard\")}\n                            to=\"/admin/dashboard\"\n                        >\n                            Dashboard\n                        </Link>\n                    </li>\n                )}\n\n                {!isAuthenticated() && (\n                    <Fragment>\n                        <li className=\"nav-item\">\n                            <Link\n                                className=\"nav-link\"\n                                style={isActive(history, \"/signin\")}\n                                to=\"/signin\"\n                            >\n                                Signin\n                            </Link>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <Link\n                                className=\"nav-link\"\n                                style={isActive(history, \"/signup\")}\n                                to=\"/signup\"\n                            >\n                                Signup\n                            </Link>\n                        </li>\n                    </Fragment>\n                )}\n\n                {isAuthenticated() && (\n                    <li className=\"nav-item\">\n                        <span\n                            className=\"nav-link\"\n                            style={{ cursor: \"pointer\", color: \"#ffffff\" }}\n                            onClick={() =>\n                                signout(() => {\n                                    history.push(\"/\");\n                                })\n                            }\n                        >\n                            Signout\n                        </span>\n                    </li>\n                )}\n            </ul>\n        </div>\n    </div>\n);\n\nexport default withRouter(Menu);\n","import React from 'react'\n\nconst Footer = ()=>{\n    return (\n        <div id=\"footer\">\n            <p>Selften 2020 All right reserved</p>\n            <img src=\"./images/ssl-payment-banner.webp\" width=\"300\" />\n            <p>Payment Verified by SSL commerce</p>\n        </div>\n    )\n}\n\nexport default Footer;","import React from \"react\";\nimport Menu from \"./Menu\";\nimport Footer from './Footer';\nimport \"../styles.css\";\n\n\nconst Layout = ({\n    title = \"Title\",\n    description = \"Description\",\n    className,\n    children\n}) => (\n    <div>\n        <Menu />\n        {/* <div className=\"jumbotron\">\n            <h2>{title}</h2>\n            <p className=\"lead\">{description}</p>\n        </div> */}\n        <div className={className}>{children}</div>\n\n        <Footer />\n    </div>\n);\n\nexport default Layout;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Layout from '../core/Layout';\nimport { signup } from '../auth';\n\nconst Signup = () => {\n    const [values, setValues] = useState({\n        name: '',\n        email: '',\n        password: '',\n        error: '',\n        success: false\n    });\n\n    const { name, email, password, success, error } = values;\n\n    const handleChange = name => event => {\n        setValues({ ...values, error: false, [name]: event.target.value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: false });\n        signup({ name, email, password }).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error, success: false });\n            } else {\n                setValues({\n                    ...values,\n                    name: '',\n                    email: '',\n                    password: '',\n                    error: '',\n                    success: true\n                });\n            }\n        });\n    };\n\n    const signUpForm = () => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} />\n            </div>\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\n                Submit\n            </button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\n            New account is created. Please <Link to=\"/signin\">Signin</Link>\n        </div>\n    );\n\n    return (\n        <Layout\n            title=\"Signup\"\n            description=\"Signup to Selften\"\n            className=\"container col-md-8 offset-md-2\"\n        >\n            {showSuccess()}\n            {showError()}\n            {signUpForm()}\n        </Layout>\n    );\n};\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Layout from \"../core/Layout\";\nimport { signin, authenticate, isAuthenticated } from \"../auth\";\n\nconst Signin = () => {\n    const [values, setValues] = useState({\n        email: \"sayeedmondal1412@gmail.com\",\n        password: \"12345678\",\n        error: \"\",\n        loading: false,\n        redirectToReferrer: false\n    });\n\n    const { email, password, loading, error, redirectToReferrer } = values;\n    const { user } = isAuthenticated();\n\n    const handleChange = name => event => {\n        setValues({ ...values, error: false, [name]: event.target.value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: false, loading: true });\n        signin({ email, password }).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error, loading: false });\n            } else {\n                authenticate(data, () => {\n                    setValues({\n                        ...values,\n                        redirectToReferrer: true\n                    });\n                });\n            }\n        });\n    };\n\n    const signUpForm = () => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input\n                    onChange={handleChange(\"email\")}\n                    type=\"email\"\n                    className=\"form-control\"\n                    value={email}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input\n                    onChange={handleChange(\"password\")}\n                    type=\"password\"\n                    className=\"form-control\"\n                    value={password}\n                />\n            </div>\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\n                Submit\n            </button>\n        </form>\n    );\n\n    const showError = () => (\n        <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n        >\n            {error}\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-info\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    const redirectUser = () => {\n        if (redirectToReferrer) {\n            if (user && user.role === 1) {\n                return <Redirect to=\"/admin/dashboard\" />;\n            } else {\n                return <Redirect to=\"/user/dashboard\" />;\n            }\n        }\n        if (isAuthenticated()) {\n            return <Redirect to=\"/\" />;\n        }\n    };\n\n    return (\n        <Layout\n            title=\"Signin\"\n            description=\"Signin to Selften\"\n            className=\"container col-md-8 offset-md-2\"\n        >\n            {showLoading()}\n            {showError()}\n            {signUpForm()}\n            {redirectUser()}\n        </Layout>\n    );\n};\n\nexport default Signin;\n","import { API } from \"../config\";\nimport queryString from \"query-string\";\n\n\n//send messages\nexport const sendMessage = (token, userId, receiverId, pairId, message) => {\n        return fetch(`${API}/user/${userId}/message/${receiverId}/pair/${pairId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: message\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n}\n\n// read chats for eavh pair\nexport const messageByPairId = (userId, token, pairId) => {\n        return fetch(`${API}/user/${userId}/message-pair/${pairId}`, {\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n}\n\n//show messages list of pair to user\nexport const getMessage = (userId, token) => {\n        return fetch(`${API}/user/messages/${userId}`, {\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n}\n\n//creating topup order\nexport const createTopupOrder = (userId, token, order, id, withSSLCommerz)=>{\n\n    return fetch(`${API}/topup-orders/${userId}/topup/${id}/${withSSLCommerz}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: order\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n}\n\n//get wallet\nexport const getWallet = (id) => {\n    return fetch(`${API}/wallet/${id}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n//get topup thumbs\nexport const getTopupThumbs = () => {\n    return fetch(`${API}/topup-thumbs`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n//get Recharge Packages for admin\nexport const getRechargePackages = () => {\n    return fetch(`${API}/recharge-package`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n//get recharge packages by game id\nexport const getRechargePackagesByGameName = (game) => {\n    return fetch(`${API}/recharge-package/get-by-game/${game}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getProducts = sortBy => {\n    return fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getCategories = () => {\n    return fetch(`${API}/categories`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getFilteredProducts = (skip, limit, filters = {}) => {\n    const data = {\n        limit,\n        skip,\n        filters\n    };\n    return fetch(`${API}/products/by/search`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const list = params => {\n    const query = queryString.stringify(params);\n    console.log(\"query\", query);\n    return fetch(`${API}/products/search?${query}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const read = productId => {\n    return fetch(`${API}/product/${productId}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const listRelated = productId => {\n    return fetch(`${API}/products/related/${productId}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getBraintreeClientToken = (userId, token) => {\n    return fetch(`${API}/braintree/getToken/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const processPayment = (userId, token, paymentData) => {\n    return fetch(`${API}/braintree/payment/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(paymentData)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const createOrder = (userId, token, createOrderData) => {\n    return fetch(`${API}/order/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ order: createOrderData })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n","import React from \"react\";\nimport { API } from \"../config\";\n\nconst ShowImage = ({ item, url }) => (\n    <div className=\"product-img\">\n        <img\n            src={`${API}/${url}/photo/${item._id}`}\n            alt={item.name}\n            className=\"mb-3\"\n            style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\n        />\n    </div>\n);\n\nexport default ShowImage;\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShowImage from './ShowImage';\nimport moment from 'moment';\nimport { addItem, updateItem, removeItem } from './cartHelpers';\n\nconst Card = ({\n  product,\n  showViewProductButton = true,\n  showAddToCartButton = true,\n  cartUpdate = false,\n  showRemoveProductButton = false,\n  setRun = f => f,\n  run = undefined\n  // changeCartSize\n}) => {\n  const [redirect, setRedirect] = useState(false);\n  const [count, setCount] = useState(product.count);\n\n  const showViewButton = showViewProductButton => {\n    return (\n      showViewProductButton && (\n        <Link to={`/product/${product._id}`} className=\"mr-2\">\n          <button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">View Product</button>\n        </Link>\n      )\n    );\n  };\n  const addToCart = () => {\n    // console.log('added');\n    addItem(product, setRedirect(true));\n  };\n\n  const shouldRedirect = redirect => {\n    if (redirect) {\n      return <Redirect to=\"/cart\" />;\n    }\n  };\n\n  const showAddToCartBtn = showAddToCartButton => {\n    return (\n      showAddToCartButton && (\n        <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2 card-btn-1  \">\n          Add to cart\n        </button>\n      )\n    );\n  };\n\n  const showStock = quantity => {\n    return quantity > 0 ? (\n      <span className=\"badge badge-primary badge-pill\">In Stock </span>\n    ) : (\n      <span className=\"badge badge-primary badge-pill\">Out of Stock </span>\n    );\n  };\n\n  const handleChange = productId => event => {\n    setRun(!run); // run useEffect in parent Cart\n    setCount(event.target.value < 1 ? 1 : event.target.value);\n    if (event.target.value >= 1) {\n      updateItem(productId, event.target.value);\n    }\n  };\n\n  const showCartUpdateOptions = cartUpdate => {\n    return (\n      cartUpdate && (\n        <div>\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">Adjust Quantity</span>\n            </div>\n            <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)} />\n          </div>\n        </div>\n      )\n    );\n  };\n  const showRemoveButton = showRemoveProductButton => {\n    return (\n      showRemoveProductButton && (\n        <button\n          onClick={() => {\n            removeItem(product._id);\n            setRun(!run); // run useEffect in parent Cart\n          }}\n          className=\"btn btn-outline-danger mt-2 mb-2\"\n        >\n          Remove Product\n        </button>\n      )\n    );\n  };\n  return (\n    <div className=\"card \">\n      <div className=\"card-header card-header-1 \">{product.name}</div>\n      <div className=\"card-body\">\n        {shouldRedirect(redirect)}\n        <ShowImage item={product} url=\"product\" />\n        <p className=\"card-p  mt-2\">{product.description.substring(0, 100)} </p>\n        <p className=\"card-p black-10\">৳ {product.price}</p>\n        <p className=\"black-9\">Category: {product.category && product.category.name}</p>\n        <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\n        {showStock(product.quantity)}\n        <br />\n\n        {showViewButton(showViewProductButton)}\n\n        {showAddToCartBtn(showAddToCartButton)}\n\n        {showRemoveButton(showRemoveProductButton)}\n\n        {showCartUpdateOptions(cartUpdate)}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport { getCategories, list } from \"./apiCore\";\nimport Card from \"./Card\";\n\nconst Search = () => {\n    const [data, setData] = useState({\n        categories: [],\n        category: \"\",\n        search: \"\",\n        results: [],\n        searched: false\n    });\n\n    const { categories, category, search, results, searched } = data;\n\n    const loadCategories = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setData({ ...data, categories: data });\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadCategories();\n    }, []);\n\n    const searchData = () => {\n        // console.log(search, category);\n        if (search) {\n            list({ search: search || undefined, category: category }).then(\n                response => {\n                    if (response.error) {\n                        console.log(response.error);\n                    } else {\n                        setData({ ...data, results: response, searched: true });\n                    }\n                }\n            );\n        }\n    };\n\n    const searchSubmit = e => {\n        e.preventDefault();\n        searchData();\n    };\n\n    const handleChange = name => event => {\n        setData({ ...data, [name]: event.target.value, searched: false });\n    };\n\n    const searchMessage = (searched, results) => {\n        if (searched && results.length > 0) {\n            return `Found ${results.length} products`;\n        }\n        if (searched && results.length < 1) {\n            return `No products found`;\n        }\n    };\n\n    const searchedProducts = (results = []) => {\n        return (\n            <div>\n                <h2 className=\"mt-4 mb-4\">\n                    {searchMessage(searched, results)}\n                </h2>\n\n                <div className=\"row\">\n                    {results.map((product, i) => (\n                        <div className=\"col-4 mb-3\">\n                            <Card key={i} product={product} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    };\n\n    const searchForm = () => (\n        <form onSubmit={searchSubmit}>\n            <span className=\"input-group-text\">\n                <div className=\"input-group input-group-lg\">\n                    <div className=\"input-group-prepend\">\n                        <select\n                            className=\"btn mr-2\"\n                            onChange={handleChange(\"category\")}\n                        >\n                            <option value=\"All\">All</option>\n                            {categories.map((c, i) => (\n                                <option key={i} value={c._id}>\n                                    {c.name}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n\n                    <input\n                        type=\"search\"\n                        className=\"form-control\"\n                        onChange={handleChange(\"search\")}\n                        placeholder=\"Search by name\"\n                    />\n                </div>\n                <div\n                    className=\"btn input-group-append\"\n                    style={{ border: \"none\" }}\n                >\n                    <button className=\"input-group-text\">Search</button>\n                </div>\n            </span>\n        </form>\n    );\n\n    return (\n        <div className=\"row\">\n            <div className=\"container mb-3\">{searchForm()}</div>\n            <div className=\"container-fluid mb-3\">\n                {searchedProducts(results)}\n            </div>\n        </div>\n    );\n};\n\nexport default Search;","import React from \"react\";\nimport { API } from \"../config\";\n\nconst ShowThumb = ({ item, url }) => (\n    <div className=\"product-img\">\n        <img\n            src={`${API}/${url}/photo/${item._id}`}\n            alt={item.name}\n            className=\"mb-3\"\n            style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\n        />\n    </div>\n);\n\nexport default ShowThumb;","import React, { Fragment, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getTopupThumbs } from '../../core/apiCore';\nimport ShowThumb from '../../core/ShowThumb';\n \n\nconst ShowTopups = ()=>{\n    const [topupThumbnails, setThumbNails] =useState(null);\n\n    useEffect(()=>{\n        getTopupThumbs().then(thumbs=>{\n            setThumbNails(thumbs);\n        })\n    \n    },[])\n\n    return(\n        <div className=\"row center-flex\">\n            {\n                topupThumbnails ? \n                topupThumbnails.map(thumb=>{\n                    return(\n                        \n                                <div className=\"col-md-2 thumb-show\" key={thumb._id}>\n                                    <Link exact to={`/topups/${thumb._id}/type/${thumb.type}`}>\n                                    \n                                        <ShowThumb item={thumb} url=\"topup-thumbs\" />\n                                        <h6>{ thumb.title }</h6>\n\n                                    </Link>\n                                </div>          \n                       \n                    )\n                })\n                :\n                <Fragment>Loading...</Fragment>\n            }\n        </div>\n    )\n}\n\nexport default ShowTopups;","import React, { useState } from 'react';\nimport './homeSlider.css';\n\nconst HomeSLider = ()=>{\n    const [slides, setSlides] = useState([])\n    const [slider, setSlider] = useState({\n        sliderMiddle: '',\n        sliderLeft: '',\n        sliderRight: '',\n    });\n\n    const {sliderMiddle, sliderLeft, sliderRight} = slider;\n\n\n\n    return(\n\n        <div id=\"slider\" class=\"slider\">\n            <div class=\"wrapper\">\n                <div id=\"slides\" class=\"slides\">\n                <span class=\"slide\">Slide 1</span>\n                <span class=\"slide\">Slide 2</span>\n                <span class=\"slide\">Slide 3</span>\n                <span class=\"slide\">Slide 4</span>\n                <span class=\"slide\">Slide 5</span>\n                </div>\n            </div>\n            <a id=\"prev\" class=\"control prev\"></a>\n            <a id=\"next\" class=\"control next\"></a>\n        </div>\n        \n    )\n}\n\nexport default HomeSLider;","import React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport { getProducts } from './apiCore';\nimport Card from './Card';\nimport Search from './Search';\nimport ShowTopups from '../admin/topup/ShowTopups';\nimport HomeSLider from './slider/HomeSlider';\n\nconst Home = () => {\n    const [productsBySell, setProductsBySell] = useState([]);\n    const [productsByArrival, setProductsByArrival] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadProductsBySell = () => {\n        getProducts('sold').then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProductsBySell(data);\n            }\n        });\n    };\n\n    const loadProductsByArrival = () => {\n        getProducts('createdAt').then(data => {\n            console.log(data);\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProductsByArrival(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadProductsByArrival();\n        loadProductsBySell();\n    }, []);\n\n    return (\n        <Layout\n            title=\"Selften ecommerce\"\n            description=\"Buy gaming products\"\n            className=\"container-fluid\"\n        >\n\n        <HomeSLider />\n           \n            <ShowTopups />\n            \n             <Search />\n            <h2 className=\"mb-4\">New Arrivals</h2>\n            <div className=\"row\">\n                {productsByArrival.map((product, i) => (\n                    <div key={i} className=\"col-4 mb-3\">\n                        <Card product={product} />\n                    </div>\n                ))}\n            </div>\n\n            <h2 className=\"mb-4\">Best Sellers</h2>\n            <div className=\"row\">\n                {productsBySell.map((product, i) => (\n                    <div key={i} className=\"col-4 mb-3\">\n                        <Card product={product} />\n                    </div>\n                ))}\n            </div>\n        </Layout>\n    );\n};\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"./index\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/signin\",\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    />\n);\n\nexport default PrivateRoute;\n","import { API } from \"../config\";\n\nexport const getCouponsByUser = (user, token)=>{\n    return fetch(`${API}/coupon/${user._id}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n}\n\nexport const collectCouponByUser = (couponId, user, token)=>{\n    return fetch(`${API}/coupon/${couponId}/${user._id}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n}\n\nexport const getDiamonds = (user, token)=>{\n    return fetch(`${API}/diamonds/${user._id}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n}\n\nexport const getUnseenMessagesByReceiver = (user, token) => {\n    return fetch(`${API}/user/get-unseen-messages/receiver/${user._id}`, {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    Authorization: `Bearer ${token}`\n                },\n                body: {}\n            })\n            .then(response => {\n                return response.json();\n            })\n            .catch(err => console.log(err));\n}\n\nexport const read = (userId, token) => {\n    return fetch(`${API}/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const update = (userId, token, user) => {\n    return fetch(`${API}/user/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateUser = (user, next) => {\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"jwt\")) {\n            let auth = JSON.parse(localStorage.getItem(\"jwt\"));\n            auth.user = user;\n            localStorage.setItem(\"jwt\", JSON.stringify(auth));\n            next();\n        }\n    }\n};\n\nexport const getPurchaseHistory = (userId, token) => {\n    return fetch(`${API}/orders/by/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { getPurchaseHistory } from \"./apiUser\";\nimport moment from \"moment\";\nimport './adminDashboard.css'\n\nexport const UserLinks = () => {\n    const {\n        user: { _id, name, email, role }\n    } = isAuthenticated();\n        return (\n            <div className=\"card\">\n                <h4 className=\"card-header\">User Links</h4>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/user/messages\">\n                            See messages  <sup className=\"notifications\">0</sup>\n                        </Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/cart\">\n                            My Cart\n                        </Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}>\n                            Update Profile\n                        </Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to={`/user/coupons`}>\n                            Diamonds Coupons\n                        </Link>\n                    </li>\n                    \n                    \n                </ul>\n            </div>\n        );\n    };\n\nconst Dashboard = () => {\n    const [history, setHistory] = useState([]);\n\n    const {\n        user: { _id, name, email, role }\n    } = isAuthenticated();\n    const token = isAuthenticated().token;\n\n    const init = (userId, token) => {\n        getPurchaseHistory(userId, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setHistory(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(_id, token);\n    }, []);\n\n\n\n    const userInfo = () => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">User Information</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">{name}</li>\n                    <li className=\"list-group-item\">{email}</li>\n                    <li className=\"list-group-item\">\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    const purchaseHistory = history => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">Purchase history</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        {history.map((h, i) => {\n                            return (\n                                <div>\n                                    <hr />\n                                    {h.products.map((p, i) => {\n                                        return (\n                                            <div key={i}>\n                                                <h6>Product name: {p.name}</h6>\n                                                <h6>\n                                                    Product price: ${p.price}\n                                                </h6>\n                                                <h6>\n                                                    Purchased date:{\" \"}\n                                                    {moment(\n                                                        p.createdAt\n                                                    ).fromNow()}\n                                                </h6>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    return (\n        <Layout\n            title=\"Dashboard\"\n            description={`G'day ${name}!`}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-3\"><UserLinks /></div>\n                <div className=\"col-9\">\n                    {userInfo()}\n                    {purchaseHistory(history)}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"./index\";\n\nconst AdminRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated() && isAuthenticated().user.role === 1 ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/signin\",\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    />\n);\n\nexport default AdminRoute;\n","import React, { useState, useEffect, createContext, useContext } from 'react';\nimport { isAuthenticated } from '../auth';\nimport { getUnseenMessagesByReceiver } from '../user/apiUser';\n\nexport const NotificationsContext = createContext();\n\nexport const UserProvider = (props)=> {\n    const [notifications, setNotifications] = useState(0);\n    const { user, token } = isAuthenticated();\n    \n    useEffect(() => {\n\n        getUnseenMessagesByReceiver(user, token)\n            .then(messages => {\n                \n                setNotifications(messages.length);\n            });\n        \n        \n    }, []);\n\n\n\n    return(\n        <NotificationsContext.Provider value={[notifications, setNotifications]}>\n            {props.children}\n        </NotificationsContext.Provider>\n    )\n}","import React, { useContext, useState, useRef } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { API } from './../config';\nimport './adminDashboard.css';\nimport { NotificationsContext } from \"../context/notificationsContext\";\n\n\nexport const AdminLinks = () => {\n    const [notifications, setNotifications] = useContext(NotificationsContext);\n    return ( \n        <div className=\"card\">\n            <h4 className=\"card-header\">Admin Links</h4>\n           \n            <ul className=\"list-group\">\n            <li className=\"list-group-item\">\n                <Link className=\"nav-link\" to=\"/admin/assigned-topup-orders\">\n                        Assigned topup orders\n                 </Link>\n            </li>\n             <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/admin/topup-orders\">\n                        See New Topup Orders\n                    </Link>\n                </li>\n            <li className=\"list-group-item\">\n                <Link className=\"nav-link\" to=\"/admin/messages\">\n                        See messages <sup className=\"notifications\">{ notifications }</sup>\n                 </Link>\n            </li>\n\n            <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/admin/balance-stock\">\n                        Stocks for topup\n                    </Link>\n                </li>\n                <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/admin/diamond-value\">\n                        Diamond or Purchase Point\n                    </Link>\n                </li>\n                <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/admin/add-coupons\">\n                        Add coupons\n                    </Link>\n                </li>\n                 <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/admin/recharge-package\">\n                        Create Recharge Package\n                    </Link>\n                </li>\n                <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/admin/topup\">\n                        Create Game for Topup\n                    </Link>\n                </li>\n\n                <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/create/category\">\n                        Create Category\n                    </Link>\n                </li>\n                <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/create/product\">\n                        Create Product\n                    </Link>\n                </li>\n                <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/admin/orders\">\n                        View Orders\n                    </Link>\n                </li>\n                <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/admin/products\">\n                        Manage Products\n                    </Link>\n                </li>\n               \n               \n                \n            </ul>\n        </div>\n    );\n};\n\nconst AdminDashboard = () => {\n    const {\n        user: { _id, name, email, role }\n    } = isAuthenticated();\n\n\n\n    const adminInfo = () => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">User Information</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">{name}</li>\n                    <li className=\"list-group-item\">{email}</li>\n                    <li className=\"list-group-item\">\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    return (\n        <Layout\n            title=\"Dashboard\"\n            description={`G'day ${name}!`}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                 \n                <div className=\"col-md-3\"><AdminLinks /></div>\n              \n                <div className=\"col-md-9\">{adminInfo()}</div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AdminDashboard;\n","\nimport { API } from '../config';\n\n// add coupons\nexport const addCoupon = (userId, token, coupon) => {\n    return fetch(`${API}/coupon/create/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: coupon\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\n// show coupons\nexport const showCoupon = (userId, token, coupon) => {\n    return fetch(`${API}/coupon/`, {\n        method: 'GET',\n        })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\n//assign topup order to admin\nexport const assignTopupOrder = (user, token, adminId, topupOrderId)=>{\n        return fetch(`${API}/topup-orders/assigning/${adminId}/${user._id}/${topupOrderId}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            },\n            \n        })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n}\n\n//get all admins to assign order\nexport const getAllAdmins = (user, token) => {\n    return fetch(`${API}/user/admins/${user._id}`, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        \n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\n\n// show balance\nexport const showBalance = ()=> {\n\n    return fetch(`${API}/admin/balance`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n}\n\n//add balance\nexport const addBalance = (userId, token, balance) => {\n    return fetch(`${API}/admin/balance/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(balance)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n}; \nexport const addDiamondValue = (userId, token, diamondValue) => {\n    return fetch(`${API}/admin/add-diamonds/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(diamondValue)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n}; \n\n//update topup orders\nexport const updateTopupOrderAdmin = (topupOrderId, userId, token, sentStatus) => {\n    console.log(sentStatus);\n    return fetch(`${API}/topup-orders/update/${topupOrderId}/${userId}/${sentStatus.status}/${sentStatus.customerId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: sentStatus,\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\n//get all topup orders\nexport const getTopupOrdersAdmin = (userId, token) => {\n    return fetch(`${API}/topup-orders/admin/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: {}\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n//get assigned topup orders for admin\nexport const getAssignedTopupOrdersAdmin = (userId, token) => {\n    return fetch(`${API}/topup-orders/assigned/admin/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: {}\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n//create recharge packages\nexport const createRechargePackage = (userId, token, rechargePackage)=>{\n    return fetch(`${API}/recharge-package/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: rechargePackage\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n}\n\nexport const createTopupThumb = (userId, token, topup) => {\n    return fetch(`${API}/topup-thumbs/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: topup\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const createCategory = (userId, token, category) => {\n    return fetch(`${API}/category/create/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const updateCategory = (categoryId, userId, token, category) => {\n    return fetch(`${API}/category/${categoryId}/${userId}`, {\n        method: 'PUT',\n        headers: {\n            // content type?\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const createProduct = (userId, token, product) => {\n    return fetch(`${API}/product/create/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const getCategory = categoryId => {\n    return fetch(`${API}/category/${categoryId}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getCategories = () => {\n    return fetch(`${API}/categories`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const listOrders = (userId, token) => {\n    return fetch(`${API}/order/list/${userId}`, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getStatusValues = (userId, token) => {\n    return fetch(`${API}/order/status-values/${userId}`, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n    return fetch(`${API}/order/${orderId}/status/${userId}`, {\n        method: 'PUT',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ status, orderId })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n/**\n * to perform crud on product\n * get all products\n * get a single product\n * update single product\n * delete single product\n */\n\nexport const getProducts = () => {\n    return fetch(`${API}/products?limit=undefined`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const deleteProduct = (productId, userId, token) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getProduct = productId => {\n    return fetch(`${API}/product/${productId}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateProduct = (productId, userId, token, product) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n        method: 'PUT',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n","import React, { useState } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { createCategory } from \"./apiAdmin\";\nimport { AdminLinks } from \"../user/AdminDashboard\";\n\nconst AddCategory = () => {\n    const [name, setName] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [success, setSuccess] = useState(false);\n\n    // destructure user and token from localstorage\n    const { user, token } = isAuthenticated();\n\n    const handleChange = e => {\n        setError(\"\");\n        setName(e.target.value);\n    };\n\n    const clickSubmit = e => {\n        e.preventDefault();\n        setError(\"\");\n        setSuccess(false);\n        // make request to api to create category\n        createCategory(user._id, token, { name }).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setError(\"\");\n                setSuccess(true);\n            }\n        });\n    };\n\n    const newCategoryFom = () => (\n        <form onSubmit={clickSubmit}>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    onChange={handleChange}\n                    value={name}\n                    autoFocus\n                    required\n                />\n            </div>\n            <button className=\"btn btn-outline-primary\">Create Category</button>\n        </form>\n    );\n\n    const showSuccess = () => {\n        if (success) {\n            return <h3 className=\"text-success\">{name} is created</h3>;\n        }\n    };\n\n    const showError = () => {\n        if (error) {\n            return <h3 className=\"text-danger\">Category should be unique</h3>;\n        }\n    };\n\n    const goBack = () => (\n        <div className=\"mt-5\">\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">\n                Back to Dashboard\n            </Link>\n        </div>\n    );\n\n    return (\n        <Layout\n            title=\"Add a new category\"\n            description={`G'day ${user.name}, ready to add a new category?`}\n        >\n            <div className=\"row\">\n            <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-6 offset-md-2\">\n                    {showSuccess()}\n                    {showError()}\n                    {newCategoryFom()}\n                    {goBack()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddCategory;\n","import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\nimport { createProduct, getCategories } from './apiAdmin';\nimport { AdminLinks } from '../user/AdminDashboard';\n\nconst AddProduct = () => {\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        price: '',\n        categories: [],\n        category: '',\n        shipping: '',\n        quantity: '',\n        photo: '',\n        loading: false,\n        error: '',\n        createdProduct: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        name,\n        description,\n        price,\n        categories,\n        category,\n        shipping,\n        quantity,\n        loading,\n        error,\n        createdProduct,\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    categories: data,\n                    formData: new FormData()\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        createProduct(user._id, token, formData).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    name: '',\n                    description: '',\n                    photo: '',\n                    price: '',\n                    quantity: '',\n                    loading: false,\n                    createdProduct: data.name\n                });\n                console.log('done')\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Description</label>\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Price</label>\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Category</label>\n                <select onChange={handleChange('category')} className=\"form-control\">\n                    <option>Please select</option>\n                    {categories &&\n                        categories.map((c, i) => (\n                            <option key={i} value={c._id}>\n                                {c.name}\n                            </option>\n                        ))}\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Shipping</label>\n                <select onChange={handleChange('shipping')} className=\"form-control\">\n                    <option>Please select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Quantity</label>\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Create Product</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\n            <h2>{`${createdProduct}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\n            <div className=\"row\">\n            <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-6 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddProduct;\n","import React, { useState } from \"react\";\n\nconst Checkbox = ({ categories, handleFilters }) => {\n    const [checked, setCheked] = useState([]);\n\n    const handleToggle = c => () => {\n        // return the first index or -1\n        const currentCategoryId = checked.indexOf(c);\n        const newCheckedCategoryId = [...checked];\n        // if currently checked was not already in checked state > push\n        // else pull/take off\n        if (currentCategoryId === -1) {\n            newCheckedCategoryId.push(c);\n        } else {\n            newCheckedCategoryId.splice(currentCategoryId, 1);\n        }\n        // console.log(newCheckedCategoryId);\n        setCheked(newCheckedCategoryId);\n        handleFilters(newCheckedCategoryId);\n    };\n\n    return categories.map((c, i) => (\n        <li key={i} className=\"list-unstyled\">\n            <input\n                onChange={handleToggle(c._id)}\n                value={checked.indexOf(c._id === -1)}\n                type=\"checkbox\"\n                className=\"form-check-input\"\n            />\n            <label className=\"form-check-label\">{c.name}</label>\n        </li>\n    ));\n};\n\nexport default Checkbox;\n","import React, { useState } from \"react\";\n\nconst RadioBox = ({ prices, handleFilters }) => {\n    const [value, setValue] = useState(0);\n\n    const handleChange = event => {\n        handleFilters(event.target.value);\n        setValue(event.target.value);\n    };\n\n    return prices.map((p, i) => (\n        <div key={i}>\n            <input\n                onChange={handleChange}\n                value={`${p._id}`}\n                name={p}\n                type=\"radio\"\n                className=\"mr-2 ml-4\"\n            />\n            <label className=\"form-check-label\">{p.name}</label>\n        </div>\n    ));\n};\n\nexport default RadioBox;\n","export const prices = [\n    {\n        _id: 0,\n        name: \"Any\",\n        array: []\n    },\n    {\n        _id: 1,\n        name: \"$0 to $9\",\n        array: [0, 9]\n    },\n    {\n        _id: 2,\n        name: \"$10 to $19\",\n        array: [10, 19]\n    },\n    {\n        _id: 3,\n        name: \"$20 to $29\",\n        array: [20, 29]\n    },\n    {\n        _id: 4,\n        name: \"$30 to $39\",\n        array: [20, 29]\n    },\n    {\n        _id: 5,\n        name: \"More than $40\",\n        array: [40, 99]\n    }\n];\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport Card from \"./Card\";\nimport { getCategories, getFilteredProducts } from \"./apiCore\";\nimport Checkbox from \"./Checkbox\";\nimport RadioBox from \"./RadioBox\";\nimport { prices } from \"./fixedPrices\";\n\nconst Shop = () => {\n    const [myFilters, setMyFilters] = useState({\n        filters: { category: [], price: [] }\n    });\n    const [categories, setCategories] = useState([]);\n    const [error, setError] = useState(false);\n    const [limit, setLimit] = useState(6);\n    const [skip, setSkip] = useState(0);\n    const [size, setSize] = useState(0);\n    const [filteredResults, setFilteredResults] = useState([]);\n\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setCategories(data);\n            }\n        });\n    };\n\n    const loadFilteredResults = newFilters => {\n        // console.log(newFilters);\n        getFilteredProducts(skip, limit, newFilters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults(data.data);\n                setSize(data.size);\n                setSkip(0);\n            }\n        });\n    };\n\n    const loadMore = () => {\n        let toSkip = skip + limit;\n        // console.log(newFilters);\n        getFilteredProducts(toSkip, limit, myFilters.filters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults([...filteredResults, ...data.data]);\n                setSize(data.size);\n                setSkip(toSkip);\n            }\n        });\n    };\n\n    const loadMoreButton = () => {\n        return (\n            size > 0 &&\n            size >= limit && (\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\n                    Load more\n                </button>\n            )\n        );\n    };\n\n    useEffect(() => {\n        init();\n        loadFilteredResults(skip, limit, myFilters.filters);\n    }, []);\n\n    const handleFilters = (filters, filterBy) => {\n        // console.log(\"SHOP\", filters, filterBy);\n        const newFilters = { ...myFilters };\n        newFilters.filters[filterBy] = filters;\n\n        if (filterBy === \"price\") {\n            let priceValues = handlePrice(filters);\n            newFilters.filters[filterBy] = priceValues;\n        }\n        loadFilteredResults(myFilters.filters);\n        setMyFilters(newFilters);\n    };\n\n    const handlePrice = value => {\n        const data = prices;\n        let array = [];\n\n        for (let key in data) {\n            if (data[key]._id === parseInt(value)) {\n                array = data[key].array;\n            }\n        }\n        return array;\n    };\n\n    return (\n        <Layout\n            title=\"Shop Page\"\n            description=\"Search and find books of your choice\"\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <h4>Filter by categories</h4>\n                    <ul>\n                        <Checkbox\n                            categories={categories}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"category\")\n                            }\n                        />\n                    </ul>\n\n                    <h4>Filter by price range</h4>\n                    <div>\n                        <RadioBox\n                            prices={prices}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"price\")\n                            }\n                        />\n                    </div>\n                </div>\n\n                <div className=\"col-8\">\n                    <h2 className=\"mb-4\">Products</h2>\n                    <div className=\"row\">\n                        {filteredResults.map((product, i) => (\n                            <div key={i} className=\"col-4 mb-3\">\n                                <Card product={product} />\n                            </div>\n                        ))}\n                    </div>\n                    <hr />\n                    {loadMoreButton()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Shop;\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShowImage from './ShowImage';\nimport moment from 'moment';\nimport { addItem, updateItem, removeItem } from './cartHelpers';\n\nconst SingleProductCard = ({\n  product,\n  showViewProductButton = true,\n  showAddToCartButton = true,\n  cartUpdate = false,\n  showRemoveProductButton = false,\n  setRun = f => f,\n  run = undefined\n  // changeCartSize\n}) => {\n  const [redirect, setRedirect] = useState(false);\n  const [count, setCount] = useState(product.count);\n\n  const showViewButton = showViewProductButton => {\n    return (\n      showViewProductButton && (\n        <Link to={`/product/${product._id}`} className=\"mr-2\">\n          <button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">View Product</button>\n        </Link>\n      )\n    );\n  };\n  const addToCart = () => {\n    // console.log('added');\n    addItem(product, setRedirect(true));\n  };\n\n  const shouldRedirect = redirect => {\n    if (redirect) {\n      return <Redirect to=\"/cart\" />;\n    }\n  };\n\n  const showAddToCartBtn = showAddToCartButton => {\n    return (\n      showAddToCartButton && (\n        <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2 card-btn-1  \">\n          Add to cart\n        </button>\n      )\n    );\n  };\n\n  const showStock = quantity => {\n    return quantity > 0 ? (\n      <span className=\"badge badge-primary badge-pill\">In Stock </span>\n    ) : (\n      <span className=\"badge badge-primary badge-pill\">Out of Stock </span>\n    );\n  };\n\n  const handleChange = productId => event => {\n    setRun(!run); // run useEffect in parent Cart\n    setCount(event.target.value < 1 ? 1 : event.target.value);\n    if (event.target.value >= 1) {\n      updateItem(productId, event.target.value);\n    }\n  };\n\n  const showCartUpdateOptions = cartUpdate => {\n    return (\n      cartUpdate && (\n        <div>\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">Adjust Quantity</span>\n            </div>\n            <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)} />\n          </div>\n        </div>\n      )\n    );\n  };\n  const showRemoveButton = showRemoveProductButton => {\n    return (\n      showRemoveProductButton && (\n        <button\n          onClick={() => {\n            removeItem(product._id);\n            setRun(!run); // run useEffect in parent Cart\n          }}\n          className=\"btn btn-outline-danger mt-2 mb-2\"\n        >\n          Remove Product\n        </button>\n      )\n    );\n  };\n  return (\n    <div className=\"card \">\n      <div className=\"card-header card-header-1 \">{product.name}</div>\n      <div className=\"card-body\">\n        {shouldRedirect(redirect)}\n        <ShowImage item={product} url=\"product\" />\n        <p className=\"card-p  mt-2\">{product.description} </p>\n        <p className=\"card-p black-10\">৳ {product.price}</p>\n        <p className=\"black-9\">Category: {product.category && product.category.name}</p>\n        <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\n        {showStock(product.quantity)}\n        <br />\n\n        {showViewButton(showViewProductButton)}\n\n        {showAddToCartBtn(showAddToCartButton)}\n\n        {showRemoveButton(showRemoveProductButton)}\n\n        {showCartUpdateOptions(cartUpdate)}\n      </div>\n    </div>\n  );\n};\n\nexport default SingleProductCard;\n","import React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport { read, listRelated } from './apiCore';\nimport SingleProductCard from './SingleProductCard';\nimport Card from './Card';\n\nconst Product = props => {\n    const [product, setProduct] = useState({});\n    const [relatedProduct, setRelatedProduct] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadSingleProduct = productId => {\n        read(productId).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProduct(data);\n                // fetch related products\n                listRelated(data._id).then(data => {\n                    if (data.error) {\n                        setError(data.error);\n                    } else {\n                        setRelatedProduct(data);\n                    }\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        const productId = props.match.params.productId;\n        loadSingleProduct(productId);\n    }, [props]);\n\n    return (\n        <Layout\n            title={product && product.name}\n            description={product && product.description && product.description.substring(0, 100)}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-8\">\n                    {product && product.description && <SingleProductCard product={product} showViewProductButton={false} />}\n                </div>\n\n                <div className=\"col-4\">\n                    <h4>Related products</h4>\n                    {relatedProduct.map((p, i) => (\n                        <div className=\"mb-3\" key={i}>\n                            <Card product={p} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Product;\n","import React, { useState, useEffect } from 'react';\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\nimport { emptyCart } from './cartHelpers';\nimport Card from './Card';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\n// import \"braintree-web\"; // not using this package\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\n    const [data, setData] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: '',\n        instance: {},\n        address: ''\n    });\n\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n    const getToken = (userId, token) => {\n        getBraintreeClientToken(userId, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n                setData({ ...data, error: data.error });\n            } else {\n                console.log(data);\n                setData({ clientToken: data.clientToken });\n            }\n        });\n    };\n\n    useEffect(() => {\n        getToken(userId, token);\n    }, []);\n\n    const handleAddress = event => {\n        setData({ ...data, address: event.target.value });\n    };\n\n    const getTotal = () => {\n        return products.reduce((currentValue, nextValue) => {\n            return currentValue + nextValue.count * nextValue.price;\n        }, 0);\n    };\n\n    const showCheckout = () => {\n        return isAuthenticated() ? (\n            <div>{showDropIn()}</div>\n        ) : (\n            <Link to=\"/signin\">\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\n            </Link>\n        );\n    };\n\n    let deliveryAddress = data.address;\n\n    const buy = () => {\n        setData({ loading: true });\n        // send the nonce to your server\n        // nonce = data.instance.requestPaymentMethod()\n        let nonce;\n        let getNonce = data.instance\n            .requestPaymentMethod()\n            .then(data => {\n                // console.log(data);\n                nonce = data.nonce;\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n                // and also total to be charged\n                // console.log(\n                //     \"send nonce and total to process: \",\n                //     nonce,\n                //     getTotal(products)\n                // );\n                const paymentData = {\n                    paymentMethodNonce: nonce,\n                    amount: getTotal(products)\n                };\n\n                processPayment(userId, token, paymentData)\n                    .then(response => {\n                        console.log(response);\n                        // empty cart\n                        // create order\n\n                        const createOrderData = {\n                            products: products,\n                            transaction_id: response.transaction.id,\n                            amount: response.transaction.amount,\n                            address: deliveryAddress\n                        };\n\n                        createOrder(userId, token, createOrderData)\n                            .then(response => {\n                                emptyCart(() => {\n                                    setRun(!run); // run useEffect in parent Cart\n                                    console.log('payment success and empty cart');\n                                    setData({\n                                        loading: false,\n                                        success: true\n                                    });\n                                });\n                            })\n                            .catch(error => {\n                                console.log(error);\n                                setData({ loading: false });\n                            });\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setData({ loading: false });\n                    });\n            })\n            .catch(error => {\n                // console.log(\"dropin error: \", error);\n                setData({ ...data, error: error.message });\n            });\n    };\n\n    const showDropIn = () => (\n        <div onBlur={() => setData({ ...data, error: '' })}>\n            {data.clientToken !== null && products.length > 0 ? (\n                <div>\n                    <div className=\"gorm-group mb-3\">\n                        <label className=\"text-muted\">Delivery address:</label>\n                        <textarea\n                            onChange={handleAddress}\n                            className=\"form-control\"\n                            value={data.address}\n                            placeholder=\"Type your delivery address here...\"\n                        />\n                    </div>\n\n                    <DropIn\n                        options={{\n                            authorization: data.clientToken,\n                            paypal: {\n                                flow: 'vault'\n                            }\n                        }}\n                        onInstance={instance => (data.instance = instance)}\n                    />\n                    <button onClick={buy} className=\"btn btn-success btn-block\">\n                        Pay\n                    </button>\n                </div>\n            ) : null}\n        </div>\n    );\n\n    const showError = error => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = success => (\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\n            Thanks! Your payment was successful!\n        </div>\n    );\n\n    const showLoading = loading => loading && <h2 className=\"text-danger\">Loading...</h2>;\n\n    return (\n        <div>\n            <h2>Total: ${getTotal()}</h2>\n            {showLoading(data.loading)}\n            {showSuccess(data.success)}\n            {showError(data.error)}\n            {showCheckout()}\n        </div>\n    );\n};\n\nexport default Checkout;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Layout from './Layout';\nimport { getCart } from './cartHelpers';\nimport Card from './Card';\nimport Checkout from './Checkout';\n\nconst Cart = () => {\n    const [items, setItems] = useState([]);\n    const [run, setRun] = useState(false);\n\n    useEffect(() => {\n        setItems(getCart());\n    }, [run]);\n\n    const showItems = items => {\n        return (\n            <div>\n                <h2>Your cart has {`${items.length}`} items</h2>\n                <hr />\n                {items.map((product, i) => (\n                    <Card\n                        key={i}\n                        product={product}\n                        showAddToCartButton={false}\n                        cartUpdate={true}\n                        showRemoveProductButton={true}\n                        setRun={setRun}\n                        run={run}\n                    />\n                ))}\n            </div>\n        );\n    };\n\n    const noItemsMessage = () => (\n        <h2>\n            Your cart is empty. <br /> <Link to=\"/shop\">Continue shopping</Link>\n        </h2>\n    );\n\n    return (\n        <Layout\n            title=\"Shopping Cart\"\n            description=\"Manage your cart items. Add remove checkout or continue shopping.\"\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-6\">{items.length > 0 ? showItems(items) : noItemsMessage()}</div>\n\n                <div className=\"col-6\">\n                    <h2 className=\"mb-4\">Your cart summary</h2>\n                    <hr />\n                    <Checkout products={items} setRun={setRun} run={run} />\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Cart;\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { listOrders, getStatusValues, updateOrderStatus } from \"./apiAdmin\";\nimport moment from \"moment\";\nimport { AdminLinks } from \"../user/AdminDashboard\";\n\nconst Orders = () => {\n    const [orders, setOrders] = useState([]);\n    const [statusValues, setStatusValues] = useState([]);\n\n    const { user, token } = isAuthenticated();\n\n    const loadOrders = () => {\n        listOrders(user._id, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setOrders(data);\n            }\n        });\n    };\n\n    const loadStatusValues = () => {\n        getStatusValues(user._id, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setStatusValues(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadOrders();\n        loadStatusValues();\n    }, []);\n\n    const showOrdersLength = () => {\n        if (orders.length > 0) {\n            return (\n                <h1 className=\"text-danger display-2\">\n                    Total orders: {orders.length}\n                </h1>\n            );\n        } else {\n            return <h1 className=\"text-danger\">No orders</h1>;\n        }\n    };\n\n    const showInput = (key, value) => (\n        <div className=\"input-group mb-2 mr-sm-2\">\n            <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\">{key}</div>\n            </div>\n            <input\n                type=\"text\"\n                value={value}\n                className=\"form-control\"\n                readOnly\n            />\n        </div>\n    );\n\n    const handleStatusChange = (e, orderId) => {\n        updateOrderStatus(user._id, token, orderId, e.target.value).then(\n            data => {\n                if (data.error) {\n                    console.log(\"Status update failed\");\n                } else {\n                    loadOrders();\n                }\n            }\n        );\n    };\n\n    const showStatus = o => (\n        <div className=\"form-group\">\n            <h3 className=\"mark mb-4\">Status: {o.status}</h3>\n            <select\n                className=\"form-control\"\n                onChange={e => handleStatusChange(e, o._id)}\n            >\n                <option>Update Status</option>\n                {statusValues.map((status, index) => (\n                    <option key={index} value={status}>\n                        {status}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n\n    return (\n        <Layout\n            title=\"Orders\"\n            description={`G'day ${\n                user.name\n            }, you can manage all the orders here`}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n            <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-6 offset-md-2\">\n                    {showOrdersLength()}\n\n                    {orders.map((o, oIndex) => {\n                        return (\n                            <div\n                                className=\"mt-5\"\n                                key={oIndex}\n                                style={{ borderBottom: \"5px solid indigo\" }}\n                            >\n                                <h2 className=\"mb-5\">\n                                    <span className=\"bg-primary\">\n                                        Order ID: {o._id}\n                                    </span>\n                                </h2>\n\n                                <ul className=\"list-group mb-2\">\n                                    <li className=\"list-group-item\">\n                                        {showStatus(o)}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Transaction ID: {o.transaction_id}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Amount: ${o.amount}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Ordered by: {o.user.name}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Ordered on:{\" \"}\n                                        {moment(o.createdAt).fromNow()}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Delivery address: {o.address}\n                                    </li>\n                                </ul>\n\n                                <h3 className=\"mt-4 mb-4 font-italic\">\n                                    Total products in the order:{\" \"}\n                                    {o.products.length}\n                                </h3>\n\n                                {o.products.map((p, pIndex) => (\n                                    <div\n                                        className=\"mb-4\"\n                                        key={pIndex}\n                                        style={{\n                                            padding: \"20px\",\n                                            border: \"1px solid indigo\"\n                                        }}\n                                    >\n                                        {showInput(\"Product name\", p.name)}\n                                        {showInput(\"Product price\", p.price)}\n                                        {showInput(\"Product total\", p.count)}\n                                        {showInput(\"Product Id\", p._id)}\n                                    </div>\n                                ))}\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Orders;\n","import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { read, update, updateUser } from './apiUser';\n\nconst Profile = ({ match }) => {\n    const [values, setValues] = useState({\n        name: '',\n        email: '',\n        password: '',\n        error: false,\n        success: false\n    });\n\n    const { token } = isAuthenticated();\n    const { name, email, password, error, success } = values;\n\n    const init = userId => {\n        // console.log(userId);\n        read(userId, token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: true });\n            } else {\n                setValues({ ...values, name: data.name, email: data.email });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.userId);\n    }, []);\n\n    const handleChange = name => e => {\n        setValues({ ...values, error: false, [name]: e.target.value });\n    };\n\n    const clickSubmit = e => {\n        e.preventDefault();\n        update(match.params.userId, token, { name, email, password }).then(data => {\n            if (data.error) {\n                // console.log(data.error);\n                alert(data.error);\n            } else {\n                updateUser(data, () => {\n                    setValues({\n                        ...values,\n                        name: data.name,\n                        email: data.email,\n                        success: true\n                    });\n                });\n            }\n        });\n    };\n\n    const redirectUser = success => {\n        if (success) {\n            return <Redirect to=\"/cart\" />;\n        }\n    };\n\n    const profileUpdate = (name, email, password) => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input type=\"text\" onChange={handleChange('name')} className=\"form-control\" value={name} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input type=\"email\" onChange={handleChange('email')} className=\"form-control\" value={email} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input type=\"password\" onChange={handleChange('password')} className=\"form-control\" value={password} />\n            </div>\n\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\n                Submit\n            </button>\n        </form>\n    );\n\n    return (\n        <Layout title=\"Profile\" description=\"Update your profile\" className=\"container-fluid\">\n            <h2 className=\"mb-4\">Profile update</h2>\n            {profileUpdate(name, email, password)}\n            {redirectUser(success)}\n        </Layout>\n    );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { getProducts, deleteProduct } from \"./apiAdmin\";\nimport { AdminLinks } from \"../user/AdminDashboard\";\n\nconst ManageProducts = () => {\n    const [products, setProducts] = useState([]);\n\n    const { user, token } = isAuthenticated();\n\n    const loadProducts = () => {\n        getProducts().then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setProducts(data);\n            }\n        });\n    };\n\n    const destroy = productId => {\n        deleteProduct(productId, user._id, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                loadProducts();\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadProducts();\n    }, []);\n\n    return (\n        <Layout\n            title=\"Manage Products\"\n            description=\"Perform CRUD on products\"\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n            <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-7\">\n                    <h2 className=\"text-center\">\n                        Total {products.length} products\n                    </h2>\n                    <hr />\n                    <ul className=\"list-group\">\n                        {products.map((p, i) => (\n                            <li\n                                key={i}\n                                className=\"list-group-item d-flex justify-content-between align-items-center\"\n                            >\n                                <strong>{p.name}</strong>\n                                <Link to={`/admin/product/update/${p._id}`}>\n                                    <span className=\"badge badge-warning badge-pill\">\n                                        Update\n                                    </span>\n                                </Link>\n                                <span\n                                    onClick={() => destroy(p._id)}\n                                    className=\"badge badge-danger badge-pill\"\n                                >\n                                    Delete\n                                </span>\n                            </li>\n                        ))}\n                    </ul>\n                    <br />\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default ManageProducts;\n","import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { getProduct, getCategories, updateProduct } from './apiAdmin';\nimport { AdminLinks } from '../user/AdminDashboard';\n\nconst UpdateProduct = ({ match }) => {\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        price: '',\n        categories: [],\n        category: '',\n        shipping: '',\n        quantity: '',\n        photo: '',\n        loading: false,\n        error: false,\n        createdProduct: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n    const [categories, setCategories] = useState([]);\n\n    const { user, token } = isAuthenticated();\n    const {\n        name,\n        description,\n        price,\n        // categories,\n        category,\n        shipping,\n        quantity,\n        loading,\n        error,\n        createdProduct,\n        redirectToProfile,\n        formData\n    } = values;\n\n    const init = productId => {\n        getProduct(productId).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                // populate the state\n                setValues({\n                    ...values,\n                    name: data.name,\n                    description: data.description,\n                    price: data.price,\n                    category: data.category._id,\n                    shipping: data.shipping,\n                    quantity: data.quantity,\n                    formData: new FormData()\n                });\n                // load categories\n                initCategories();\n            }\n        });\n    };\n\n    // load categories and set form data\n    const initCategories = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setCategories(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.productId);\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        updateProduct(match.params.productId, user._id, token, formData).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    name: '',\n                    description: '',\n                    photo: '',\n                    price: '',\n                    quantity: '',\n                    loading: false,\n                    error: false,\n                    redirectToProfile: true,\n                    createdProduct: data.name\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Description</label>\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Price</label>\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Category</label>\n                <select onChange={handleChange('category')} className=\"form-control\">\n                    <option>Please select</option>\n                    {categories &&\n                        categories.map((c, i) => (\n                            <option key={i} value={c._id}>\n                                {c.name}\n                            </option>\n                        ))}\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Shipping</label>\n                <select onChange={handleChange('shipping')} className=\"form-control\">\n                    <option>Please select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Quantity</label>\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Update Product</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\n            <h2>{`${createdProduct}`} is updated!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    const redirectUser = () => {\n        if (redirectToProfile) {\n            if (!error) {\n                return <Redirect to=\"/\" />;\n            }\n        }\n    };\n\n    return (\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\n            <div className=\"row\">\n                <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-6 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                    {redirectUser()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default UpdateProduct;\n","import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { getCategory, updateCategory } from './apiAdmin';\nimport { AdminLinks } from '../user/AdminDashboard';\n// {category: [\"5cd0258f2793ec6e100bc191\"], price: []}\n// http://localhost:3000/admin/category/update/5cd0258f2793ec6e100bc191\nconst UpdateCategory = ({ match }) => {\n    const [values, setValues] = useState({\n        name: '',\n        error: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    // destructure user and token from localStorage\n    const { user, token } = isAuthenticated();\n\n    const { name, error, redirectToProfile } = values;\n\n    const init = categoryId => {\n        getCategory(categoryId, token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                // populate the state\n                setValues({\n                    ...values,\n                    name: data.name\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.categoryId);\n    }, []);\n\n    const handleChange = name => event => {\n        setValues({ ...values, error: false, [name]: event.target.value });\n    };\n\n    const submitCategoryForm = e => {\n        e.preventDefault();\n        // update with ? you should send category name otherwise what to update?\n        const category = {\n            name: name\n        };\n        updateCategory(match.params.categoryId, user._id, token, category).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    name: data.name,\n                    error: false,\n                    redirectToProfile: true\n                });\n            }\n        });\n    };\n\n    const updateCategoryForm = () => (\n        <div className=\"wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55\">\n            <form className=\"mb-5\" onSubmit={submitCategoryForm}>\n                <span className=\"login100-form-title p-b-32 m-b-7\">Update Category Form</span>\n                <span className=\"txt1 p-b-11\">Category Name</span>\n                <br />\n                <br />\n                <div className=\"wrap-input100 validate-input m-b-36\">\n                    <input\n                        onChange={handleChange('name')}\n                        value={name}\n                        className=\"input100\"\n                        type=\"text\"\n                        required\n                        name=\"name\"\n                    />\n                </div>\n                <div className=\"w-size25\">\n                    <button type=\"submit\" className=\"flex-c-m size2 bg1 bo-rad-23 hov1 m-text3 trans-0-4\">\n                        Save Changes\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n\n    const showError = () => (\n        <div className={'alert alert-danger'} role=\"alert\" style={{ display: error ? '' : 'none' }}>\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n            {error}\n        </div>\n    );\n\n    const redirectUser = () => {\n        if (redirectToProfile) {\n            if (!error) {\n                return <Redirect to=\"/admin/categories\" />;\n            }\n        }\n    };\n\n    const goBackBTN = () => {\n        return (\n            <div className=\"mt-5\">\n                <Link to=\"/admin/categories\" className=\"text-info\">\n                    Back To Admin Home\n                </Link>\n            </div>\n        );\n    };\n\n    return (\n        <Layout\n            title={`Hi ${user.name}`}\n            description={`This is Update Product Action Page`}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n            <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-6 offset-md-2 m-b-250 mb-5\">\n                    {showError()}\n                    {updateCategoryForm()}\n                    {goBackBTN()}\n                    {redirectUser()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default UpdateCategory;\n","\nimport React, { useState, useEffect } from 'react';\nimport Layout from './../../core/Layout';\nimport { isAuthenticated } from './../../auth';\nimport { Link } from 'react-router-dom';\nimport {createTopupThumb} from './../apiAdmin'\nimport { AdminLinks } from '../../user/AdminDashboard';\n\nconst AddTopupThumb = () => {\n    const [values, setValues] = useState({\n        title: '',\n        type: '',\n        thumb: '',\n        loading: false,\n        error: '',\n        createdTopup: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        title,\n        loading,\n        type,\n        error,\n        createdTopup,\n        redirectToProfile,\n        formData\n    } = values;\n\n\n        // load categories and set form data\n        const init = () => {\n            \n            setValues({\n                ...values,\n                formData: new FormData()\n             });\n                \n            \n        };\n    \n        useEffect(() => {\n            init();\n        }, []);\n\n\n    const handleChange = name => event => {\n        const value = name === 'thumb' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        createTopupThumb(user._id, token, formData).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    title: '',\n                    thumb: '',\n                    loading: false,\n                    createdProduct: data.title\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Game Thumbnail Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input onChange={handleChange('thumb')} type=\"file\" name=\"thumb\" accept=\"image/*\" />\n                </label>\n            </div>\n            <div className=\"form-group col-md-4\">\n                    \n                <label className=\"text-muted\">Type</label>\n                <select name=\"type\" onChange={handleChange('type')} className=\"form-control\">\n                    <option disabled selected>Please select type</option>\n                    <option value=\"inGame\">In Game</option>\n                    <option value=\"idCode\">Id Code</option>\n                        \n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Title of the Game</label>\n                <input onChange={handleChange('title')} type=\"text\" className=\"form-control\" value={title} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Create Topup Thumb</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdTopup ? '' : 'none' }}>\n            <h2>{`${createdTopup}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Add a new topup system\" description={`G'day ${user.name}, ready to add a new topup?`}>\n            <div className=\"row\">\n            <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-6 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddTopupThumb;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport Layout from './../../core/Layout';\nimport { isAuthenticated } from './../../auth';\nimport { getRechargePackagesByGameName, getWallet } from './../apiCore';\nimport { Redirect, useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { createTopupOrder } from './../apiCore';\nimport { showBalance } from './../../admin/apiAdmin';\n\n\n\nconst TopupForm = () => {\n\n    // Id for the game name to load packages under it\n    // id comes from parameter url\n    const { id, type } = useParams();\n    const [wallet, setWallet] = useState(null);\n    const [amount, setAmount] = useState(null);\n    const [adminLimit, setAdminLimit] = useState(0);\n    const [diamondValue, setDiamondValue] = useState(null);\n\n    const [values, setValues] = useState({\n        withSSLCommerz: 'n',\n        gameUserId: '',\n        accountType: '',\n        gmailOrFacebook: '',\n        password: '',\n        securityCode: '',\n        selectRecharge: '',\n        selectRecharges:[],\n        loading: false,\n        error: '',\n        createdTopupOrder: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        withSSLCommerz,\n        gameUserId,\n        accountType,\n        gmailOrFacebook,\n        password,\n        securityCode,\n        selectRecharge,\n        selectRecharges,\n        loading,\n        error,\n        createdTopupOrder,\n        redirectToProfile,\n        formData\n    } = values;\n\n\n\n    // load Recharge packages and set form data\n\n    const init = () => {\n        setValues({ ...values, loading: true });\n        getRechargePackagesByGameName(id).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    selectRecharges: data,\n                    formData: new FormData(),\n                    loading: false\n                });\n\n                \n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n        //setwallet\n        useEffect(()=>{\n            setValues({ ...values, loading: true });\n            getWallet(user._id).then(data=>{\n                if (!data) {\n                    //console.log(err)\n                } else {\n                    setWallet(data);\n                    setValues({ ...values, loading: false });\n                }\n            })\n        }, []);\n    \n    \n\n    //set admin limit\n    useEffect(()=>{\n        setValues({ ...values, loading: true });\n        showBalance().then(data=>{\n            if (!data) {\n                 //console.log(err)\n                setAdminLimit(0);\n            } else {\n                setDiamondValue(data[0].takaPerDiamond);\n                setAdminLimit(data[0].balance)\n                setValues({ ...values, loading: false  });\n            }\n        })\n    }, []);\n\n    useEffect(()=>{\n        if(selectRecharges.length > 0){\n    \n            let selectedpack = selectRecharges.filter(sr =>{\n                return sr._id === selectRecharge;\n            });\n            console.log('se', selectedpack);\n\n            if(selectedpack.length > 0){\n                setAmount(selectedpack[0].packageAmount);\n            }\n        }\n        \n    }, [selectRecharge])\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        createTopupOrder(user._id, token, formData, id, withSSLCommerz).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    gameUserId: '',\n                    accountType: '',\n                    gmailOrFacebook: '',\n                    password: '',\n                    selectRecharge: '',\n                    securityCode: '',\n                    loading: false,\n                    createdTopupOrder: data.name\n                });\n            }\n        });\n    };\n\n    //order wit ssl commerze\n    const orderWithSSLCommerz = ()=>{\n        setValues({ ...values, error: '', loading: true, withSSLCommerz: 'y' });\n\n        createTopupOrder(user._id, token, formData, id, 'y').then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                                setValues({\n                    ...values,\n                    \n                    gameUserId: '',\n                    accountType: '',\n                    gmailOrFacebook: '',\n                    password: '',\n                    selectRecharge: '',\n                    securityCode: '',\n                    loading: false,\n                    withSSLCommerz: 'n',\n                    createdTopupOrder: data.name\n                });\n                //console.log(data);\n                //redirect to payment page\n               window.location.replace(data.GatewayPageURL);\n                \n                setValues({\n                    ...values,\n                    \n                    gameUserId: '',\n                    accountType: '',\n                    gmailOrFacebook: '',\n                    password: '',\n                    selectRecharge: '',\n                    securityCode: '',\n                    loading: false,\n                    withSSLCommerz: 'n',\n                    createdTopupOrder: data.name\n                });\n            }\n        });\n    }\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Request a Topup</h4>\n            { type === 'inGame' ?\n                \n                <Fragment>\n                    {console.log(type)}\n                    <div className=\"row\">\n\n                    <div className=\"form-group col-md-4\">\n                        \n                        <label className=\"text-muted\">Account Type</label>\n                        <select name=\"accountType\" onChange={handleChange('accountType')} className=\"form-control\">\n                            <option disabled selected>Please select</option>\n                            <option value=\"facebook\">Facebook</option>\n                            <option value=\"gmail\">Gmail</option>\n                            \n                        </select>\n                    </div>\n\n                    <div className=\"form-group col-md-4\">\n                        \n                        {\n                            accountType === 'facebook' ? \n                                <label className=\"text-muted\">Your Facebook</label>\n                            :\n                            <Fragment>\n                            {\n                                accountType === 'gmail' ? \n                                    <label className=\"text-muted\">Your Gmailt</label>\n                                \n                                :\n                                <label className=\"text-muted\">Select Account type first</label>\n                                \n                            }\n                            </Fragment>\n                        }\n                        <input onChange={handleChange('gmailOrFacebook')} type=\"text\" className=\"form-control\" value={gmailOrFacebook} />\n                        \n                    </div>\n\n                    <div className=\"form-group col-md-4\">\n                        <label className=\"text-muted\">Password</label>\n                        <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" name=\"password\" value={password} />\n                    </div>\n                    </div>\n\n                    {\n                    accountType === 'gmail' ? \n                        <div className=\"form-group\">\n                            <label className=\"text-muted\">Security Code</label>\n                            <input onChange={handleChange('securityCode')} type=\"text\" className=\"form-control\" value={securityCode} />\n                        </div>\n                        :\n                        <Fragment></Fragment>\n                    }\n                </Fragment>:\n\n                <Fragment></Fragment>\n                \n            }\n\n            {\n                 type === 'codeId' ?\n                 \n                <div className=\"row\">\n                     <div className=\"form-group col-md-4\">\n                        <label className=\"text-muted\">Game Id</label>\n                        <input onChange={handleChange('gameUserId')} type=\"text\" className=\"form-control\" value={gameUserId} />\n                    </div>\n                    <div className=\"form-group col-md-4\">\n                        <label className=\"text-muted\">Password</label>\n                        <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" name=\"password\" value={password} />\n                    </div>\n                </div>\n                 \n                 :\n                 <Fragment></Fragment>\n            }\n            \n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Recharge Package</label>\n                <select name=\"selectRecharge\" onChange={handleChange('selectRecharge')} className=\"form-control\">\n                    <option disabled selected>Please select</option>\n                    {selectRecharges &&\n                        selectRecharges.map((c, i) => (\n                            \n                            <option key={i} value={c._id}>\n                                {c.packageName}\n                            </option>\n                            \n                        ))}\n                </select>\n            </div>\n\n            <div className=\"form-group col-md-4\">\n                <label className=\"text-muted\">Amount to pay: { amount ? <b>{amount}</b>: <b>0</b> }</label>\n            </div>\n\n            <div className=\"money\">\n                <h4>Your Balance: { wallet ? wallet.amount : <span>Loading...</span>}</h4>\n            </div>\n\n                            { wallet && amount ? wallet.amount < amount ? \n                                <h4>You have less balance than you have to pay. Please <Link to=\"/\"><button className=\"btn btn-primary\">add money</button></Link></h4>\n                                :\n                                <Fragment></Fragment>\n                                :\n                                <Fragment></Fragment>\n                            }\n\n                            { amount > adminLimit ? \n                                <h4>You are ordering more than admin can handle. Please select less</h4>\n                                :\n                                <Fragment></Fragment>\n                                \n                            }\n            <h4>Admin Balance: { adminLimit }</h4>\n\n            { diamondValue && amount ?\n                <p>You will receive - {parseInt(amount / diamondValue)} Diamonds </p>\n                :\n                <Fragment></Fragment>\n            }\n\n            <button className=\"btn btn-outline-primary\">Order With Balance</button>\n            <br />\n            <br />\n            <p onClick={()=>{orderWithSSLCommerz()}} className=\"btn btn-outline-primary\">Order With Card, Bkash and more</p>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdTopupOrder ? '' : 'none' }}>\n            <h2>{`${createdTopupOrder}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Request a topup\" description={`G'day ${user.name}, ready to add a new topup request?`}>\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default TopupForm;\n","import React, { useState, useEffect } from 'react';\nimport Layout from './../../core/Layout';\nimport { isAuthenticated } from './../../auth';\nimport { Link } from 'react-router-dom';\nimport {getTopupThumbs} from './../../core/apiCore'\nimport { createRechargePackage } from './../apiAdmin';\nimport { AdminLinks } from '../../user/AdminDashboard';\n\nconst AddRechargePackage = () => {\n    const [values, setValues] = useState({\n        topupGameNames: [],\n        topupGameName: '',\n        packageName: '',\n        packageAmount: '',\n        loading: false,\n        error: '',\n        createdRechargePackage: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        topupGameNames,\n        topupGameName,\n        packageName,\n        packageAmount,\n        error,\n        createdRechargePackage,\n        redirectToProfile,\n        formData,\n        loading\n    } = values;\n\n // load Topup Game names and set form data\n const init = () => {\n    setValues({ ...values, loading: true });\n    getTopupThumbs().then(data => {\n        if (data.error) {\n            setValues({ ...values, error: data.error });\n        } else {\n            setValues({\n                ...values,\n                topupGameNames: data,\n                formData: new FormData(),\n                loading: false,\n            });\n        }\n    });\n};\n\nuseEffect(() => {\n    init();\n}, []);\n\nconst handleChange = name => event => {\n    const value = name === 'photo' ? event.target.files[0] : event.target.value;\n    formData.set(name, value);\n    setValues({ ...values, [name]: value });\n};\n\nconst clickSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: '', loading: true });\n\n    createRechargePackage(user._id, token, formData).then(data => {\n        if (data.error) {\n            setValues({ ...values, error: data.error });\n        } else {\n            setValues({\n                ...values,\n                packageName: '',\n                packageAmount: '',\n                loading: false,\n                createdRechargePackage: data.name\n            });\n        }\n    });\n};\n\nconst newPostForm = () => (\n    <form className=\"mb-3\" onSubmit={clickSubmit}>\n        <h4>Create Racharge Package</h4>\n        \n        <div className=\"form-group\">\n            <label className=\"text-muted\">Game Name</label>\n            <select name=\"topupGameName\" onChange={handleChange('topupGameName')} className=\"form-control\">\n                <option disabled selected>Please select</option>\n                {topupGameNames &&\n                    topupGameNames.map((c, i) => (\n                        \n                        <option key={i} value={c._id}>\n                            {c.title}\n                        </option>\n                        \n                    ))}\n            </select>\n        </div>\n\n        <div className=\"form-group\">\n            <label className=\"text-muted\">Package Name</label>\n            <input name=\"packageName\" onChange={handleChange('packageName')} type=\"text\" className=\"form-control\" value={packageName} />\n        </div>\n\n        <div className=\"form-group\">\n            <label className=\"text-muted\">Package Price</label>\n            <input name=\"packageAmount\" onChange={handleChange('packageAmount')} type=\"number\" className=\"form-control\" value={packageAmount} />\n        </div>\n\n\n        <button className=\"btn btn-outline-primary\">Create Recharge Package</button>\n    </form>\n);\n\nconst showError = () => (\n    <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n        {error}\n    </div>\n);\n\nconst showSuccess = () => (\n    <div className=\"alert alert-info\" style={{ display: createdRechargePackage ? '' : 'none' }}>\n        <h2>{`${createdRechargePackage}`} is created!</h2>\n    </div>\n);\n\nconst showLoading = () =>\n    loading && (\n        <div className=\"alert alert-success\">\n            <h2>Loading...</h2>\n        </div>\n    );\n\nreturn (\n    <Layout title=\"Add a new recharge package\" description={`G'day ${user.name}, ready to add a new recharge package?`}>\n        <div className=\"row\">\n        <div className=\"col-md-3\"><AdminLinks /></div>\n            <div className=\"col-md-6 offset-md-2\">\n                {showLoading()}\n                {showSuccess()}\n                {showError()}\n                {newPostForm()}\n            </div>\n        </div>\n    </Layout>\n);\n};\n\nexport default AddRechargePackage;\n","import React, {useEffect, useState, Fragment} from 'react';\nimport { isAuthenticated } from './../../auth';\nimport { getTopupOrdersAdmin, updateTopupOrderAdmin } from '../apiAdmin';\nimport { Link } from 'react-router-dom';\nimport Layout from '../../core/Layout';\nimport { AdminLinks } from '../../user/AdminDashboard';\nimport { sendMessage } from '../../core/apiCore';\n\nconst ShowTopupOrders = ()=>{\n    const [orders, setOrders] = useState();\n\n    const {user, token} = isAuthenticated();\n\n    useEffect(()=>{\n        getTopupOrdersAdmin(user._id, token).then(order=>{\n            \n            setOrders(order);\n        })\n    \n    },[]);\n\n    // update order status\n    const markTopupOrderStatus = (orderId, status, customerId) => {\n            updateTopupOrderAdmin(orderId, user._id, token, {status, customerId})\n                .then(data => {\n                    if (data.error) {\n                        console.log(\"couldn't happen\");\n                    } else {\n                        \n                        console.log('updated');\n                    }\n        })\n\n    }\n\n    return(\n        <Fragment>\n            \n        <Layout\n            title=\"All topup orders\"\n            description=\"See new orders\"\n        ></Layout>\n\n        <div className=\"row\">\n        <div className=\"col-md-3\"><AdminLinks /></div>\n            <div className=\"col-md-6\">\n            {\n                orders ? \n                orders.map(order=>{\n                    return(\n                        \n                                <div className=\"col-md-6 p-5\" key={order._id}>\n                                    <Link exact to={`/topup-orders/${order._id}`}>\n                                        \n                                        <h6>Requested by: { order.user.name }</h6>\n                                    </Link>\n                                        <h6 className=\"hidden\">{ order._id }</h6>\n                                        <h6>Game: {order.topupGameId.title}</h6>\n                                        <h6>Pecharge Package: {order.selectRecharge.packageName}</h6>\n                                        <h6>Account type: { order.accountType }</h6>\n                                        <h6>Number: { order.gmailOrFacebook }</h6>\n                                        <h6>Password: { order.password }</h6>\n                                        <h6>Paid Amount: { order.price } Tk</h6>\n                                        <h6>Status: {order.status} </h6>\n                                        \n                                        \n                                        <Link exact to={`/messages/pair/${order.pair._id}`} >\n                                            <h5 className=\"border\"><b>Send message</b></h5>\n                                        </Link>\n\n                                        { order.status === 'completed' || order.status === 'cancelled' ?\n                                            <Fragment></Fragment>\n                                            :\n                                \n                                        <Fragment>\n                                            <b>Assigned to:</b> {\n                                                order.assignedTo ?\n                                                <p>{order.assignedTo.name}</p>\n                                                :\n                                                <Fragment>\n                                                <p>none</p>\n                                                    <Link exact to={`/admin/assign-topup-order/${order._id}`} className=\"border btn btn-secondary\"><b>Assign it to a admin</b></Link>\n                                                </Fragment>\n                                            }\n                                            <p className=\"btn btn-primary\" role=\"button\" onClick={() => { markTopupOrderStatus(order._id, 'completed', order.user._id) }}>Mark completed</p>\n                                            <p className=\"btn btn-primary\" role=\"button\" onClick={() => { markTopupOrderStatus(order._id, 'cancelled', order.user._id) }}>Mark cancelled</p>\n                                        </Fragment>\n                                        }\n                                        \n                                    \n                                </div>          \n                       \n                    )\n                })\n                :\n                <Fragment>Loading...</Fragment>\n            }\n            </div>\n        </div>\n        </Fragment>\n\n    )\n}\n\nexport default ShowTopupOrders;","import React, { useState, useEffect } from 'react';\nimport Layout from './../../core/Layout';\nimport { isAuthenticated } from './../../auth';\nimport { addBalance, showBalance } from './../apiAdmin';\nimport { AdminLinks } from '../../user/AdminDashboard';\n\nconst AddBalance = () => {\n    const [values, setValues] = useState({\n        balance: '',\n        oldBalance: 0,\n        loading: false,\n        error: '',\n        createdBalance: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        balance,\n        oldBalance,\n        loading,\n        error,\n        createdBalance,\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        showBalance().then(data => {\n            \n                if (data.error) {\n                    setValues({ ...values, error: data.error });\n                } else {\n                    let stock = 0;\n                    if(data.length === 1){\n                        stock = data[0].balance;\n                    }\n                    setValues({\n                        ...values,\n                        oldBalance: stock,\n                        formData: new FormData()\n                    });\n                }\n            \n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        addBalance(user._id, token, {balance}).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                let newOldBalance = oldBalance + Number(balance);\n                if(newOldBalance < 0){\n                    newOldBalance = 0;\n                }\n                setValues({\n                    ...values,\n                    oldBalance: newOldBalance,\n                    balance: '',\n                    loading: false,\n                    createdBalance: 'Balance'\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Balance Stock in BDT: {oldBalance} </h4>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Add more balance or subtract by putting - before</label>\n                <input onChange={handleChange('balance')} type=\"number\" className=\"form-control\" value={balance} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Add Balance</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdBalance ? '' : 'none' }}>\n            <h2>{`${createdBalance}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Add balance\" description={`for stock of topup ?`}>\n            <div className=\"row\">\n                <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-6 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddBalance;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Layout from '../core/Layout';\nimport { AdminLinks } from '../user/AdminDashboard';\nimport { UserLinks } from './../user/UserDashboard';\nimport { isAuthenticated } from '../auth';\nimport { getMessage } from '../core/apiCore';\n\nconst ShowMessagePair = () => {\n    const [messagesPair, setMessagesPair] = useState(null);\n    const { user, token } = isAuthenticated();\n\n    useEffect(() => {\n        getMessage(user._id, token).then(data => {\n            if (!data) {\n                console.log('no message')\n            } else {\n                \n                setMessagesPair(data);\n                \n            }\n        })\n    }, []);\n\n    return (\n\n\n\n        <Layout\n            title={`Hi ${user.name}`}\n            description={`This is Message Page`}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                {\n                    user.role === 1 ?\n                        <div className=\"col-md-3\"><AdminLinks /></div>\n                        :\n                        <div className=\"col-md-3\"><UserLinks /></div>\n                }\n            \n                <div className=\"col-md-6 offset-md-2 m-b-250 mb-5\">\n                    \n                    {\n                        messagesPair ?\n                            messagesPair.map(messages=>{\n                                return (\n                                    <div className=\"border p-1 m-3\" key={messages._id}>\n                                        <Link exact to={`/messages/pair/${messages._id}/`}>\n                                            <p>By: {messages.user.name}</p>\n                                            {\n                                                messages.message.filter(receivedMsg => {\n                                                    return (receivedMsg.user === user._id && receivedMsg.seen === false)\n                                                }).length > 0 ?\n                                                    <p>Unread messages</p>\n                                                    :\n                                                    <Fragment></Fragment>\n                                                \n                                            }\n                                            <p>Message: {messages.message[messages.message.length - 1].message}</p>\n                                            <p>To: {messages.receiver.name}</p>\n                                            \n                                        </Link>\n                                    </div>\n                                       \n                                )\n                            \n                            })\n                            :\n                            <Fragment></Fragment>\n                    }\n                </div>  \n               \n            </div>\n        </Layout>\n    )\n}\n\nexport default ShowMessagePair;\n\n\n","import React, { useState, useEffect, Fragment, useRef, useContext } from 'react';\nimport Layout from '../core/Layout';\nimport io from \"socket.io-client\";\nimport { isAuthenticated } from '../auth';\nimport { useParams } from 'react-router-dom';\nimport { messageByPairId, sendMessage } from '../core/apiCore';\nimport { AdminLinks } from '../user/AdminDashboard';\nimport { UserLinks } from '../user/UserDashboard';\nimport { NotificationsContext } from '../context/notificationsContext';\n\n\nconst ShowChat = () => {\n    const socketRef = useRef();\n    const [ notifications, setNotifications ] = useContext(NotificationsContext);\n    const { pairId } = useParams();\n    const [values, setValues] = useState({\n        receiverId: '',\n        messages: [],\n        message: '',\n        loading: false,\n        error: '',\n        createdMessage: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    //connect socket\n    socketRef.current = io.connect('/');\n\n    const { user, token } = isAuthenticated();\n    const {\n        receiverId,\n        messages,\n        message,\n        loading,\n        error,\n        createdMessage,\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        messageByPairId(user._id, token, pairId).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                let realReciever = '';\n                if (data.user._id === user._id) {\n                    realReciever = data.receiver._id;\n                } else {\n                    realReciever = data.user._id;\n                }\n                setValues({\n                    ...values,\n                    receiverId: realReciever,\n                    messages: data.message,\n                    formData: new FormData()\n                });\n                \n                \n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n        const newMsgDetails = {};\n        newMsgDetails.userId = user;\n        newMsgDetails.receiverId = receiverId;\n        newMsgDetails.pairId = pairId;\n        newMsgDetails.message = message;\n        \n        \n        socketRef.current.emit('sendMessage', newMsgDetails);\n\n        socketRef.current.on('newMessage', msg => {\n            \n            setValues({\n                ...values,\n                messages: [...messages, msg],\n                message: '',\n                loading: false,\n                createdMessage: 'Message loaded'\n            });\n            \n        });\n\n        \n\n        // sendMessage(token, user._id, receiverId, pairId, formData).then(data => {\n        //     if (data.error) {\n        //         setValues({ ...values, error: data.error });\n        //     } else {\n        //         setValues({\n        //             ...values,\n        //             message: '',\n        //             loading: false,\n        //             createdMessage: data.message\n        //         });\n        //         console.log('message sent')\n        //     }\n        // });\n    };\n\n    //get messages\n    useEffect(() => {\n        socketRef.current.on('newMessage', msg => {\n            \n            setValues({\n                ...values,\n                messages: [...messages, msg],\n                message: '',\n                createdMessage: 'Message loaded'\n            });\n            //savedReceivedMessageAsSeenByMsgId(user, token, msgId)\n            \n        });\n    }, [])\n\n\n    const newPostForm = () => (\n        <Fragment>\n            <div className=\"messages\">\n                {\n                    messages.map(msg => {\n                        return (\n                            <p className=\"border message\">{msg.message}</p>\n                        )\n                        \n                    })\n                }\n            </div>\n            <form className=\"mb-3\" onSubmit={clickSubmit}>\n                <div className=\"form-group\">\n                    \n                    <input placeholder=\"type\" onChange={handleChange('message')} type=\"text\" className=\"form-control\" value={message} />\n                </div>\n\n                <button className=\"btn btn-outline-primary\">Send Message</button>\n            </form>\n        </Fragment>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdMessage ? '' : 'none' }}>\n            <h2>{`${createdMessage}`}!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n    \n    \n    return (\n        <Layout title=\"messages\">\n            <div className=\"row\">\n                {user.role === 1 ?\n                    <div className=\"col-md-3\"><AdminLinks /></div>\n                    :\n                    <div className=\"col-md-3\"><UserLinks /></div>\n                }\n            \n                <div className=\"col-md-6 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default ShowChat;\n","import React, {useEffect, useState, Fragment} from 'react';\nimport { isAuthenticated } from './../../auth';\nimport { getAssignedTopupOrdersAdmin, updateTopupOrderAdmin } from '../apiAdmin';\nimport { Link } from 'react-router-dom';\nimport Layout from '../../core/Layout';\nimport { AdminLinks } from '../../user/AdminDashboard';\nimport { sendMessage } from '../../core/apiCore';\n\nconst AssignedTopupOrders = ()=>{\n    const [orders, setOrders] = useState();\n    const {user, token} = isAuthenticated();\n\n    useEffect(()=>{\n        getAssignedTopupOrdersAdmin(user._id, token).then(order=>{\n            \n            setOrders(order);\n        })\n    \n    },[]);\n\n    // update order status\n    const markTopupOrderStatus = (orderId, status, customerId) => {\n            updateTopupOrderAdmin(orderId, user._id, token, {status, customerId})\n                .then(data => {\n                    if (data.error) {\n                        console.log(\"couldn't happen\");\n                    } else {\n                        \n                        console.log('updated');\n                    }\n        })\n\n    }\n\n    return(\n        <Fragment>\n            \n        <Layout\n            title=\"All topup orders\"\n            description=\"See new orders\"\n        ></Layout>\n\n        <div className=\"row\">\n        <div className=\"col-md-3\"><AdminLinks /></div>\n            <div className=\"col-md-6\">\n                <p>Assigned to you to complete</p>\n            {\n                orders ? \n                orders.map(order=>{\n                    return(\n                        \n                                <div className=\"col-md-6 p-5\" key={order._id}>\n                                    <Link exact to={`/topup-orders/${order._id}`}>\n                                        \n                                        <h6>Requested by: { order.user.name }</h6>\n                                    </Link>\n                                        <h6 className=\"hidden\">{ order._id }</h6>\n                                        <h6>Game: {order.topupGameId.title}</h6>\n                                        <h6>Pecharge Package: {order.selectRecharge.packageName}</h6>\n                                        <h6>Account type: { order.accountType }</h6>\n                                        <h6>Number: { order.gmailOrFacebook }</h6>\n                                        <h6>Password: { order.password }</h6>\n                                        <h6>Paid Amount: { order.price } Tk</h6>\n                                        <h6>Status: { order.status } </h6>\n\n                                        <Link exact to={`/messages/pair/${order.pair._id}`} >\n                                            <h5 className=\"border\"><b>Send message</b></h5>\n                                        </Link>\n\n                                        { order.status === 'completed' || order.status === 'cancelled' ?\n                                            <Fragment></Fragment>\n                                            :\n                                \n                                        <Fragment>\n                                            <p className=\"btn btn-primary\" role=\"button\" onClick={() => { markTopupOrderStatus(order._id, 'completed', order.user._id) }}>Mark completed</p>\n                                            <p className=\"btn btn-primary\" role=\"button\" onClick={() => { markTopupOrderStatus(order._id, 'cancelled', order.user._id) }}>Mark cancelled</p>\n                                        </Fragment>\n                                        }\n                                        \n                                    \n                                </div>          \n                       \n                    )\n                })\n                :\n                <Fragment>Loading...</Fragment>\n            }\n            </div>\n        </div>\n        </Fragment>\n\n    )\n}\n\nexport default AssignedTopupOrders;","import React, { Fragment, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport { isAuthenticated } from '../../auth';\nimport Layout from '../../core/Layout';\nimport { AdminLinks } from '../../user/AdminDashboard';\nimport { getAllAdmins, assignTopupOrder } from './../apiAdmin';\nimport './showAdmins.css';\n\nconst ShowAdmins = ()=>{\n    const history = useHistory();\n    const [admins, setAdmins] = useState([]);\n    const {topupOrderId} = useParams();\n    const { user, token } = isAuthenticated();\n\n    useEffect(()=>{\n        getAllAdmins(user, token).then(data=>{\n            console.log(data);\n            setAdmins(data);\n        })\n    },[]);\n\n    //assign order to admin onclick\n    const assignTopupToAdmin = (adminId)=>{\n        assignTopupOrder(user, token, adminId, topupOrderId).then(data=>{\n            if(data){\n                 history.push('/admin/topup-orders')\n            }else{\n                console.log('err')\n            }\n           \n\n        })\n    }\n\n    return(\n        <Fragment>\n            <Layout\n                title=\"Assign this order\"\n                description=\"To a admin agent\"\n            >\n\n            </Layout>\n            <div className=\"row\">\n                <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-7\">\n                    { admins ?\n                        admins.map(admin=>{\n                            return(\n                                <div className=\"col-md-10\">\n                                    <p onClick={()=>{assignTopupToAdmin(admin._id)}} className=\"border pointer\">{admin.name}: {admin.email}, click to assign</p>\n                                </div>\n                            )\n                        })\n                        :\n                        <Fragment></Fragment>\n                    }\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ShowAdmins;","import React, { useState, useEffect } from 'react';\nimport Layout from '../../core/Layout';\nimport { isAuthenticated } from '../../auth';\nimport { addDiamondValue, showBalance } from '../apiAdmin';\nimport { AdminLinks } from '../../user/AdminDashboard';\n\nconst ModifyDiamondsValue = () => {\n    const [values, setValues] = useState({\n        diamondValue: '',\n        oldDiamondValue: 0,\n        loading: false,\n        error: '',\n        createdDiamondValue: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        diamondValue,\n        oldDiamondValue,\n        loading,\n        error,\n        createdDiamondValue,\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        showBalance().then(data => {\n            \n                if (data.error) {\n                    setValues({ ...values, error: data.error });\n                } else {\n                    console.log(data);\n                    let diamondVal = 0;\n                    if(data.length === 1){\n                        diamondVal = data[0].takaPerDiamond;\n                    }\n                    setValues({\n                        ...values,\n                        oldDiamondValue: diamondVal,\n                        formData: new FormData()\n                    });\n                }\n            \n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        addDiamondValue(user._id, token, {diamondValue}).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                \n                setValues({\n                    ...values,\n                    oldDiamondValue: diamondValue,\n                    diamondValue: '',\n                    loading: false,\n                    createdDiamondValue: 'Balance'\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>How many taka equals to 1 diamond? Now {oldDiamondValue}tk = 1 Diamond</h4>\n\n            <div className=\"form-group\">\n                \n                <input onChange={handleChange('diamondValue')} type=\"number\" className=\"form-control\" value={diamondValue} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Add Diamond value</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdDiamondValue ? '' : 'none' }}>\n            <h2>{`${createdDiamondValue}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Add balance\" description={`for stock of topup ?`}>\n            <div className=\"row\">\n                <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-6 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default ModifyDiamondsValue;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport Layout from './../../core/Layout';\nimport { isAuthenticated } from './../../auth';\nimport { addCoupon, showCoupon } from './../apiAdmin';\nimport { AdminLinks } from '../../user/AdminDashboard';\nimport { getDiamonds, collectCouponByUser,getCouponsByUser } from '../../user/apiUser';\nimport './coupon.css'\n\nconst AddCoupon = () => {\n     const [userCoupons, setUserCoupons] = useState([]);\n    const [diamondAmount, setDiamondAmount] = useState(0);\n    const [values, setValues] = useState({\n        coupons: [],\n        couponName: '',\n        couponCode: '',\n        shortDetails: '',\n        discounts: 0,\n        diamonds: 0,\n        loading: false,\n        error: '',\n        createdCoupon: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        coupons,\n        discounts,\n        diamonds,\n        couponName,\n        couponCode,\n        shortDetails,\n        loading,\n        error,\n        createdCoupon,\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        showCoupon().then(data => {\n            \n                if (data.error) {\n                    setValues({ ...values, error: data.error });\n                } else {\n                    \n                    setValues({\n                        ...values,\n                        coupons: data,\n                        formData: new FormData()\n                    });\n                }\n            \n        });\n\n        getDiamonds(user, token).then(data=>{\n            if (data.error) {\n                setDiamondAmount(0);\n            } else{\n                setDiamondAmount(data.amount)\n            }\n        });\n\n        getCouponsByUser(user, token).then(data=>{\n            if(data.error){\n                setUserCoupons([])\n            }else{\n                if(user.coupon){\n                    setUserCoupons(data.coupon)\n                }else{\n                    setUserCoupons([])\n                }\n                \n            }\n        })\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        addCoupon(user._id, token, formData).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                \n                setValues({\n                    ...values,\n                    coupons: [...coupons, data],\n                    loading: false,\n                    createdCoupon: 'Coupon'\n                });\n            }\n        });\n    };\n\n    const collectCoupon = (couponId)=>{\n        collectCouponByUser(couponId, user, token).then(data=>{\n            if(data.error){\n                setValues({ ...values, error: data.error });\n            }else{\n                setUserCoupons(...userCoupons, data);\n            }\n        })\n    }\n\n    const newPostForm = () => (\n        <Fragment>\n            <form className=\"mb-3\" onSubmit={clickSubmit}>\n                <h4>Add a coupon </h4>\n                <div className=\"form-group\">\n                    <label className=\"text-muted\">Coupon Name</label>\n                    <input onChange={handleChange('couponName')} type=\"text\" className=\"form-control\" value={couponName} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label className=\"text-muted\">Coupon Code</label>\n                    <input onChange={handleChange('couponCode')} type=\"text\" className=\"form-control\" value={couponCode} />\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"text-muted\">Short Details</label>\n                    <input onChange={handleChange('shortDetails')} type=\"text\" className=\"form-control\" value={shortDetails} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label className=\"text-muted\">Discounts in Taka</label>\n                    <input onChange={handleChange('discounts')} type=\"number\" className=\"form-control\" value={discounts} />\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"text-muted\">Diamonds amount</label>\n                    <input onChange={handleChange('diamonds')} type=\"number\" className=\"form-control\" value={diamonds} />\n                </div>\n\n                <button className=\"btn btn-outline-primary\">Add a coupon</button>\n            </form>\n            <h4>Your diamonds or purchased points: {diamondAmount} </h4>\n            <h3>All coupons</h3>\n            <div className=\"row\">\n                \n                {\n                    coupons.map((coupon, index)=>{\n                        return(\n                            <div className=\"border col-md-5 bg-new p-2\">\n                                <p>{index + 1}</p>\n                                <h3>{coupon.couponName}</h3>\n                                <h5 className=\"bg-light p-2 rounded\"><b>{coupon.couponCode}</b></h5>\n                                <p>Discounts tk: - {coupon.discounts}</p>\n                                <p>Diamond need to buy: {coupon.diamonds}</p>\n                                { coupon.diamonds > diamondAmount ?\n                                    <p>You do not have enought diamond to avail this coupon</p>\n                                    :\n                                    <Fragment>\n                                        {userCoupons.indexOf(coupon._id) === -1 ?\n                                        <h3 onClick={()=>{collectCoupon(coupon._id)}} className=\"btn btn-primary cursor\" role=\"btn\" ><b>Collect</b></h3>\n                                        :\n                                        <h3 className=\"btn btn-primary cursor\" role=\"btn\" ><b>Collected</b></h3>\n\n                                        }\n                                    </Fragment>\n                                }\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </Fragment>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdCoupon ? '' : 'none' }}>\n            <h2>{`${createdCoupon}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Add balance\" description={`for stock of topup ?`}>\n            <div className=\"row\">\n                <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-6 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddCoupon;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport Layout from './../../core/Layout';\nimport { isAuthenticated } from './../../auth';\nimport { showCoupon } from './../apiAdmin';\nimport { UserLinks } from '../../user/UserDashboard';\nimport { getDiamonds, collectCouponByUser, getCouponsByUser } from '../../user/apiUser';\nimport './coupon.css'\n\nconst ShowCoupon = () => {\n    const [userCoupons, setUserCoupons] = useState([]);\n    const [diamondAmount, setDiamondAmount] = useState(0);\n    const [values, setValues] = useState({\n        coupons: [],\n        loading: false,\n        error: '',\n        boughtCoupon: '',\n        redirectToProfile: false,\n    });\n\n    const {coupons, loading, error, boughtCoupon, redirectToProfile} = values;\n\n\n    const { user, token } = isAuthenticated();\n\n    // load categories and set form data\n    const init = () => {\n        showCoupon().then(data => {\n            \n                if (data.error) {\n                    setValues({ ...values, error: data.error });\n                } else {\n                    \n                    setValues({...values, coupons: data});\n                }\n            \n        });\n\n        getDiamonds(user, token).then(data=>{\n            if (data.error) {\n                setDiamondAmount(0);\n            } else{\n                setDiamondAmount(data.amount)\n            }\n        });\n\n        getCouponsByUser(user, token).then(data=>{\n            if(data.error){\n                setUserCoupons([])\n            }else{\n                if(user.coupon){\n                    setUserCoupons(data.coupon)\n                }else{\n                    setUserCoupons([])\n                }\n                \n            }\n        })\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n\n    // const clickSubmit = event => {\n    //     event.preventDefault();\n    //     setValues({ ...values, error: '', loading: true });\n\n    //     addCoupon(user._id, token, formData).then(data => {\n    //         if (data.error) {\n    //             setValues({ ...values, error: data.error });\n    //         } else {\n                \n    //             setValues({\n    //                 ...values,\n    //                 coupons: [...coupons, data],\n    //                 loading: false,\n    //                 createdCoupon: 'Coupon'\n    //             });\n    //         }\n    //     });\n    // };\n\n    //collect coupon\n    const collectCoupon = (couponId)=>{\n        collectCouponByUser(couponId, user, token).then(data=>{\n            if(data.error){\n                setValues({ ...values, error: data.error });\n            }else{\n                setUserCoupons(...userCoupons, data);\n            }\n        })\n    }\n\n    const newPostForm = () => (\n        <Fragment>\n            <h4>Your diamonds or purchased points: {diamondAmount} </h4>\n\n            <h3>All coupons</h3>\n            <div className=\"row\">\n                \n                {\n                    coupons.map((coupon, index)=>{\n                        return(\n                            <div className=\"border col-md-5 bg-new p-2\">\n                                <p>{index + 1}</p>\n                                <h3>{coupon.couponName}</h3>\n                                <h5 className=\"bg-light p-2 rounded\"><b>{coupon.couponCode}</b></h5>\n                                <p>Discounts tk: - {coupon.discounts}</p>\n                                <p>Diamond need to buy: {coupon.diamonds}</p>\n                                { coupon.diamonds > diamondAmount ?\n                                    <p>You do not have enought diamond to avail this coupon</p>\n                                    :\n                                    <Fragment>\n                                        {userCoupons.filter(coupon._id) === -1 ?\n                                        <h3 onClick={()=>{collectCoupon(coupon._id)}} className=\"btn btn-primary cursor\" role=\"btn\" ><b>Collect</b></h3>\n                                        :\n                                        <h3 className=\"btn btn-primary cursor\" role=\"btn\" ><b>Collected</b></h3>\n\n                                        }\n                                    </Fragment>\n                                }\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </Fragment>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: boughtCoupon ? '' : 'none' }}>\n            <h2>{`${boughtCoupon}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Add balance\" description={`for stock of topup ?`}>\n            <div className=\"row\">\n                <div className=\"col-md-3\"><UserLinks /></div>\n                <div className=\"col-md-6 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default ShowCoupon;\n","import React, { Fragment } from 'react';\nimport {useParams} from 'react-router-dom';\nimport Layout from '../Layout';\n\nconst TopupOrderSuccess = ()=>{\n    const {transactionId} = useParams();\n\n\n    return(\n        <Fragment>\n            <Layout />\n            <h4>Order Successfull</h4>\n\n            <p>Please keep this {transactionId} - transaction id to contact us if your paid but order isn't saved</p>\n        </Fragment>\n    )\n}\n\nexport default TopupOrderSuccess;","import React, { Fragment } from 'react';\nimport {useParams} from 'react-router-dom';\nimport Layout from '../Layout';\n\nconst TopupOrderFail = ()=>{\n    const {transactionId} = useParams();\n\n\n    return(\n        <Fragment>\n            <Layout />\n            <h4>Order Failed. Please order again</h4>\n\n            <p>Please keep this {transactionId} - transaction id to contact us if you paid but order isn't saved</p>\n        </Fragment>\n    )\n}\n\nexport default TopupOrderFail;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Signup from './user/Signup';\nimport Signin from './user/Signin';\nimport Home from './core/Home';\nimport PrivateRoute from './auth/PrivateRoute';\nimport Dashboard from './user/UserDashboard';\nimport AdminRoute from './auth/AdminRoute';\nimport AdminDashboard from './user/AdminDashboard';\nimport AddCategory from './admin/AddCategory';\nimport AddProduct from './admin/AddProduct';\nimport Shop from './core/Shop';\nimport Product from './core/Product';\nimport Cart from './core/Cart';\nimport Orders from './admin/Orders';\nimport Profile from './user/Profile';\nimport ManageProducts from './admin/ManageProducts';\nimport UpdateProduct from './admin/UpdateProduct';\nimport UpdateCategory from './admin/updateCategory';\nimport AddTopupThumb from './admin/topup/AddTopupThumb';\nimport TopupForm from './core/topup/TopupForm.js';\nimport AddRechargePackage from './admin/rechargePackage/AddRechargePackage';\nimport ShowTopupOrders from './admin/topupOrder/ShowTopupOrders';\nimport AddBalance from './admin/balance/AddBalance';\nimport ShowMessagePair from './message/ShowMessagePair';\nimport ShowChat from './message/ShowChat';\nimport { UserProvider } from './context/notificationsContext';\nimport AssignedTopupOrders from './admin/topupOrder/AssignedTopupOrders';\nimport ShowAdmins from './admin/topupOrder/ShowAdmins';\nimport ModifyDiamondsValue from './admin/diamonds/ModifyDiamondsValue';\nimport AddCoupon from './admin/coupon/AddCoupon';\nimport ShowCoupon from './admin/coupon/ShowCoupon';\nimport TopupOrderSuccess from './core/topup/TopupOrderSuccess';\nimport TopupOrderFail from './core/topup/TopupOrderFail';\n\nconst Routes = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                \n                <Route path=\"/shop\" exact component={Shop} />\n                <Route path=\"/signin\" exact component={Signin} />\n                <Route path=\"/signup\" exact component={Signup} />\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/product/:productId\" exact component={Product} />\n                <Route path=\"/cart\" exact component={Cart} />\n                <Route path=\"/topup-order/success/:transactionId\" exact component={TopupOrderSuccess} />\n                <Route path=\"/topup-order/fail/:transactionId\" exact component={TopupOrderFail} />\n                \n                <UserProvider>\n                    <PrivateRoute path=\"/user/coupons\" exact component={ ShowCoupon } />\n                    <AdminRoute path=\"/admin/add-coupons\" exact component={ AddCoupon } />\n                    <AdminRoute path=\"/admin/diamond-value\" exact component={ ModifyDiamondsValue } />\n                    <AdminRoute path=\"/admin/topup\" exact component={AddTopupThumb} />\n                    <AdminRoute path=\"/admin/assign-topup-order/:topupOrderId\" exact component={ShowAdmins} />\n                    <AdminRoute path=\"/admin/balance-stock\" exact component={ AddBalance } />\n                    <AdminRoute path=\"/admin/topup-orders\" exact component={ShowTopupOrders} />\n                    <AdminRoute path=\"/admin/assigned-topup-orders\" exact component={AssignedTopupOrders} />\n                    <AdminRoute path=\"/admin/recharge-package\" exact component={AddRechargePackage} />\n                    <PrivateRoute path=\"/topups/:id/type/:type\" exact component={TopupForm} />\n                    <PrivateRoute path=\"/user/messages\" exact component={ShowMessagePair} />\n                    <AdminRoute path=\"/admin/messages\" exact component={ShowMessagePair} />\n                    <PrivateRoute path=\"/messages/pair/:pairId\" exact component={ShowChat} />\n                    \n                    <PrivateRoute path=\"/user/dashboard\" exact component={Dashboard} />\n                    <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashboard} />\n                    <AdminRoute path=\"/create/category\" exact component={AddCategory} />\n                    <AdminRoute path=\"/create/product\" exact component={AddProduct} />\n                    \n                    <AdminRoute path=\"/admin/orders\" exact component={Orders} />\n                    <PrivateRoute path=\"/profile/:userId\" exact component={Profile} />\n                    <PrivateRoute path=\"/admin/products\" exact component={ManageProducts} />\n                    <AdminRoute path=\"/admin/product/update/:productId\" exact component={UpdateProduct} />\n                    <AdminRoute path=\"/admin/category/update/:categoryId\" exact component={UpdateCategory} />\n                </UserProvider>\n            </Switch>\n        </BrowserRouter>\n    );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from \"./Routes\";\n\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/Logo.e93727e0.png\";"],"sourceRoot":""}