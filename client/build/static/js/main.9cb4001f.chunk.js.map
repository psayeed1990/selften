{"version":3,"sources":["config.js","auth/index.js","core/cartHelpers.js","core/apiCore.js","core/ShowImage.js","core/Card.js","core/Search.js","core/Menu.js","core/Layout.js","user/Signup.js","user/Signin.js","core/ShowThumb.js","admin/topup/ShowTopups.js","core/Home.js","auth/PrivateRoute.js","user/apiUser.js","user/UserDashboard.js","auth/AdminRoute.js","context/notificationsContext.js","user/AdminDashboard.js","admin/apiAdmin.js","admin/AddCategory.js","admin/AddProduct.js","core/Checkbox.js","core/RadioBox.js","core/fixedPrices.js","core/Shop.js","core/SingleProductCard.js","core/Product.js","core/Checkout.js","core/Cart.js","admin/Orders.js","user/Profile.js","admin/ManageProducts.js","admin/UpdateProduct.js","admin/updateCategory.js","admin/topup/AddTopupThumb.js","core/topup/TopupForm.js","admin/rechargePackage/AddRechargePackage.js","admin/topupOrder/ShowTopupOrders.js","admin/balance/AddBalance.js","message/ShowMessagePair.js","message/ShowChat.js","admin/topupOrder/AssignedTopupOrders.js","admin/topupOrder/ShowAdmins.js","admin/diamonds/ModifyDiamondsValue.js","admin/coupon/AddCoupon.js","admin/coupon/ShowCoupon.js","Routes.js","index.js","images/logo/Logo.png"],"names":["API","isAuthenticated","window","localStorage","getItem","JSON","parse","addItem","item","arguments","length","undefined","next","f","cart","push","Object","objectSpread","count","Array","from","Set","map","p","_id","id","find","setItem","stringify","updateItem","productId","product","i","removeItem","splice","getTopupThumbs","fetch","concat","method","then","response","json","catch","err","console","log","getProducts","sortBy","getCategories","getFilteredProducts","skip","limit","data","filters","headers","Accept","Content-Type","body","ShowImage","_ref","url","react_default","a","createElement","className","src","alt","name","style","maxHeight","maxWidth","Card","_ref$showViewProductB","showViewProductButton","_ref$showAddToCartBut","showAddToCartButton","_ref$cartUpdate","cartUpdate","_ref$showRemoveProduc","showRemoveProductButton","_ref$setRun","setRun","_ref$run","run","_useState","useState","_useState2","slicedToArray","redirect","setRedirect","_useState3","_useState4","setCount","addToCart","react_router","to","shouldRedirect","core_ShowImage","description","substring","price","category","moment","createdAt","fromNow","quantity","react_router_dom","showViewButton","onClick","showAddToCartBtn","showRemoveButton","type","value","onChange","event","target","showCartUpdateOptions","Search","categories","search","results","searched","setData","useEffect","error","searchData","params","query","queryString","list","searchSubmit","e","preventDefault","onSubmit","_objectSpread2","defineProperty","placeholder","border","searchForm","isActive","history","path","location","pathname","color","withRouter","Logo","core_Search","user","role","react","cursor","signout","Layout","_ref$title","title","_ref$description","children","core_Menu","Signup","email","password","success","values","setValues","handleChange","clickSubmit","core_Layout","display","Signin","loading","redirectToReferrer","authenticate","ShowThumb","ShowTopups","topupThumbnails","setThumbNails","thumbs","thumb","key","exact","core_ShowThumb","Home","productsBySell","setProductsBySell","productsByArrival","setProductsByArrival","_useState5","_useState6","setError","topup_ShowTopups","core_Card","PrivateRoute","Component","component","rest","objectWithoutProperties","assign","render","props","state","getCouponsByUser","token","Authorization","collectCouponByUser","couponId","getDiamonds","UserLinks","_isAuthenticated$user","Dashboard","setHistory","_isAuthenticated2$use","init","userId","getPurchaseHistory","UserDashboard_UserLinks","h","products","purchaseHistory","AdminRoute","NotificationsContext","createContext","UserProvider","notifications","setNotifications","_isAuthenticated","getUnseenMessagesByReceiver","messages","Provider","AdminLinks","_useContext","useContext","_useContext2","AdminDashboard","AdminDashboard_AdminLinks","showCoupon","coupon","showBalance","updateTopupOrderAdmin","topupOrderId","sentStatus","status","customerId","AddCategory","setName","setSuccess","createCategory","showSuccess","showError","autoFocus","required","AddProduct","shipping","photo","createdProduct","redirectToProfile","formData","FormData","files","set","createProduct","accept","c","Checkbox","handleFilters","checked","setCheked","handleToggle","currentCategoryId","indexOf","newCheckedCategoryId","toConsumableArray","RadioBox","prices","setValue","array","Shop","myFilters","setMyFilters","setCategories","_useState7","_useState8","_useState9","_useState10","setSkip","_useState11","_useState12","size","setSize","_useState13","_useState14","filteredResults","setFilteredResults","loadFilteredResults","newFilters","loadMore","toSkip","filterBy","priceValues","handlePrice","parseInt","core_Checkbox","core_RadioBox","SingleProductCard","Product","setProduct","relatedProduct","setRelatedProduct","loadSingleProduct","read","match","core_SingleProductCard","Checkout","clientToken","instance","address","getToken","getBraintreeClientToken","handleAddress","getTotal","reduce","currentValue","nextValue","deliveryAddress","buy","requestPaymentMethod","paymentData","paymentMethodNonce","nonce","amount","processPayment","createOrderData","transaction_id","transaction","order","createOrder","message","showDropIn","onBlur","lib_default","options","authorization","paypal","flow","onInstance","Cart","items","setItems","showItems","core_Checkout","Orders","orders","setOrders","statusValues","setStatusValues","loadOrders","listOrders","loadStatusValues","getStatusValues","showInput","readOnly","handleStatusChange","orderId","updateOrderStatus","o","oIndex","borderBottom","index","showStatus","pIndex","padding","Profile","update","alert","auth","updateUser","profileUpdate","redirectUser","ManageProducts","setProducts","loadProducts","destroy","deleteProduct","UpdateProduct","getProduct","initCategories","updateProduct","UpdateCategory","categoryId","getCategory","submitCategoryForm","updateCategory","data-dismiss","aria-label","aria-hidden","AddTopupThumb","createdTopup","topup","createTopupThumb","disabled","selected","TopupForm","_useParams","useParams","wallet","setWallet","setAmount","adminLimit","setAdminLimit","diamondValue","setDiamondValue","gameUserId","accountType","gmailOrFacebook","securityCode","selectRecharge","selectRecharges","createdTopupOrder","game","takaPerDiamond","balance","selectedpack","filter","sr","packageAmount","createTopupOrder","packageName","AddRechargePackage","topupGameNames","topupGameName","createdRechargePackage","rechargePackage","createRechargePackage","ShowTopupOrders","getTopupOrdersAdmin","markTopupOrderStatus","topupGameId","pair","assignedTo","AddBalance","oldBalance","createdBalance","stock","addBalance","newOldBalance","Number","newPostForm","ShowMessagePair","messagesPair","setMessagesPair","getMessage","receivedMsg","seen","receiver","ShowChat","socketRef","useRef","pairId","receiverId","createdMessage","current","io","connect","messageByPairId","realReciever","newMsgDetails","emit","on","msg","AssignedTopupOrders","getAssignedTopupOrdersAdmin","ShowAdmins","useHistory","admins","setAdmins","getAllAdmins","assignTopupToAdmin","adminId","assignTopupOrder","admin","ModifyDiamondsValue","oldDiamondValue","createdDiamondValue","diamondVal","addDiamondValue","AddCoupon","userCoupons","setUserCoupons","diamondAmount","setDiamondAmount","coupons","couponName","couponCode","shortDetails","discounts","diamonds","createdCoupon","addCoupon","apply","ShowCoupon","boughtCoupon","Routes","notificationsContext_UserProvider","auth_PrivateRoute","auth_AdminRoute","ReactDOM","src_Routes","document","getElementById","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.9cb4001f.chunk.js","sourcesContent":["export const API = '/api'; //process.env.REACT_APP_API_URL;\n","import { API } from '../config';\n\nexport const signup = user => {\n    return fetch(`${API}/signup`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const signin = user => {\n    return fetch(`${API}/signin`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const authenticate = (data, next) => {\n    if (typeof window !== 'undefined') {\n        localStorage.setItem('jwt', JSON.stringify(data));\n        next();\n    }\n};\n\nexport const signout = next => {\n    if (typeof window !== 'undefined') {\n        localStorage.removeItem('jwt');\n        next();\n        return fetch(`${API}/signout`, {\n            method: 'GET'\n        })\n            .then(response => {\n                console.log('signout', response);\n            })\n            .catch(err => console.log(err));\n    }\n};\n\nexport const isAuthenticated = () => {\n    if (typeof window == 'undefined') {\n        return false;\n    }\n    if (localStorage.getItem('jwt')) {\n        return JSON.parse(localStorage.getItem('jwt'));\n    } else {\n        return false;\n    }\n};\n","export const addItem = (item = [], count = 0, next = f => f) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n        cart.push({\n            ...item,\n            count: 1\n        });\n\n        // remove duplicates\n        // build an Array from new Set and turn it back into array using Array.from\n        // so that later we can re-map it\n        // new set will only allow unique values in it\n        // so pass the ids of each object/product\n        // If the loop tries to add the same value again, it'll get ignored\n        // ...with the array of ids we got on when first map() was used\n        // run map() on it again and return the actual product from the cart\n\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\n            return cart.find(p => p._id === id);\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n        next();\n    }\n};\n\nexport const itemTotal = () => {\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            return JSON.parse(localStorage.getItem('cart')).length;\n        }\n    }\n    return 0;\n};\n\nexport const getCart = () => {\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            return JSON.parse(localStorage.getItem('cart'));\n        }\n    }\n    return [];\n};\n\nexport const updateItem = (productId, count) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart[i].count = count;\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n};\n\nexport const removeItem = productId => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart.splice(i, 1);\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n    return cart;\n};\n\nexport const emptyCart = next => {\n    if (typeof window !== 'undefined') {\n        localStorage.removeItem('cart');\n        next();\n    }\n};\n","import { API } from \"../config\";\nimport queryString from \"query-string\";\n\n\n//send messages\nexport const sendMessage = (token, userId, receiverId, pairId, message) => {\n        return fetch(`${API}/user/${userId}/message/${receiverId}/pair/${pairId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: message\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n}\n\n// read chats for eavh pair\nexport const messageByPairId = (userId, token, pairId) => {\n        return fetch(`${API}/user/${userId}/message-pair/${pairId}`, {\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n}\n\n//show messages list of pair to user\nexport const getMessage = (userId, token) => {\n        return fetch(`${API}/user/messages/${userId}`, {\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n}\n\n//creating topup order\nexport const createTopupOrder = (userId, token, order, id)=>{\n\n    return fetch(`${API}/topup-orders/${userId}/topup/${id}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: order\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n}\n\n//get wallet\nexport const getWallet = (id) => {\n    return fetch(`${API}/wallet/${id}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n//get topup thumbs\nexport const getTopupThumbs = () => {\n    return fetch(`${API}/topup-thumbs`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n//get Recharge Packages for admin\nexport const getRechargePackages = () => {\n    return fetch(`${API}/recharge-package`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n//get recharge packages by game id\nexport const getRechargePackagesByGameName = (game) => {\n    return fetch(`${API}/recharge-package/get-by-game/${game}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getProducts = sortBy => {\n    return fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getCategories = () => {\n    return fetch(`${API}/categories`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getFilteredProducts = (skip, limit, filters = {}) => {\n    const data = {\n        limit,\n        skip,\n        filters\n    };\n    return fetch(`${API}/products/by/search`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const list = params => {\n    const query = queryString.stringify(params);\n    console.log(\"query\", query);\n    return fetch(`${API}/products/search?${query}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const read = productId => {\n    return fetch(`${API}/product/${productId}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const listRelated = productId => {\n    return fetch(`${API}/products/related/${productId}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getBraintreeClientToken = (userId, token) => {\n    return fetch(`${API}/braintree/getToken/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const processPayment = (userId, token, paymentData) => {\n    return fetch(`${API}/braintree/payment/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(paymentData)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const createOrder = (userId, token, createOrderData) => {\n    return fetch(`${API}/order/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ order: createOrderData })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n","import React from \"react\";\nimport { API } from \"../config\";\n\nconst ShowImage = ({ item, url }) => (\n    <div className=\"product-img\">\n        <img\n            src={`${API}/${url}/photo/${item._id}`}\n            alt={item.name}\n            className=\"mb-3\"\n            style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\n        />\n    </div>\n);\n\nexport default ShowImage;\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShowImage from './ShowImage';\nimport moment from 'moment';\nimport { addItem, updateItem, removeItem } from './cartHelpers';\n\nconst Card = ({\n  product,\n  showViewProductButton = true,\n  showAddToCartButton = true,\n  cartUpdate = false,\n  showRemoveProductButton = false,\n  setRun = f => f,\n  run = undefined\n  // changeCartSize\n}) => {\n  const [redirect, setRedirect] = useState(false);\n  const [count, setCount] = useState(product.count);\n\n  const showViewButton = showViewProductButton => {\n    return (\n      showViewProductButton && (\n        <Link to={`/product/${product._id}`} className=\"mr-2\">\n          <button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">View Product</button>\n        </Link>\n      )\n    );\n  };\n  const addToCart = () => {\n    // console.log('added');\n    addItem(product, setRedirect(true));\n  };\n\n  const shouldRedirect = redirect => {\n    if (redirect) {\n      return <Redirect to=\"/cart\" />;\n    }\n  };\n\n  const showAddToCartBtn = showAddToCartButton => {\n    return (\n      showAddToCartButton && (\n        <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2 card-btn-1  \">\n          Add to cart\n        </button>\n      )\n    );\n  };\n\n  const showStock = quantity => {\n    return quantity > 0 ? (\n      <span className=\"badge badge-primary badge-pill\">In Stock </span>\n    ) : (\n      <span className=\"badge badge-primary badge-pill\">Out of Stock </span>\n    );\n  };\n\n  const handleChange = productId => event => {\n    setRun(!run); // run useEffect in parent Cart\n    setCount(event.target.value < 1 ? 1 : event.target.value);\n    if (event.target.value >= 1) {\n      updateItem(productId, event.target.value);\n    }\n  };\n\n  const showCartUpdateOptions = cartUpdate => {\n    return (\n      cartUpdate && (\n        <div>\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">Adjust Quantity</span>\n            </div>\n            <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)} />\n          </div>\n        </div>\n      )\n    );\n  };\n  const showRemoveButton = showRemoveProductButton => {\n    return (\n      showRemoveProductButton && (\n        <button\n          onClick={() => {\n            removeItem(product._id);\n            setRun(!run); // run useEffect in parent Cart\n          }}\n          className=\"btn btn-outline-danger mt-2 mb-2\"\n        >\n          Remove Product\n        </button>\n      )\n    );\n  };\n  return (\n    <div className=\"card \">\n      <div className=\"card-header card-header-1 \">{product.name}</div>\n      <div className=\"card-body\">\n        {shouldRedirect(redirect)}\n        <ShowImage item={product} url=\"product\" />\n        <p className=\"card-p  mt-2\">{product.description.substring(0, 100)} </p>\n        <p className=\"card-p black-10\">৳ {product.price}</p>\n        <p className=\"black-9\">Category: {product.category && product.category.name}</p>\n        <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\n        {showStock(product.quantity)}\n        <br />\n\n        {showViewButton(showViewProductButton)}\n\n        {showAddToCartBtn(showAddToCartButton)}\n\n        {showRemoveButton(showRemoveProductButton)}\n\n        {showCartUpdateOptions(cartUpdate)}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport { getCategories, list } from \"./apiCore\";\nimport Card from \"./Card\";\n\nconst Search = () => {\n    const [data, setData] = useState({\n        categories: [],\n        category: \"\",\n        search: \"\",\n        results: [],\n        searched: false\n    });\n\n    const { categories, category, search, results, searched } = data;\n\n    const loadCategories = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setData({ ...data, categories: data });\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadCategories();\n    }, []);\n\n    const searchData = () => {\n        // console.log(search, category);\n        if (search) {\n            list({ search: search || undefined, category: category }).then(\n                response => {\n                    if (response.error) {\n                        console.log(response.error);\n                    } else {\n                        setData({ ...data, results: response, searched: true });\n                    }\n                }\n            );\n        }\n    };\n\n    const searchSubmit = e => {\n        e.preventDefault();\n        searchData();\n    };\n\n    const handleChange = name => event => {\n        setData({ ...data, [name]: event.target.value, searched: false });\n    };\n\n    const searchMessage = (searched, results) => {\n        if (searched && results.length > 0) {\n            return `Found ${results.length} products`;\n        }\n        if (searched && results.length < 1) {\n            return `No products found`;\n        }\n    };\n\n    const searchedProducts = (results = []) => {\n        return (\n            <div>\n                <h2 className=\"mt-4 mb-4\">\n                    {searchMessage(searched, results)}\n                </h2>\n\n                <div className=\"row\">\n                    {results.map((product, i) => (\n                        <div className=\"col-4 mb-3\">\n                            <Card key={i} product={product} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    };\n\n    const searchForm = () => (\n        <form id=\"search-top\" onSubmit={searchSubmit}>\n            <span className=\"input-group-text\">\n                <div className=\"input-group input-group-lg\">\n                    <div className=\"input-group-prepend\">\n                        {/* <select\n                            className=\"btn mr-2\"\n                            onChange={handleChange(\"category\")}\n                        >\n                            <option value=\"All\">All</option>\n                            {categories.map((c, i) => (\n                                <option key={i} value={c._id}>\n                                    {c.name}\n                                </option>\n                            ))}\n                        </select> */}\n                    </div>\n\n                    <input\n                        type=\"search\"\n                        className=\"form-control\"\n                        onChange={handleChange(\"search\")}\n                        placeholder=\"Search by name\"\n                    />\n                </div>\n                <div\n                    className=\"btn input-group-append\"\n                    style={{ border: \"none\" }}\n                >\n                    <button className=\"input-group-text\">Search</button>\n                </div>\n            </span>\n        </form>\n    );\n\n    return (\n        <div className=\"row\">\n            <div className=\"container mb-3\">{searchForm()}</div>\n            {/* <div className=\"container-fluid mb-3\">\n                {searchedProducts(results)}\n            </div> */}\n        </div>\n    );\n};\n\nexport default Search;\n","import React, { Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { signout, isAuthenticated } from \"../auth\";\nimport { itemTotal } from \"./cartHelpers\";\nimport Logo from './../images/logo/Logo.png';\nimport './menu.css';\nimport Search from './Search';\n\nconst isActive = (history, path) => {\n    if (history.location.pathname === path) {\n        return { color: \"#ff9900\" };\n    } else {\n        return { color: \"#ffffff\" };\n    }\n};\n\nconst Menu = ({ history }) => (\n    <div className=\"row less-width\">\n        <div className=\"col-md-6\">\n            <div className=\"row\">\n                <div className=\"col-md-3\">\n                    <Link\n                        to=\"/\"\n                    >\n                        <img className=\"logo\" src={Logo} />\n                    </Link>\n                </div>\n                <div className=\"col-md-8\">\n                    <Search />\n                </div>\n            </div>\n        </div>\n        <div className=\"col-md-5\">\n            <ul className=\"nav nav-tabs bg-primary\">\n                \n                <li className=\"nav-item\">\n                    <Link\n                        className=\"nav-link\"\n                        style={isActive(history, \"/\")}\n                        to=\"/\"\n                    >\n                        Home\n                    </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link\n                        className=\"nav-link\"\n                        style={isActive(history, \"/shop\")}\n                        to=\"/shop\"\n                    >\n                        Shop\n                    </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link\n                        className=\"nav-link\"\n                        style={isActive(history, \"/cart\")}\n                        to=\"/cart\"\n                    >\n                        Cart{\" \"}\n                        <sup>\n                            <small className=\"cart-badge\">{itemTotal()}</small>\n                        </sup>\n                    </Link>\n                </li>\n\n                {isAuthenticated() && isAuthenticated().user.role === 0 && (\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link\"\n                            style={isActive(history, \"/user/dashboard\")}\n                            to=\"/user/dashboard\"\n                        >\n                            Dashboard\n                        </Link>\n                    </li>\n                )}\n\n                {isAuthenticated() && isAuthenticated().user.role === 1 && (\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link\"\n                            style={isActive(history, \"/admin/dashboard\")}\n                            to=\"/admin/dashboard\"\n                        >\n                            Dashboard\n                        </Link>\n                    </li>\n                )}\n\n                {!isAuthenticated() && (\n                    <Fragment>\n                        <li className=\"nav-item\">\n                            <Link\n                                className=\"nav-link\"\n                                style={isActive(history, \"/signin\")}\n                                to=\"/signin\"\n                            >\n                                Signin\n                            </Link>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <Link\n                                className=\"nav-link\"\n                                style={isActive(history, \"/signup\")}\n                                to=\"/signup\"\n                            >\n                                Signup\n                            </Link>\n                        </li>\n                    </Fragment>\n                )}\n\n                {isAuthenticated() && (\n                    <li className=\"nav-item\">\n                        <span\n                            className=\"nav-link\"\n                            style={{ cursor: \"pointer\", color: \"#ffffff\" }}\n                            onClick={() =>\n                                signout(() => {\n                                    history.push(\"/\");\n                                })\n                            }\n                        >\n                            Signout\n                        </span>\n                    </li>\n                )}\n            </ul>\n        </div>\n    </div>\n);\n\nexport default withRouter(Menu);\n","import React from \"react\";\nimport Menu from \"./Menu\";\nimport \"../styles.css\";\n\nconst Layout = ({\n    title = \"Title\",\n    description = \"Description\",\n    className,\n    children\n}) => (\n    <div>\n        <Menu />\n        <div className=\"jumbotron\">\n            <h2>{title}</h2>\n            <p className=\"lead\">{description}</p>\n        </div>\n        <div className={className}>{children}</div>\n    </div>\n);\n\nexport default Layout;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Layout from '../core/Layout';\nimport { signup } from '../auth';\n\nconst Signup = () => {\n    const [values, setValues] = useState({\n        name: '',\n        email: '',\n        password: '',\n        error: '',\n        success: false\n    });\n\n    const { name, email, password, success, error } = values;\n\n    const handleChange = name => event => {\n        setValues({ ...values, error: false, [name]: event.target.value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: false });\n        signup({ name, email, password }).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error, success: false });\n            } else {\n                setValues({\n                    ...values,\n                    name: '',\n                    email: '',\n                    password: '',\n                    error: '',\n                    success: true\n                });\n            }\n        });\n    };\n\n    const signUpForm = () => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} />\n            </div>\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\n                Submit\n            </button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\n            New account is created. Please <Link to=\"/signin\">Signin</Link>\n        </div>\n    );\n\n    return (\n        <Layout\n            title=\"Signup\"\n            description=\"Signup to Selften\"\n            className=\"container col-md-8 offset-md-2\"\n        >\n            {showSuccess()}\n            {showError()}\n            {signUpForm()}\n        </Layout>\n    );\n};\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Layout from \"../core/Layout\";\nimport { signin, authenticate, isAuthenticated } from \"../auth\";\n\nconst Signin = () => {\n    const [values, setValues] = useState({\n        email: \"sayeedmondal1412@gmail.com\",\n        password: \"12345678\",\n        error: \"\",\n        loading: false,\n        redirectToReferrer: false\n    });\n\n    const { email, password, loading, error, redirectToReferrer } = values;\n    const { user } = isAuthenticated();\n\n    const handleChange = name => event => {\n        setValues({ ...values, error: false, [name]: event.target.value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: false, loading: true });\n        signin({ email, password }).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error, loading: false });\n            } else {\n                authenticate(data, () => {\n                    setValues({\n                        ...values,\n                        redirectToReferrer: true\n                    });\n                });\n            }\n        });\n    };\n\n    const signUpForm = () => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input\n                    onChange={handleChange(\"email\")}\n                    type=\"email\"\n                    className=\"form-control\"\n                    value={email}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input\n                    onChange={handleChange(\"password\")}\n                    type=\"password\"\n                    className=\"form-control\"\n                    value={password}\n                />\n            </div>\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\n                Submit\n            </button>\n        </form>\n    );\n\n    const showError = () => (\n        <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n        >\n            {error}\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-info\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    const redirectUser = () => {\n        if (redirectToReferrer) {\n            if (user && user.role === 1) {\n                return <Redirect to=\"/admin/dashboard\" />;\n            } else {\n                return <Redirect to=\"/user/dashboard\" />;\n            }\n        }\n        if (isAuthenticated()) {\n            return <Redirect to=\"/\" />;\n        }\n    };\n\n    return (\n        <Layout\n            title=\"Signin\"\n            description=\"Signin to Selften\"\n            className=\"container col-md-8 offset-md-2\"\n        >\n            {showLoading()}\n            {showError()}\n            {signUpForm()}\n            {redirectUser()}\n        </Layout>\n    );\n};\n\nexport default Signin;\n","import React from \"react\";\nimport { API } from \"../config\";\n\nconst ShowThumb = ({ item, url }) => (\n    <div className=\"product-img\">\n        <img\n            src={`${API}/${url}/photo/${item._id}`}\n            alt={item.name}\n            className=\"mb-3\"\n            style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\n        />\n    </div>\n);\n\nexport default ShowThumb;","import React, { Fragment, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getTopupThumbs } from '../../core/apiCore';\nimport ShowThumb from '../../core/ShowThumb';\n \n\nconst ShowTopups = ()=>{\n    const [topupThumbnails, setThumbNails] =useState(null);\n\n    useEffect(()=>{\n        getTopupThumbs().then(thumbs=>{\n            setThumbNails(thumbs);\n        })\n    \n    },[])\n\n    return(\n        <div className=\"row center-flex\">\n            {\n                topupThumbnails ? \n                topupThumbnails.map(thumb=>{\n                    return(\n                        \n                                <div className=\"col-md-2 thumb-show\" key={thumb._id}>\n                                    <Link exact to={`/topups/${thumb._id}/type/${thumb.type}`}>\n                                    \n                                        <ShowThumb item={thumb} url=\"topup-thumbs\" />\n                                        <h6>{ thumb.title }</h6>\n\n                                    </Link>\n                                </div>          \n                       \n                    )\n                })\n                :\n                <Fragment>Loading...</Fragment>\n            }\n        </div>\n    )\n}\n\nexport default ShowTopups;","import React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport { getProducts } from './apiCore';\nimport Card from './Card';\n\nimport ShowTopups from '../admin/topup/ShowTopups';\n\nconst Home = () => {\n    const [productsBySell, setProductsBySell] = useState([]);\n    const [productsByArrival, setProductsByArrival] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadProductsBySell = () => {\n        getProducts('sold').then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProductsBySell(data);\n            }\n        });\n    };\n\n    const loadProductsByArrival = () => {\n        getProducts('createdAt').then(data => {\n            console.log(data);\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProductsByArrival(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadProductsByArrival();\n        loadProductsBySell();\n    }, []);\n\n    return (\n        <Layout\n            title=\"Selften ecommerce\"\n            description=\"Buy gaming products\"\n            className=\"container-fluid\"\n        >\n           \n            <ShowTopups />\n            \n            \n            <h2 className=\"mb-4\">New Arrivals</h2>\n            <div className=\"row\">\n                {productsByArrival.map((product, i) => (\n                    <div key={i} className=\"col-4 mb-3\">\n                        <Card product={product} />\n                    </div>\n                ))}\n            </div>\n\n            <h2 className=\"mb-4\">Best Sellers</h2>\n            <div className=\"row\">\n                {productsBySell.map((product, i) => (\n                    <div key={i} className=\"col-4 mb-3\">\n                        <Card product={product} />\n                    </div>\n                ))}\n            </div>\n        </Layout>\n    );\n};\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"./index\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/signin\",\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    />\n);\n\nexport default PrivateRoute;\n","import { API } from \"../config\";\n\nexport const getCouponsByUser = (user, token)=>{\n    return fetch(`${API}/coupon/${user._id}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n}\n\nexport const collectCouponByUser = (couponId, user, token)=>{\n    return fetch(`${API}/coupon/${couponId}/${user._id}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n}\n\nexport const getDiamonds = (user, token)=>{\n    return fetch(`${API}/diamonds/${user._id}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n}\n\nexport const getUnseenMessagesByReceiver = (user, token) => {\n    return fetch(`${API}/user/get-unseen-messages/receiver/${user._id}`, {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    Authorization: `Bearer ${token}`\n                },\n                body: {}\n            })\n            .then(response => {\n                return response.json();\n            })\n            .catch(err => console.log(err));\n}\n\nexport const read = (userId, token) => {\n    return fetch(`${API}/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const update = (userId, token, user) => {\n    return fetch(`${API}/user/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateUser = (user, next) => {\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"jwt\")) {\n            let auth = JSON.parse(localStorage.getItem(\"jwt\"));\n            auth.user = user;\n            localStorage.setItem(\"jwt\", JSON.stringify(auth));\n            next();\n        }\n    }\n};\n\nexport const getPurchaseHistory = (userId, token) => {\n    return fetch(`${API}/orders/by/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { getPurchaseHistory } from \"./apiUser\";\nimport moment from \"moment\";\nimport './adminDashboard.css'\n\nexport const UserLinks = () => {\n    const {\n        user: { _id, name, email, role }\n    } = isAuthenticated();\n        return (\n            <div className=\"card\">\n                <h4 className=\"card-header\">User Links</h4>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/user/messages\">\n                            See messages  <sup className=\"notifications\">0</sup>\n                        </Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/cart\">\n                            My Cart\n                        </Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}>\n                            Update Profile\n                        </Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to={`/user/coupons`}>\n                            Diamonds Coupons\n                        </Link>\n                    </li>\n                    \n                    \n                </ul>\n            </div>\n        );\n    };\n\nconst Dashboard = () => {\n    const [history, setHistory] = useState([]);\n\n    const {\n        user: { _id, name, email, role }\n    } = isAuthenticated();\n    const token = isAuthenticated().token;\n\n    const init = (userId, token) => {\n        getPurchaseHistory(userId, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setHistory(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(_id, token);\n    }, []);\n\n\n\n    const userInfo = () => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">User Information</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">{name}</li>\n                    <li className=\"list-group-item\">{email}</li>\n                    <li className=\"list-group-item\">\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    const purchaseHistory = history => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">Purchase history</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        {history.map((h, i) => {\n                            return (\n                                <div>\n                                    <hr />\n                                    {h.products.map((p, i) => {\n                                        return (\n                                            <div key={i}>\n                                                <h6>Product name: {p.name}</h6>\n                                                <h6>\n                                                    Product price: ${p.price}\n                                                </h6>\n                                                <h6>\n                                                    Purchased date:{\" \"}\n                                                    {moment(\n                                                        p.createdAt\n                                                    ).fromNow()}\n                                                </h6>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    return (\n        <Layout\n            title=\"Dashboard\"\n            description={`G'day ${name}!`}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-3\"><UserLinks /></div>\n                <div className=\"col-9\">\n                    {userInfo()}\n                    {purchaseHistory(history)}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"./index\";\n\nconst AdminRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated() && isAuthenticated().user.role === 1 ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/signin\",\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    />\n);\n\nexport default AdminRoute;\n","import React, { useState, useEffect, createContext, useContext } from 'react';\nimport { isAuthenticated } from '../auth';\nimport { getUnseenMessagesByReceiver } from '../user/apiUser';\n\nexport const NotificationsContext = createContext();\n\nexport const UserProvider = (props)=> {\n    const [notifications, setNotifications] = useState(0);\n    const { user, token } = isAuthenticated();\n    \n    useEffect(() => {\n\n        getUnseenMessagesByReceiver(user, token)\n            .then(messages => {\n                \n                setNotifications(messages.length);\n            });\n        \n        \n    }, []);\n\n\n\n    return(\n        <NotificationsContext.Provider value={[notifications, setNotifications]}>\n            {props.children}\n        </NotificationsContext.Provider>\n    )\n}","import React, { useContext, useState, useRef } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { API } from './../config';\nimport './adminDashboard.css';\nimport { NotificationsContext } from \"../context/notificationsContext\";\n\n\nexport const AdminLinks = () => {\n    const [notifications, setNotifications] = useContext(NotificationsContext);\n    return ( \n        <div className=\"card\">\n            <h4 className=\"card-header\">Admin Links</h4>\n           \n            <ul className=\"list-group\">\n            <li className=\"list-group-item\">\n                <Link className=\"nav-link\" to=\"/admin/assigned-topup-orders\">\n                        Assigned topup orders\n                 </Link>\n            </li>\n             <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/admin/topup-orders\">\n                        See New Topup Orders\n                    </Link>\n                </li>\n            <li className=\"list-group-item\">\n                <Link className=\"nav-link\" to=\"/admin/messages\">\n                        See messages <sup className=\"notifications\">{ notifications }</sup>\n                 </Link>\n            </li>\n\n            <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/admin/balance-stock\">\n                        Stocks for topup\n                    </Link>\n                </li>\n                <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/admin/diamond-value\">\n                        Diamond or Purchase Point\n                    </Link>\n                </li>\n                <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/admin/add-coupons\">\n                        Add coupons\n                    </Link>\n                </li>\n                 <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/admin/recharge-package\">\n                        Create Recharge Package\n                    </Link>\n                </li>\n                <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/admin/topup\">\n                        Create Game for Topup\n                    </Link>\n                </li>\n\n                <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/create/category\">\n                        Create Category\n                    </Link>\n                </li>\n                <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/create/product\">\n                        Create Product\n                    </Link>\n                </li>\n                <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/admin/orders\">\n                        View Orders\n                    </Link>\n                </li>\n                <li className=\"list-group-item\">\n                    <Link className=\"nav-link\" to=\"/admin/products\">\n                        Manage Products\n                    </Link>\n                </li>\n               \n               \n                \n            </ul>\n        </div>\n    );\n};\n\nconst AdminDashboard = () => {\n    const {\n        user: { _id, name, email, role }\n    } = isAuthenticated();\n\n\n\n    const adminInfo = () => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">User Information</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">{name}</li>\n                    <li className=\"list-group-item\">{email}</li>\n                    <li className=\"list-group-item\">\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    return (\n        <Layout\n            title=\"Dashboard\"\n            description={`G'day ${name}!`}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                 \n                <div className=\"col-md-3\"><AdminLinks /></div>\n              \n                <div className=\"col-md-9\">{adminInfo()}</div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AdminDashboard;\n","\nimport { API } from '../config';\n\n// add coupons\nexport const addCoupon = (userId, token, coupon) => {\n    return fetch(`${API}/coupon/create/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: coupon\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\n// show coupons\nexport const showCoupon = (userId, token, coupon) => {\n    return fetch(`${API}/coupon/`, {\n        method: 'GET',\n        })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\n//assign topup order to admin\nexport const assignTopupOrder = (user, token, adminId, topupOrderId)=>{\n        return fetch(`${API}/topup-orders/assigning/${adminId}/${user._id}/${topupOrderId}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            },\n            \n        })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n}\n\n//get all admins to assign order\nexport const getAllAdmins = (user, token) => {\n    return fetch(`${API}/user/admins/${user._id}`, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        \n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\n\n// show balance\nexport const showBalance = ()=> {\n\n    return fetch(`${API}/admin/balance`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n}\n\n//add balance\nexport const addBalance = (userId, token, balance) => {\n    return fetch(`${API}/admin/balance/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(balance)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n}; \nexport const addDiamondValue = (userId, token, diamondValue) => {\n    return fetch(`${API}/admin/add-diamonds/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(diamondValue)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n}; \n\n//update topup orders\nexport const updateTopupOrderAdmin = (topupOrderId, userId, token, sentStatus) => {\n    console.log(sentStatus);\n    return fetch(`${API}/topup-orders/update/${topupOrderId}/${userId}/${sentStatus.status}/${sentStatus.customerId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: sentStatus,\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\n//get all topup orders\nexport const getTopupOrdersAdmin = (userId, token) => {\n    return fetch(`${API}/topup-orders/admin/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: {}\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n//get assigned topup orders for admin\nexport const getAssignedTopupOrdersAdmin = (userId, token) => {\n    return fetch(`${API}/topup-orders/assigned/admin/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: {}\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n//create recharge packages\nexport const createRechargePackage = (userId, token, rechargePackage)=>{\n    return fetch(`${API}/recharge-package/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: rechargePackage\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n}\n\nexport const createTopupThumb = (userId, token, topup) => {\n    return fetch(`${API}/topup-thumbs/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: topup\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const createCategory = (userId, token, category) => {\n    return fetch(`${API}/category/create/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const updateCategory = (categoryId, userId, token, category) => {\n    return fetch(`${API}/category/${categoryId}/${userId}`, {\n        method: 'PUT',\n        headers: {\n            // content type?\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const createProduct = (userId, token, product) => {\n    return fetch(`${API}/product/create/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const getCategory = categoryId => {\n    return fetch(`${API}/category/${categoryId}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getCategories = () => {\n    return fetch(`${API}/categories`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const listOrders = (userId, token) => {\n    return fetch(`${API}/order/list/${userId}`, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getStatusValues = (userId, token) => {\n    return fetch(`${API}/order/status-values/${userId}`, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n    return fetch(`${API}/order/${orderId}/status/${userId}`, {\n        method: 'PUT',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ status, orderId })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n/**\n * to perform crud on product\n * get all products\n * get a single product\n * update single product\n * delete single product\n */\n\nexport const getProducts = () => {\n    return fetch(`${API}/products?limit=undefined`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const deleteProduct = (productId, userId, token) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getProduct = productId => {\n    return fetch(`${API}/product/${productId}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateProduct = (productId, userId, token, product) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n        method: 'PUT',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n","import React, { useState } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { createCategory } from \"./apiAdmin\";\nimport { AdminLinks } from \"../user/AdminDashboard\";\n\nconst AddCategory = () => {\n    const [name, setName] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [success, setSuccess] = useState(false);\n\n    // destructure user and token from localstorage\n    const { user, token } = isAuthenticated();\n\n    const handleChange = e => {\n        setError(\"\");\n        setName(e.target.value);\n    };\n\n    const clickSubmit = e => {\n        e.preventDefault();\n        setError(\"\");\n        setSuccess(false);\n        // make request to api to create category\n        createCategory(user._id, token, { name }).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setError(\"\");\n                setSuccess(true);\n            }\n        });\n    };\n\n    const newCategoryFom = () => (\n        <form onSubmit={clickSubmit}>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    onChange={handleChange}\n                    value={name}\n                    autoFocus\n                    required\n                />\n            </div>\n            <button className=\"btn btn-outline-primary\">Create Category</button>\n        </form>\n    );\n\n    const showSuccess = () => {\n        if (success) {\n            return <h3 className=\"text-success\">{name} is created</h3>;\n        }\n    };\n\n    const showError = () => {\n        if (error) {\n            return <h3 className=\"text-danger\">Category should be unique</h3>;\n        }\n    };\n\n    const goBack = () => (\n        <div className=\"mt-5\">\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">\n                Back to Dashboard\n            </Link>\n        </div>\n    );\n\n    return (\n        <Layout\n            title=\"Add a new category\"\n            description={`G'day ${user.name}, ready to add a new category?`}\n        >\n            <div className=\"row\">\n            <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-6 offset-md-2\">\n                    {showSuccess()}\n                    {showError()}\n                    {newCategoryFom()}\n                    {goBack()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddCategory;\n","import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\nimport { createProduct, getCategories } from './apiAdmin';\nimport { AdminLinks } from '../user/AdminDashboard';\n\nconst AddProduct = () => {\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        price: '',\n        categories: [],\n        category: '',\n        shipping: '',\n        quantity: '',\n        photo: '',\n        loading: false,\n        error: '',\n        createdProduct: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        name,\n        description,\n        price,\n        categories,\n        category,\n        shipping,\n        quantity,\n        loading,\n        error,\n        createdProduct,\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    categories: data,\n                    formData: new FormData()\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        createProduct(user._id, token, formData).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    name: '',\n                    description: '',\n                    photo: '',\n                    price: '',\n                    quantity: '',\n                    loading: false,\n                    createdProduct: data.name\n                });\n                console.log('done')\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Description</label>\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Price</label>\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Category</label>\n                <select onChange={handleChange('category')} className=\"form-control\">\n                    <option>Please select</option>\n                    {categories &&\n                        categories.map((c, i) => (\n                            <option key={i} value={c._id}>\n                                {c.name}\n                            </option>\n                        ))}\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Shipping</label>\n                <select onChange={handleChange('shipping')} className=\"form-control\">\n                    <option>Please select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Quantity</label>\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Create Product</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\n            <h2>{`${createdProduct}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\n            <div className=\"row\">\n            <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-6 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddProduct;\n","import React, { useState } from \"react\";\n\nconst Checkbox = ({ categories, handleFilters }) => {\n    const [checked, setCheked] = useState([]);\n\n    const handleToggle = c => () => {\n        // return the first index or -1\n        const currentCategoryId = checked.indexOf(c);\n        const newCheckedCategoryId = [...checked];\n        // if currently checked was not already in checked state > push\n        // else pull/take off\n        if (currentCategoryId === -1) {\n            newCheckedCategoryId.push(c);\n        } else {\n            newCheckedCategoryId.splice(currentCategoryId, 1);\n        }\n        // console.log(newCheckedCategoryId);\n        setCheked(newCheckedCategoryId);\n        handleFilters(newCheckedCategoryId);\n    };\n\n    return categories.map((c, i) => (\n        <li key={i} className=\"list-unstyled\">\n            <input\n                onChange={handleToggle(c._id)}\n                value={checked.indexOf(c._id === -1)}\n                type=\"checkbox\"\n                className=\"form-check-input\"\n            />\n            <label className=\"form-check-label\">{c.name}</label>\n        </li>\n    ));\n};\n\nexport default Checkbox;\n","import React, { useState } from \"react\";\n\nconst RadioBox = ({ prices, handleFilters }) => {\n    const [value, setValue] = useState(0);\n\n    const handleChange = event => {\n        handleFilters(event.target.value);\n        setValue(event.target.value);\n    };\n\n    return prices.map((p, i) => (\n        <div key={i}>\n            <input\n                onChange={handleChange}\n                value={`${p._id}`}\n                name={p}\n                type=\"radio\"\n                className=\"mr-2 ml-4\"\n            />\n            <label className=\"form-check-label\">{p.name}</label>\n        </div>\n    ));\n};\n\nexport default RadioBox;\n","export const prices = [\n    {\n        _id: 0,\n        name: \"Any\",\n        array: []\n    },\n    {\n        _id: 1,\n        name: \"$0 to $9\",\n        array: [0, 9]\n    },\n    {\n        _id: 2,\n        name: \"$10 to $19\",\n        array: [10, 19]\n    },\n    {\n        _id: 3,\n        name: \"$20 to $29\",\n        array: [20, 29]\n    },\n    {\n        _id: 4,\n        name: \"$30 to $39\",\n        array: [20, 29]\n    },\n    {\n        _id: 5,\n        name: \"More than $40\",\n        array: [40, 99]\n    }\n];\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport Card from \"./Card\";\nimport { getCategories, getFilteredProducts } from \"./apiCore\";\nimport Checkbox from \"./Checkbox\";\nimport RadioBox from \"./RadioBox\";\nimport { prices } from \"./fixedPrices\";\n\nconst Shop = () => {\n    const [myFilters, setMyFilters] = useState({\n        filters: { category: [], price: [] }\n    });\n    const [categories, setCategories] = useState([]);\n    const [error, setError] = useState(false);\n    const [limit, setLimit] = useState(6);\n    const [skip, setSkip] = useState(0);\n    const [size, setSize] = useState(0);\n    const [filteredResults, setFilteredResults] = useState([]);\n\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setCategories(data);\n            }\n        });\n    };\n\n    const loadFilteredResults = newFilters => {\n        // console.log(newFilters);\n        getFilteredProducts(skip, limit, newFilters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults(data.data);\n                setSize(data.size);\n                setSkip(0);\n            }\n        });\n    };\n\n    const loadMore = () => {\n        let toSkip = skip + limit;\n        // console.log(newFilters);\n        getFilteredProducts(toSkip, limit, myFilters.filters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults([...filteredResults, ...data.data]);\n                setSize(data.size);\n                setSkip(toSkip);\n            }\n        });\n    };\n\n    const loadMoreButton = () => {\n        return (\n            size > 0 &&\n            size >= limit && (\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\n                    Load more\n                </button>\n            )\n        );\n    };\n\n    useEffect(() => {\n        init();\n        loadFilteredResults(skip, limit, myFilters.filters);\n    }, []);\n\n    const handleFilters = (filters, filterBy) => {\n        // console.log(\"SHOP\", filters, filterBy);\n        const newFilters = { ...myFilters };\n        newFilters.filters[filterBy] = filters;\n\n        if (filterBy === \"price\") {\n            let priceValues = handlePrice(filters);\n            newFilters.filters[filterBy] = priceValues;\n        }\n        loadFilteredResults(myFilters.filters);\n        setMyFilters(newFilters);\n    };\n\n    const handlePrice = value => {\n        const data = prices;\n        let array = [];\n\n        for (let key in data) {\n            if (data[key]._id === parseInt(value)) {\n                array = data[key].array;\n            }\n        }\n        return array;\n    };\n\n    return (\n        <Layout\n            title=\"Shop Page\"\n            description=\"Search and find books of your choice\"\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <h4>Filter by categories</h4>\n                    <ul>\n                        <Checkbox\n                            categories={categories}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"category\")\n                            }\n                        />\n                    </ul>\n\n                    <h4>Filter by price range</h4>\n                    <div>\n                        <RadioBox\n                            prices={prices}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"price\")\n                            }\n                        />\n                    </div>\n                </div>\n\n                <div className=\"col-8\">\n                    <h2 className=\"mb-4\">Products</h2>\n                    <div className=\"row\">\n                        {filteredResults.map((product, i) => (\n                            <div key={i} className=\"col-4 mb-3\">\n                                <Card product={product} />\n                            </div>\n                        ))}\n                    </div>\n                    <hr />\n                    {loadMoreButton()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Shop;\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShowImage from './ShowImage';\nimport moment from 'moment';\nimport { addItem, updateItem, removeItem } from './cartHelpers';\n\nconst SingleProductCard = ({\n  product,\n  showViewProductButton = true,\n  showAddToCartButton = true,\n  cartUpdate = false,\n  showRemoveProductButton = false,\n  setRun = f => f,\n  run = undefined\n  // changeCartSize\n}) => {\n  const [redirect, setRedirect] = useState(false);\n  const [count, setCount] = useState(product.count);\n\n  const showViewButton = showViewProductButton => {\n    return (\n      showViewProductButton && (\n        <Link to={`/product/${product._id}`} className=\"mr-2\">\n          <button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">View Product</button>\n        </Link>\n      )\n    );\n  };\n  const addToCart = () => {\n    // console.log('added');\n    addItem(product, setRedirect(true));\n  };\n\n  const shouldRedirect = redirect => {\n    if (redirect) {\n      return <Redirect to=\"/cart\" />;\n    }\n  };\n\n  const showAddToCartBtn = showAddToCartButton => {\n    return (\n      showAddToCartButton && (\n        <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2 card-btn-1  \">\n          Add to cart\n        </button>\n      )\n    );\n  };\n\n  const showStock = quantity => {\n    return quantity > 0 ? (\n      <span className=\"badge badge-primary badge-pill\">In Stock </span>\n    ) : (\n      <span className=\"badge badge-primary badge-pill\">Out of Stock </span>\n    );\n  };\n\n  const handleChange = productId => event => {\n    setRun(!run); // run useEffect in parent Cart\n    setCount(event.target.value < 1 ? 1 : event.target.value);\n    if (event.target.value >= 1) {\n      updateItem(productId, event.target.value);\n    }\n  };\n\n  const showCartUpdateOptions = cartUpdate => {\n    return (\n      cartUpdate && (\n        <div>\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">Adjust Quantity</span>\n            </div>\n            <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)} />\n          </div>\n        </div>\n      )\n    );\n  };\n  const showRemoveButton = showRemoveProductButton => {\n    return (\n      showRemoveProductButton && (\n        <button\n          onClick={() => {\n            removeItem(product._id);\n            setRun(!run); // run useEffect in parent Cart\n          }}\n          className=\"btn btn-outline-danger mt-2 mb-2\"\n        >\n          Remove Product\n        </button>\n      )\n    );\n  };\n  return (\n    <div className=\"card \">\n      <div className=\"card-header card-header-1 \">{product.name}</div>\n      <div className=\"card-body\">\n        {shouldRedirect(redirect)}\n        <ShowImage item={product} url=\"product\" />\n        <p className=\"card-p  mt-2\">{product.description} </p>\n        <p className=\"card-p black-10\">৳ {product.price}</p>\n        <p className=\"black-9\">Category: {product.category && product.category.name}</p>\n        <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\n        {showStock(product.quantity)}\n        <br />\n\n        {showViewButton(showViewProductButton)}\n\n        {showAddToCartBtn(showAddToCartButton)}\n\n        {showRemoveButton(showRemoveProductButton)}\n\n        {showCartUpdateOptions(cartUpdate)}\n      </div>\n    </div>\n  );\n};\n\nexport default SingleProductCard;\n","import React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport { read, listRelated } from './apiCore';\nimport SingleProductCard from './SingleProductCard';\nimport Card from './Card';\n\nconst Product = props => {\n    const [product, setProduct] = useState({});\n    const [relatedProduct, setRelatedProduct] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadSingleProduct = productId => {\n        read(productId).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProduct(data);\n                // fetch related products\n                listRelated(data._id).then(data => {\n                    if (data.error) {\n                        setError(data.error);\n                    } else {\n                        setRelatedProduct(data);\n                    }\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        const productId = props.match.params.productId;\n        loadSingleProduct(productId);\n    }, [props]);\n\n    return (\n        <Layout\n            title={product && product.name}\n            description={product && product.description && product.description.substring(0, 100)}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-8\">\n                    {product && product.description && <SingleProductCard product={product} showViewProductButton={false} />}\n                </div>\n\n                <div className=\"col-4\">\n                    <h4>Related products</h4>\n                    {relatedProduct.map((p, i) => (\n                        <div className=\"mb-3\" key={i}>\n                            <Card product={p} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Product;\n","import React, { useState, useEffect } from 'react';\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\nimport { emptyCart } from './cartHelpers';\nimport Card from './Card';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\n// import \"braintree-web\"; // not using this package\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\n    const [data, setData] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: '',\n        instance: {},\n        address: ''\n    });\n\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n    const getToken = (userId, token) => {\n        getBraintreeClientToken(userId, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n                setData({ ...data, error: data.error });\n            } else {\n                console.log(data);\n                setData({ clientToken: data.clientToken });\n            }\n        });\n    };\n\n    useEffect(() => {\n        getToken(userId, token);\n    }, []);\n\n    const handleAddress = event => {\n        setData({ ...data, address: event.target.value });\n    };\n\n    const getTotal = () => {\n        return products.reduce((currentValue, nextValue) => {\n            return currentValue + nextValue.count * nextValue.price;\n        }, 0);\n    };\n\n    const showCheckout = () => {\n        return isAuthenticated() ? (\n            <div>{showDropIn()}</div>\n        ) : (\n            <Link to=\"/signin\">\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\n            </Link>\n        );\n    };\n\n    let deliveryAddress = data.address;\n\n    const buy = () => {\n        setData({ loading: true });\n        // send the nonce to your server\n        // nonce = data.instance.requestPaymentMethod()\n        let nonce;\n        let getNonce = data.instance\n            .requestPaymentMethod()\n            .then(data => {\n                // console.log(data);\n                nonce = data.nonce;\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n                // and also total to be charged\n                // console.log(\n                //     \"send nonce and total to process: \",\n                //     nonce,\n                //     getTotal(products)\n                // );\n                const paymentData = {\n                    paymentMethodNonce: nonce,\n                    amount: getTotal(products)\n                };\n\n                processPayment(userId, token, paymentData)\n                    .then(response => {\n                        console.log(response);\n                        // empty cart\n                        // create order\n\n                        const createOrderData = {\n                            products: products,\n                            transaction_id: response.transaction.id,\n                            amount: response.transaction.amount,\n                            address: deliveryAddress\n                        };\n\n                        createOrder(userId, token, createOrderData)\n                            .then(response => {\n                                emptyCart(() => {\n                                    setRun(!run); // run useEffect in parent Cart\n                                    console.log('payment success and empty cart');\n                                    setData({\n                                        loading: false,\n                                        success: true\n                                    });\n                                });\n                            })\n                            .catch(error => {\n                                console.log(error);\n                                setData({ loading: false });\n                            });\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setData({ loading: false });\n                    });\n            })\n            .catch(error => {\n                // console.log(\"dropin error: \", error);\n                setData({ ...data, error: error.message });\n            });\n    };\n\n    const showDropIn = () => (\n        <div onBlur={() => setData({ ...data, error: '' })}>\n            {data.clientToken !== null && products.length > 0 ? (\n                <div>\n                    <div className=\"gorm-group mb-3\">\n                        <label className=\"text-muted\">Delivery address:</label>\n                        <textarea\n                            onChange={handleAddress}\n                            className=\"form-control\"\n                            value={data.address}\n                            placeholder=\"Type your delivery address here...\"\n                        />\n                    </div>\n\n                    <DropIn\n                        options={{\n                            authorization: data.clientToken,\n                            paypal: {\n                                flow: 'vault'\n                            }\n                        }}\n                        onInstance={instance => (data.instance = instance)}\n                    />\n                    <button onClick={buy} className=\"btn btn-success btn-block\">\n                        Pay\n                    </button>\n                </div>\n            ) : null}\n        </div>\n    );\n\n    const showError = error => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = success => (\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\n            Thanks! Your payment was successful!\n        </div>\n    );\n\n    const showLoading = loading => loading && <h2 className=\"text-danger\">Loading...</h2>;\n\n    return (\n        <div>\n            <h2>Total: ${getTotal()}</h2>\n            {showLoading(data.loading)}\n            {showSuccess(data.success)}\n            {showError(data.error)}\n            {showCheckout()}\n        </div>\n    );\n};\n\nexport default Checkout;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Layout from './Layout';\nimport { getCart } from './cartHelpers';\nimport Card from './Card';\nimport Checkout from './Checkout';\n\nconst Cart = () => {\n    const [items, setItems] = useState([]);\n    const [run, setRun] = useState(false);\n\n    useEffect(() => {\n        setItems(getCart());\n    }, [run]);\n\n    const showItems = items => {\n        return (\n            <div>\n                <h2>Your cart has {`${items.length}`} items</h2>\n                <hr />\n                {items.map((product, i) => (\n                    <Card\n                        key={i}\n                        product={product}\n                        showAddToCartButton={false}\n                        cartUpdate={true}\n                        showRemoveProductButton={true}\n                        setRun={setRun}\n                        run={run}\n                    />\n                ))}\n            </div>\n        );\n    };\n\n    const noItemsMessage = () => (\n        <h2>\n            Your cart is empty. <br /> <Link to=\"/shop\">Continue shopping</Link>\n        </h2>\n    );\n\n    return (\n        <Layout\n            title=\"Shopping Cart\"\n            description=\"Manage your cart items. Add remove checkout or continue shopping.\"\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-6\">{items.length > 0 ? showItems(items) : noItemsMessage()}</div>\n\n                <div className=\"col-6\">\n                    <h2 className=\"mb-4\">Your cart summary</h2>\n                    <hr />\n                    <Checkout products={items} setRun={setRun} run={run} />\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Cart;\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { listOrders, getStatusValues, updateOrderStatus } from \"./apiAdmin\";\nimport moment from \"moment\";\nimport { AdminLinks } from \"../user/AdminDashboard\";\n\nconst Orders = () => {\n    const [orders, setOrders] = useState([]);\n    const [statusValues, setStatusValues] = useState([]);\n\n    const { user, token } = isAuthenticated();\n\n    const loadOrders = () => {\n        listOrders(user._id, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setOrders(data);\n            }\n        });\n    };\n\n    const loadStatusValues = () => {\n        getStatusValues(user._id, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setStatusValues(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadOrders();\n        loadStatusValues();\n    }, []);\n\n    const showOrdersLength = () => {\n        if (orders.length > 0) {\n            return (\n                <h1 className=\"text-danger display-2\">\n                    Total orders: {orders.length}\n                </h1>\n            );\n        } else {\n            return <h1 className=\"text-danger\">No orders</h1>;\n        }\n    };\n\n    const showInput = (key, value) => (\n        <div className=\"input-group mb-2 mr-sm-2\">\n            <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\">{key}</div>\n            </div>\n            <input\n                type=\"text\"\n                value={value}\n                className=\"form-control\"\n                readOnly\n            />\n        </div>\n    );\n\n    const handleStatusChange = (e, orderId) => {\n        updateOrderStatus(user._id, token, orderId, e.target.value).then(\n            data => {\n                if (data.error) {\n                    console.log(\"Status update failed\");\n                } else {\n                    loadOrders();\n                }\n            }\n        );\n    };\n\n    const showStatus = o => (\n        <div className=\"form-group\">\n            <h3 className=\"mark mb-4\">Status: {o.status}</h3>\n            <select\n                className=\"form-control\"\n                onChange={e => handleStatusChange(e, o._id)}\n            >\n                <option>Update Status</option>\n                {statusValues.map((status, index) => (\n                    <option key={index} value={status}>\n                        {status}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n\n    return (\n        <Layout\n            title=\"Orders\"\n            description={`G'day ${\n                user.name\n            }, you can manage all the orders here`}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n            <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-6 offset-md-2\">\n                    {showOrdersLength()}\n\n                    {orders.map((o, oIndex) => {\n                        return (\n                            <div\n                                className=\"mt-5\"\n                                key={oIndex}\n                                style={{ borderBottom: \"5px solid indigo\" }}\n                            >\n                                <h2 className=\"mb-5\">\n                                    <span className=\"bg-primary\">\n                                        Order ID: {o._id}\n                                    </span>\n                                </h2>\n\n                                <ul className=\"list-group mb-2\">\n                                    <li className=\"list-group-item\">\n                                        {showStatus(o)}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Transaction ID: {o.transaction_id}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Amount: ${o.amount}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Ordered by: {o.user.name}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Ordered on:{\" \"}\n                                        {moment(o.createdAt).fromNow()}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Delivery address: {o.address}\n                                    </li>\n                                </ul>\n\n                                <h3 className=\"mt-4 mb-4 font-italic\">\n                                    Total products in the order:{\" \"}\n                                    {o.products.length}\n                                </h3>\n\n                                {o.products.map((p, pIndex) => (\n                                    <div\n                                        className=\"mb-4\"\n                                        key={pIndex}\n                                        style={{\n                                            padding: \"20px\",\n                                            border: \"1px solid indigo\"\n                                        }}\n                                    >\n                                        {showInput(\"Product name\", p.name)}\n                                        {showInput(\"Product price\", p.price)}\n                                        {showInput(\"Product total\", p.count)}\n                                        {showInput(\"Product Id\", p._id)}\n                                    </div>\n                                ))}\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Orders;\n","import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { read, update, updateUser } from './apiUser';\n\nconst Profile = ({ match }) => {\n    const [values, setValues] = useState({\n        name: '',\n        email: '',\n        password: '',\n        error: false,\n        success: false\n    });\n\n    const { token } = isAuthenticated();\n    const { name, email, password, error, success } = values;\n\n    const init = userId => {\n        // console.log(userId);\n        read(userId, token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: true });\n            } else {\n                setValues({ ...values, name: data.name, email: data.email });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.userId);\n    }, []);\n\n    const handleChange = name => e => {\n        setValues({ ...values, error: false, [name]: e.target.value });\n    };\n\n    const clickSubmit = e => {\n        e.preventDefault();\n        update(match.params.userId, token, { name, email, password }).then(data => {\n            if (data.error) {\n                // console.log(data.error);\n                alert(data.error);\n            } else {\n                updateUser(data, () => {\n                    setValues({\n                        ...values,\n                        name: data.name,\n                        email: data.email,\n                        success: true\n                    });\n                });\n            }\n        });\n    };\n\n    const redirectUser = success => {\n        if (success) {\n            return <Redirect to=\"/cart\" />;\n        }\n    };\n\n    const profileUpdate = (name, email, password) => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input type=\"text\" onChange={handleChange('name')} className=\"form-control\" value={name} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input type=\"email\" onChange={handleChange('email')} className=\"form-control\" value={email} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input type=\"password\" onChange={handleChange('password')} className=\"form-control\" value={password} />\n            </div>\n\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\n                Submit\n            </button>\n        </form>\n    );\n\n    return (\n        <Layout title=\"Profile\" description=\"Update your profile\" className=\"container-fluid\">\n            <h2 className=\"mb-4\">Profile update</h2>\n            {profileUpdate(name, email, password)}\n            {redirectUser(success)}\n        </Layout>\n    );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { getProducts, deleteProduct } from \"./apiAdmin\";\nimport { AdminLinks } from \"../user/AdminDashboard\";\n\nconst ManageProducts = () => {\n    const [products, setProducts] = useState([]);\n\n    const { user, token } = isAuthenticated();\n\n    const loadProducts = () => {\n        getProducts().then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setProducts(data);\n            }\n        });\n    };\n\n    const destroy = productId => {\n        deleteProduct(productId, user._id, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                loadProducts();\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadProducts();\n    }, []);\n\n    return (\n        <Layout\n            title=\"Manage Products\"\n            description=\"Perform CRUD on products\"\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n            <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-7\">\n                    <h2 className=\"text-center\">\n                        Total {products.length} products\n                    </h2>\n                    <hr />\n                    <ul className=\"list-group\">\n                        {products.map((p, i) => (\n                            <li\n                                key={i}\n                                className=\"list-group-item d-flex justify-content-between align-items-center\"\n                            >\n                                <strong>{p.name}</strong>\n                                <Link to={`/admin/product/update/${p._id}`}>\n                                    <span className=\"badge badge-warning badge-pill\">\n                                        Update\n                                    </span>\n                                </Link>\n                                <span\n                                    onClick={() => destroy(p._id)}\n                                    className=\"badge badge-danger badge-pill\"\n                                >\n                                    Delete\n                                </span>\n                            </li>\n                        ))}\n                    </ul>\n                    <br />\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default ManageProducts;\n","import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { getProduct, getCategories, updateProduct } from './apiAdmin';\nimport { AdminLinks } from '../user/AdminDashboard';\n\nconst UpdateProduct = ({ match }) => {\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        price: '',\n        categories: [],\n        category: '',\n        shipping: '',\n        quantity: '',\n        photo: '',\n        loading: false,\n        error: false,\n        createdProduct: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n    const [categories, setCategories] = useState([]);\n\n    const { user, token } = isAuthenticated();\n    const {\n        name,\n        description,\n        price,\n        // categories,\n        category,\n        shipping,\n        quantity,\n        loading,\n        error,\n        createdProduct,\n        redirectToProfile,\n        formData\n    } = values;\n\n    const init = productId => {\n        getProduct(productId).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                // populate the state\n                setValues({\n                    ...values,\n                    name: data.name,\n                    description: data.description,\n                    price: data.price,\n                    category: data.category._id,\n                    shipping: data.shipping,\n                    quantity: data.quantity,\n                    formData: new FormData()\n                });\n                // load categories\n                initCategories();\n            }\n        });\n    };\n\n    // load categories and set form data\n    const initCategories = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setCategories(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.productId);\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        updateProduct(match.params.productId, user._id, token, formData).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    name: '',\n                    description: '',\n                    photo: '',\n                    price: '',\n                    quantity: '',\n                    loading: false,\n                    error: false,\n                    redirectToProfile: true,\n                    createdProduct: data.name\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Description</label>\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Price</label>\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Category</label>\n                <select onChange={handleChange('category')} className=\"form-control\">\n                    <option>Please select</option>\n                    {categories &&\n                        categories.map((c, i) => (\n                            <option key={i} value={c._id}>\n                                {c.name}\n                            </option>\n                        ))}\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Shipping</label>\n                <select onChange={handleChange('shipping')} className=\"form-control\">\n                    <option>Please select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Quantity</label>\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Update Product</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\n            <h2>{`${createdProduct}`} is updated!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    const redirectUser = () => {\n        if (redirectToProfile) {\n            if (!error) {\n                return <Redirect to=\"/\" />;\n            }\n        }\n    };\n\n    return (\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\n            <div className=\"row\">\n                <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-6 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                    {redirectUser()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default UpdateProduct;\n","import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { getCategory, updateCategory } from './apiAdmin';\nimport { AdminLinks } from '../user/AdminDashboard';\n// {category: [\"5cd0258f2793ec6e100bc191\"], price: []}\n// http://localhost:3000/admin/category/update/5cd0258f2793ec6e100bc191\nconst UpdateCategory = ({ match }) => {\n    const [values, setValues] = useState({\n        name: '',\n        error: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    // destructure user and token from localStorage\n    const { user, token } = isAuthenticated();\n\n    const { name, error, redirectToProfile } = values;\n\n    const init = categoryId => {\n        getCategory(categoryId, token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                // populate the state\n                setValues({\n                    ...values,\n                    name: data.name\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.categoryId);\n    }, []);\n\n    const handleChange = name => event => {\n        setValues({ ...values, error: false, [name]: event.target.value });\n    };\n\n    const submitCategoryForm = e => {\n        e.preventDefault();\n        // update with ? you should send category name otherwise what to update?\n        const category = {\n            name: name\n        };\n        updateCategory(match.params.categoryId, user._id, token, category).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    name: data.name,\n                    error: false,\n                    redirectToProfile: true\n                });\n            }\n        });\n    };\n\n    const updateCategoryForm = () => (\n        <div className=\"wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55\">\n            <form className=\"mb-5\" onSubmit={submitCategoryForm}>\n                <span className=\"login100-form-title p-b-32 m-b-7\">Update Category Form</span>\n                <span className=\"txt1 p-b-11\">Category Name</span>\n                <br />\n                <br />\n                <div className=\"wrap-input100 validate-input m-b-36\">\n                    <input\n                        onChange={handleChange('name')}\n                        value={name}\n                        className=\"input100\"\n                        type=\"text\"\n                        required\n                        name=\"name\"\n                    />\n                </div>\n                <div className=\"w-size25\">\n                    <button type=\"submit\" className=\"flex-c-m size2 bg1 bo-rad-23 hov1 m-text3 trans-0-4\">\n                        Save Changes\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n\n    const showError = () => (\n        <div className={'alert alert-danger'} role=\"alert\" style={{ display: error ? '' : 'none' }}>\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n            {error}\n        </div>\n    );\n\n    const redirectUser = () => {\n        if (redirectToProfile) {\n            if (!error) {\n                return <Redirect to=\"/admin/categories\" />;\n            }\n        }\n    };\n\n    const goBackBTN = () => {\n        return (\n            <div className=\"mt-5\">\n                <Link to=\"/admin/categories\" className=\"text-info\">\n                    Back To Admin Home\n                </Link>\n            </div>\n        );\n    };\n\n    return (\n        <Layout\n            title={`Hi ${user.name}`}\n            description={`This is Update Product Action Page`}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n            <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-6 offset-md-2 m-b-250 mb-5\">\n                    {showError()}\n                    {updateCategoryForm()}\n                    {goBackBTN()}\n                    {redirectUser()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default UpdateCategory;\n","\nimport React, { useState, useEffect } from 'react';\nimport Layout from './../../core/Layout';\nimport { isAuthenticated } from './../../auth';\nimport { Link } from 'react-router-dom';\nimport {createTopupThumb} from './../apiAdmin'\nimport { AdminLinks } from '../../user/AdminDashboard';\n\nconst AddTopupThumb = () => {\n    const [values, setValues] = useState({\n        title: '',\n        type: '',\n        thumb: '',\n        loading: false,\n        error: '',\n        createdTopup: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        title,\n        loading,\n        type,\n        error,\n        createdTopup,\n        redirectToProfile,\n        formData\n    } = values;\n\n\n        // load categories and set form data\n        const init = () => {\n            \n            setValues({\n                ...values,\n                formData: new FormData()\n             });\n                \n            \n        };\n    \n        useEffect(() => {\n            init();\n        }, []);\n\n\n    const handleChange = name => event => {\n        const value = name === 'thumb' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        createTopupThumb(user._id, token, formData).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    title: '',\n                    thumb: '',\n                    loading: false,\n                    createdProduct: data.title\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Game Thumbnail Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input onChange={handleChange('thumb')} type=\"file\" name=\"thumb\" accept=\"image/*\" />\n                </label>\n            </div>\n            <div className=\"form-group col-md-4\">\n                    \n                <label className=\"text-muted\">Type</label>\n                <select name=\"type\" onChange={handleChange('type')} className=\"form-control\">\n                    <option disabled selected>Please select type</option>\n                    <option value=\"inGame\">In Game</option>\n                    <option value=\"idCode\">Id Code</option>\n                        \n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Title of the Game</label>\n                <input onChange={handleChange('title')} type=\"text\" className=\"form-control\" value={title} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Create Topup Thumb</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdTopup ? '' : 'none' }}>\n            <h2>{`${createdTopup}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Add a new topup system\" description={`G'day ${user.name}, ready to add a new topup?`}>\n            <div className=\"row\">\n            <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-6 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddTopupThumb;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport Layout from './../../core/Layout';\nimport { isAuthenticated } from './../../auth';\nimport { getRechargePackagesByGameName, getWallet } from './../apiCore';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { createTopupOrder } from './../apiCore';\nimport { showBalance } from './../../admin/apiAdmin';\n\n\n\nconst TopupForm = () => {\n\n    // Id for the game name to load packages under it\n    // id comes from parameter url\n    const { id, type } = useParams();\n    const [wallet, setWallet] = useState(null);\n    const [amount, setAmount] = useState(null);\n    const [adminLimit, setAdminLimit] = useState(0);\n    const [diamondValue, setDiamondValue] = useState(null);\n\n    const [values, setValues] = useState({\n        gameUserId: '',\n        accountType: '',\n        gmailOrFacebook: '',\n        password: '',\n        securityCode: '',\n        selectRecharge: '',\n        selectRecharges:[],\n        loading: false,\n        error: '',\n        createdTopupOrder: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        gameUserId,\n        accountType,\n        gmailOrFacebook,\n        password,\n        securityCode,\n        selectRecharge,\n        selectRecharges,\n        loading,\n        error,\n        createdTopupOrder,\n        redirectToProfile,\n        formData\n    } = values;\n\n\n\n    // load Recharge packages and set form data\n\n    const init = () => {\n        setValues({ ...values, loading: true });\n        getRechargePackagesByGameName(id).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    selectRecharges: data,\n                    formData: new FormData(),\n                    loading: false\n                });\n\n                \n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n        //setwallet\n        useEffect(()=>{\n            setValues({ ...values, loading: true });\n            getWallet(user._id).then(data=>{\n                if (!data) {\n                    //console.log(err)\n                } else {\n                    setWallet(data);\n                    setValues({ ...values, loading: false });\n                }\n            })\n        }, []);\n    \n    \n\n    //set admin limit\n    useEffect(()=>{\n        setValues({ ...values, loading: true });\n        showBalance().then(data=>{\n            if (!data) {\n                 //console.log(err)\n                setAdminLimit(0);\n            } else {\n                setDiamondValue(data[0].takaPerDiamond);\n                setAdminLimit(data[0].balance)\n                setValues({ ...values, loading: false  });\n            }\n        })\n    }, []);\n\n    useEffect(()=>{\n        if(selectRecharges.length > 0){\n    \n            let selectedpack = selectRecharges.filter(sr =>{\n                return sr._id === selectRecharge;\n            });\n            console.log('se', selectedpack);\n\n            if(selectedpack.length > 0){\n                setAmount(selectedpack[0].packageAmount);\n            }\n        }\n        \n    }, [selectRecharge])\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        createTopupOrder(user._id, token, formData, id).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    gameUserId: '',\n                    accountType: '',\n                    gmailOrFacebook: '',\n                    password: '',\n                    selectRecharge: '',\n                    securityCode: '',\n                    loading: false,\n                    createdTopupOrder: data.name\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Request a Topup</h4>\n            { type === 'inGame' ?\n                \n                <Fragment>\n                    {console.log(type)}\n                    <div className=\"row\">\n\n                    <div className=\"form-group col-md-4\">\n                        \n                        <label className=\"text-muted\">Account Type</label>\n                        <select name=\"accountType\" onChange={handleChange('accountType')} className=\"form-control\">\n                            <option disabled selected>Please select</option>\n                            <option value=\"facebook\">Facebook</option>\n                            <option value=\"gmail\">Gmail</option>\n                            \n                        </select>\n                    </div>\n\n                    <div className=\"form-group col-md-4\">\n                        \n                        {\n                            accountType === 'facebook' ? \n                                <label className=\"text-muted\">Your Facebook</label>\n                            :\n                            <Fragment>\n                            {\n                                accountType === 'gmail' ? \n                                    <label className=\"text-muted\">Your Gmailt</label>\n                                \n                                :\n                                <label className=\"text-muted\">Select Account type first</label>\n                                \n                            }\n                            </Fragment>\n                        }\n                        <input onChange={handleChange('gmailOrFacebook')} type=\"text\" className=\"form-control\" value={gmailOrFacebook} />\n                        \n                    </div>\n\n                    <div className=\"form-group col-md-4\">\n                        <label className=\"text-muted\">Password</label>\n                        <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" name=\"password\" value={password} />\n                    </div>\n                    </div>\n\n                    {\n                    accountType === 'gmail' ? \n                        <div className=\"form-group\">\n                            <label className=\"text-muted\">Security Code</label>\n                            <input onChange={handleChange('securityCode')} type=\"text\" className=\"form-control\" value={securityCode} />\n                        </div>\n                        :\n                        <Fragment></Fragment>\n                    }\n                </Fragment>:\n\n                <Fragment></Fragment>\n                \n            }\n\n            {\n                 type === 'codeId' ?\n                 \n                <div className=\"row\">\n                     <div className=\"form-group col-md-4\">\n                        <label className=\"text-muted\">Game Id</label>\n                        <input onChange={handleChange('gameUserId')} type=\"text\" className=\"form-control\" value={gameUserId} />\n                    </div>\n                    <div className=\"form-group col-md-4\">\n                        <label className=\"text-muted\">Password</label>\n                        <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" name=\"password\" value={password} />\n                    </div>\n                </div>\n                 \n                 :\n                 <Fragment></Fragment>\n            }\n            \n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Recharge Package</label>\n                <select name=\"selectRecharge\" onChange={handleChange('selectRecharge')} className=\"form-control\">\n                    <option disabled selected>Please select</option>\n                    {selectRecharges &&\n                        selectRecharges.map((c, i) => (\n                            \n                            <option key={i} value={c._id}>\n                                {c.packageName}\n                            </option>\n                            \n                        ))}\n                </select>\n            </div>\n\n            <div className=\"form-group col-md-4\">\n                <label className=\"text-muted\">Amount to pay: { amount ? <b>{amount}</b>: <b>0</b> }</label>\n            </div>\n\n            <div className=\"money\">\n                <h4>Your Balance: { wallet ? wallet.amount : <span>Loading...</span>}</h4>\n            </div>\n\n                            { wallet && amount ? wallet.amount < amount ? \n                                <h4>You have less balance than you have to pay. Please <Link to=\"/\"><button className=\"btn btn-primary\">add money</button></Link></h4>\n                                :\n                                <Fragment></Fragment>\n                                :\n                                <Fragment></Fragment>\n                            }\n\n                            { amount > adminLimit ? \n                                <h4>You are ordering more than admin can handle. Please select less</h4>\n                                :\n                                <Fragment></Fragment>\n                                \n                            }\n            <h4>Admin Balance: { adminLimit }</h4>\n\n            { diamondValue && amount ?\n                <p>You will receive - {parseInt(amount / diamondValue)} Diamonds </p>\n                :\n                <Fragment></Fragment>\n            }\n\n            <button className=\"btn btn-outline-primary\">Order Topup</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdTopupOrder ? '' : 'none' }}>\n            <h2>{`${createdTopupOrder}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Request a topup\" description={`G'day ${user.name}, ready to add a new topup request?`}>\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default TopupForm;\n","import React, { useState, useEffect } from 'react';\nimport Layout from './../../core/Layout';\nimport { isAuthenticated } from './../../auth';\nimport { Link } from 'react-router-dom';\nimport {getTopupThumbs} from './../../core/apiCore'\nimport { createRechargePackage } from './../apiAdmin';\nimport { AdminLinks } from '../../user/AdminDashboard';\n\nconst AddRechargePackage = () => {\n    const [values, setValues] = useState({\n        topupGameNames: [],\n        topupGameName: '',\n        packageName: '',\n        packageAmount: '',\n        loading: false,\n        error: '',\n        createdRechargePackage: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        topupGameNames,\n        topupGameName,\n        packageName,\n        packageAmount,\n        error,\n        createdRechargePackage,\n        redirectToProfile,\n        formData,\n        loading\n    } = values;\n\n // load Topup Game names and set form data\n const init = () => {\n    setValues({ ...values, loading: true });\n    getTopupThumbs().then(data => {\n        if (data.error) {\n            setValues({ ...values, error: data.error });\n        } else {\n            setValues({\n                ...values,\n                topupGameNames: data,\n                formData: new FormData(),\n                loading: false,\n            });\n        }\n    });\n};\n\nuseEffect(() => {\n    init();\n}, []);\n\nconst handleChange = name => event => {\n    const value = name === 'photo' ? event.target.files[0] : event.target.value;\n    formData.set(name, value);\n    setValues({ ...values, [name]: value });\n};\n\nconst clickSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: '', loading: true });\n\n    createRechargePackage(user._id, token, formData).then(data => {\n        if (data.error) {\n            setValues({ ...values, error: data.error });\n        } else {\n            setValues({\n                ...values,\n                packageName: '',\n                packageAmount: '',\n                loading: false,\n                createdRechargePackage: data.name\n            });\n        }\n    });\n};\n\nconst newPostForm = () => (\n    <form className=\"mb-3\" onSubmit={clickSubmit}>\n        <h4>Create Racharge Package</h4>\n        \n        <div className=\"form-group\">\n            <label className=\"text-muted\">Game Name</label>\n            <select name=\"topupGameName\" onChange={handleChange('topupGameName')} className=\"form-control\">\n                <option disabled selected>Please select</option>\n                {topupGameNames &&\n                    topupGameNames.map((c, i) => (\n                        \n                        <option key={i} value={c._id}>\n                            {c.title}\n                        </option>\n                        \n                    ))}\n            </select>\n        </div>\n\n        <div className=\"form-group\">\n            <label className=\"text-muted\">Package Name</label>\n            <input name=\"packageName\" onChange={handleChange('packageName')} type=\"text\" className=\"form-control\" value={packageName} />\n        </div>\n\n        <div className=\"form-group\">\n            <label className=\"text-muted\">Package Price</label>\n            <input name=\"packageAmount\" onChange={handleChange('packageAmount')} type=\"number\" className=\"form-control\" value={packageAmount} />\n        </div>\n\n\n        <button className=\"btn btn-outline-primary\">Create Recharge Package</button>\n    </form>\n);\n\nconst showError = () => (\n    <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n        {error}\n    </div>\n);\n\nconst showSuccess = () => (\n    <div className=\"alert alert-info\" style={{ display: createdRechargePackage ? '' : 'none' }}>\n        <h2>{`${createdRechargePackage}`} is created!</h2>\n    </div>\n);\n\nconst showLoading = () =>\n    loading && (\n        <div className=\"alert alert-success\">\n            <h2>Loading...</h2>\n        </div>\n    );\n\nreturn (\n    <Layout title=\"Add a new recharge package\" description={`G'day ${user.name}, ready to add a new recharge package?`}>\n        <div className=\"row\">\n        <div className=\"col-md-3\"><AdminLinks /></div>\n            <div className=\"col-md-6 offset-md-2\">\n                {showLoading()}\n                {showSuccess()}\n                {showError()}\n                {newPostForm()}\n            </div>\n        </div>\n    </Layout>\n);\n};\n\nexport default AddRechargePackage;\n","import React, {useEffect, useState, Fragment} from 'react';\nimport { isAuthenticated } from './../../auth';\nimport { getTopupOrdersAdmin, updateTopupOrderAdmin } from '../apiAdmin';\nimport { Link } from 'react-router-dom';\nimport Layout from '../../core/Layout';\nimport { AdminLinks } from '../../user/AdminDashboard';\nimport { sendMessage } from '../../core/apiCore';\n\nconst ShowTopupOrders = ()=>{\n    const [orders, setOrders] = useState();\n\n    const {user, token} = isAuthenticated();\n\n    useEffect(()=>{\n        getTopupOrdersAdmin(user._id, token).then(order=>{\n            \n            setOrders(order);\n        })\n    \n    },[]);\n\n    // update order status\n    const markTopupOrderStatus = (orderId, status, customerId) => {\n            updateTopupOrderAdmin(orderId, user._id, token, {status, customerId})\n                .then(data => {\n                    if (data.error) {\n                        console.log(\"couldn't happen\");\n                    } else {\n                        \n                        console.log('updated');\n                    }\n        })\n\n    }\n\n    return(\n        <Fragment>\n            \n        <Layout\n            title=\"All topup orders\"\n            description=\"See new orders\"\n        ></Layout>\n\n        <div className=\"row\">\n        <div className=\"col-md-3\"><AdminLinks /></div>\n            <div className=\"col-md-6\">\n            {\n                orders ? \n                orders.map(order=>{\n                    return(\n                        \n                                <div className=\"col-md-6 p-5\" key={order._id}>\n                                    <Link exact to={`/topup-orders/${order._id}`}>\n                                        \n                                        <h6>Requested by: { order.user.name }</h6>\n                                    </Link>\n                                        <h6 className=\"hidden\">{ order._id }</h6>\n                                        <h6>Game: {order.topupGameId.title}</h6>\n                                        <h6>Pecharge Package: {order.selectRecharge.packageName}</h6>\n                                        <h6>Account type: { order.accountType }</h6>\n                                        <h6>Number: { order.gmailOrFacebook }</h6>\n                                        <h6>Password: { order.password }</h6>\n                                        <h6>Paid Amount: { order.price } Tk</h6>\n                                        <h6>Status: {order.status} </h6>\n                                        \n                                        \n                                        <Link exact to={`/messages/pair/${order.pair._id}`} >\n                                            <h5 className=\"border\"><b>Send message</b></h5>\n                                        </Link>\n\n                                        { order.status === 'completed' || order.status === 'cancelled' ?\n                                            <Fragment></Fragment>\n                                            :\n                                \n                                        <Fragment>\n                                            <b>Assigned to:</b> {\n                                                order.assignedTo ?\n                                                <p>{order.assignedTo.name}</p>\n                                                :\n                                                <Fragment>\n                                                <p>none</p>\n                                                    <Link exact to={`/admin/assign-topup-order/${order._id}`} className=\"border btn btn-secondary\"><b>Assign it to a admin</b></Link>\n                                                </Fragment>\n                                            }\n                                            <p className=\"btn btn-primary\" role=\"button\" onClick={() => { markTopupOrderStatus(order._id, 'completed', order.user._id) }}>Mark completed</p>\n                                            <p className=\"btn btn-primary\" role=\"button\" onClick={() => { markTopupOrderStatus(order._id, 'cancelled', order.user._id) }}>Mark cancelled</p>\n                                        </Fragment>\n                                        }\n                                        \n                                    \n                                </div>          \n                       \n                    )\n                })\n                :\n                <Fragment>Loading...</Fragment>\n            }\n            </div>\n        </div>\n        </Fragment>\n\n    )\n}\n\nexport default ShowTopupOrders;","import React, { useState, useEffect } from 'react';\nimport Layout from './../../core/Layout';\nimport { isAuthenticated } from './../../auth';\nimport { Link } from 'react-router-dom';\nimport { addBalance, showBalance } from './../apiAdmin';\nimport { AdminLinks } from '../../user/AdminDashboard';\n\nconst AddBalance = () => {\n    const [values, setValues] = useState({\n        balance: '',\n        oldBalance: 0,\n        loading: false,\n        error: '',\n        createdBalance: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        balance,\n        oldBalance,\n        loading,\n        error,\n        createdBalance,\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        showBalance().then(data => {\n            \n                if (data.error) {\n                    setValues({ ...values, error: data.error });\n                } else {\n                    let stock = 0;\n                    if(data.length === 1){\n                        stock = data[0].balance;\n                    }\n                    setValues({\n                        ...values,\n                        oldBalance: stock,\n                        formData: new FormData()\n                    });\n                }\n            \n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        addBalance(user._id, token, {balance}).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                let newOldBalance = oldBalance + Number(balance);\n                if(newOldBalance < 0){\n                    newOldBalance = 0;\n                }\n                setValues({\n                    ...values,\n                    oldBalance: newOldBalance,\n                    balance: '',\n                    loading: false,\n                    createdBalance: 'Balance'\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Balance Stock in BDT: {oldBalance} </h4>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Add more balance or subtract by putting - before</label>\n                <input onChange={handleChange('balance')} type=\"number\" className=\"form-control\" value={balance} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Add Balance</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdBalance ? '' : 'none' }}>\n            <h2>{`${createdBalance}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Add balance\" description={`for stock of topup ?`}>\n            <div className=\"row\">\n                <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-6 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddBalance;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Layout from '../core/Layout';\nimport { AdminLinks } from '../user/AdminDashboard';\nimport { UserLinks } from './../user/UserDashboard';\nimport { isAuthenticated } from '../auth';\nimport { getMessage } from '../core/apiCore';\n\nconst ShowMessagePair = () => {\n    const [messagesPair, setMessagesPair] = useState(null);\n    const { user, token } = isAuthenticated();\n\n    useEffect(() => {\n        getMessage(user._id, token).then(data => {\n            if (!data) {\n                console.log('no message')\n            } else {\n                \n                setMessagesPair(data);\n                \n            }\n        })\n    }, []);\n\n    return (\n\n\n\n        <Layout\n            title={`Hi ${user.name}`}\n            description={`This is Message Page`}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                {\n                    user.role === 1 ?\n                        <div className=\"col-md-3\"><AdminLinks /></div>\n                        :\n                        <div className=\"col-md-3\"><UserLinks /></div>\n                }\n            \n                <div className=\"col-md-6 offset-md-2 m-b-250 mb-5\">\n                    \n                    {\n                        messagesPair ?\n                            messagesPair.map(messages=>{\n                                return (\n                                    <div className=\"border p-1 m-3\" key={messages._id}>\n                                        <Link exact to={`/messages/pair/${messages._id}/`}>\n                                            <p>By: {messages.user.name}</p>\n                                            {\n                                                messages.message.filter(receivedMsg => {\n                                                    return (receivedMsg.user === user._id && receivedMsg.seen === false)\n                                                }).length > 0 ?\n                                                    <p>Unread messages</p>\n                                                    :\n                                                    <Fragment></Fragment>\n                                                \n                                            }\n                                            <p>Message: {messages.message[messages.message.length - 1].message}</p>\n                                            <p>To: {messages.receiver.name}</p>\n                                            \n                                        </Link>\n                                    </div>\n                                       \n                                )\n                            \n                            })\n                            :\n                            <Fragment></Fragment>\n                    }\n                </div>  \n               \n            </div>\n        </Layout>\n    )\n}\n\nexport default ShowMessagePair;\n\n\n","import React, { useState, useEffect, Fragment, useRef, useContext } from 'react';\nimport Layout from '../core/Layout';\nimport io from \"socket.io-client\";\nimport { isAuthenticated } from '../auth';\nimport { useParams } from 'react-router-dom';\nimport { messageByPairId, sendMessage } from '../core/apiCore';\nimport { AdminLinks } from '../user/AdminDashboard';\nimport { UserLinks } from '../user/UserDashboard';\nimport { NotificationsContext } from '../context/notificationsContext';\n\n\nconst ShowChat = () => {\n    const socketRef = useRef();\n    const [ notifications, setNotifications ] = useContext(NotificationsContext);\n    const { pairId } = useParams();\n    const [values, setValues] = useState({\n        receiverId: '',\n        messages: [],\n        message: '',\n        loading: false,\n        error: '',\n        createdMessage: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    //connect socket\n    socketRef.current = io.connect('/');\n\n    const { user, token } = isAuthenticated();\n    const {\n        receiverId,\n        messages,\n        message,\n        loading,\n        error,\n        createdMessage,\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        messageByPairId(user._id, token, pairId).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                let realReciever = '';\n                if (data.user._id === user._id) {\n                    realReciever = data.receiver._id;\n                } else {\n                    realReciever = data.user._id;\n                }\n                setValues({\n                    ...values,\n                    receiverId: realReciever,\n                    messages: data.message,\n                    formData: new FormData()\n                });\n                \n                \n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n        const newMsgDetails = {};\n        newMsgDetails.userId = user;\n        newMsgDetails.receiverId = receiverId;\n        newMsgDetails.pairId = pairId;\n        newMsgDetails.message = message;\n        \n        \n        socketRef.current.emit('sendMessage', newMsgDetails);\n\n        socketRef.current.on('newMessage', msg => {\n            \n            setValues({\n                ...values,\n                messages: [...messages, msg],\n                message: '',\n                loading: false,\n                createdMessage: 'Message loaded'\n            });\n            \n        });\n\n        \n\n        // sendMessage(token, user._id, receiverId, pairId, formData).then(data => {\n        //     if (data.error) {\n        //         setValues({ ...values, error: data.error });\n        //     } else {\n        //         setValues({\n        //             ...values,\n        //             message: '',\n        //             loading: false,\n        //             createdMessage: data.message\n        //         });\n        //         console.log('message sent')\n        //     }\n        // });\n    };\n\n    //get messages\n    useEffect(() => {\n        socketRef.current.on('newMessage', msg => {\n            \n            setValues({\n                ...values,\n                messages: [...messages, msg],\n                message: '',\n                createdMessage: 'Message loaded'\n            });\n            //savedReceivedMessageAsSeenByMsgId(user, token, msgId)\n            \n        });\n    }, [])\n\n\n    const newPostForm = () => (\n        <Fragment>\n            <div className=\"messages\">\n                {\n                    messages.map(msg => {\n                        return (\n                            <p className=\"border message\">{msg.message}</p>\n                        )\n                        \n                    })\n                }\n            </div>\n            <form className=\"mb-3\" onSubmit={clickSubmit}>\n                <div className=\"form-group\">\n                    \n                    <input placeholder=\"type\" onChange={handleChange('message')} type=\"text\" className=\"form-control\" value={message} />\n                </div>\n\n                <button className=\"btn btn-outline-primary\">Send Message</button>\n            </form>\n        </Fragment>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdMessage ? '' : 'none' }}>\n            <h2>{`${createdMessage}`}!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n    \n    \n    return (\n        <Layout title=\"messages\">\n            <div className=\"row\">\n                {user.role === 1 ?\n                    <div className=\"col-md-3\"><AdminLinks /></div>\n                    :\n                    <div className=\"col-md-3\"><UserLinks /></div>\n                }\n            \n                <div className=\"col-md-6 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default ShowChat;\n","import React, {useEffect, useState, Fragment} from 'react';\nimport { isAuthenticated } from './../../auth';\nimport { getAssignedTopupOrdersAdmin, updateTopupOrderAdmin } from '../apiAdmin';\nimport { Link } from 'react-router-dom';\nimport Layout from '../../core/Layout';\nimport { AdminLinks } from '../../user/AdminDashboard';\nimport { sendMessage } from '../../core/apiCore';\n\nconst AssignedTopupOrders = ()=>{\n    const [orders, setOrders] = useState();\n    const {user, token} = isAuthenticated();\n\n    useEffect(()=>{\n        getAssignedTopupOrdersAdmin(user._id, token).then(order=>{\n            \n            setOrders(order);\n        })\n    \n    },[]);\n\n    // update order status\n    const markTopupOrderStatus = (orderId, status, customerId) => {\n            updateTopupOrderAdmin(orderId, user._id, token, {status, customerId})\n                .then(data => {\n                    if (data.error) {\n                        console.log(\"couldn't happen\");\n                    } else {\n                        \n                        console.log('updated');\n                    }\n        })\n\n    }\n\n    return(\n        <Fragment>\n            \n        <Layout\n            title=\"All topup orders\"\n            description=\"See new orders\"\n        ></Layout>\n\n        <div className=\"row\">\n        <div className=\"col-md-3\"><AdminLinks /></div>\n            <div className=\"col-md-6\">\n                <p>Assigned to you to complete</p>\n            {\n                orders ? \n                orders.map(order=>{\n                    return(\n                        \n                                <div className=\"col-md-6 p-5\" key={order._id}>\n                                    <Link exact to={`/topup-orders/${order._id}`}>\n                                        \n                                        <h6>Requested by: { order.user.name }</h6>\n                                    </Link>\n                                        <h6 className=\"hidden\">{ order._id }</h6>\n                                        <h6>Game: {order.topupGameId.title}</h6>\n                                        <h6>Pecharge Package: {order.selectRecharge.packageName}</h6>\n                                        <h6>Account type: { order.accountType }</h6>\n                                        <h6>Number: { order.gmailOrFacebook }</h6>\n                                        <h6>Password: { order.password }</h6>\n                                        <h6>Paid Amount: { order.price } Tk</h6>\n                                        <h6>Status: { order.status } </h6>\n\n                                        <Link exact to={`/messages/pair/${order.pair._id}`} >\n                                            <h5 className=\"border\"><b>Send message</b></h5>\n                                        </Link>\n\n                                        { order.status === 'completed' || order.status === 'cancelled' ?\n                                            <Fragment></Fragment>\n                                            :\n                                \n                                        <Fragment>\n                                            <p className=\"btn btn-primary\" role=\"button\" onClick={() => { markTopupOrderStatus(order._id, 'completed', order.user._id) }}>Mark completed</p>\n                                            <p className=\"btn btn-primary\" role=\"button\" onClick={() => { markTopupOrderStatus(order._id, 'cancelled', order.user._id) }}>Mark cancelled</p>\n                                        </Fragment>\n                                        }\n                                        \n                                    \n                                </div>          \n                       \n                    )\n                })\n                :\n                <Fragment>Loading...</Fragment>\n            }\n            </div>\n        </div>\n        </Fragment>\n\n    )\n}\n\nexport default AssignedTopupOrders;","import React, { Fragment, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport { isAuthenticated } from '../../auth';\nimport Layout from '../../core/Layout';\nimport { AdminLinks } from '../../user/AdminDashboard';\nimport { getAllAdmins, assignTopupOrder } from './../apiAdmin';\nimport './showAdmins.css';\n\nconst ShowAdmins = ()=>{\n    const history = useHistory();\n    const [admins, setAdmins] = useState([]);\n    const {topupOrderId} = useParams();\n    const { user, token } = isAuthenticated();\n\n    useEffect(()=>{\n        getAllAdmins(user, token).then(data=>{\n            console.log(data);\n            setAdmins(data);\n        })\n    },[]);\n\n    //assign order to admin onclick\n    const assignTopupToAdmin = (adminId)=>{\n        assignTopupOrder(user, token, adminId, topupOrderId).then(data=>{\n            if(data){\n                 history.push('/admin/topup-orders')\n            }else{\n                console.log('err')\n            }\n           \n\n        })\n    }\n\n    return(\n        <Fragment>\n            <Layout\n                title=\"Assign this order\"\n                description=\"To a admin agent\"\n            >\n\n            </Layout>\n            <div className=\"row\">\n                <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-7\">\n                    { admins ?\n                        admins.map(admin=>{\n                            return(\n                                <div className=\"col-md-10\">\n                                    <p onClick={()=>{assignTopupToAdmin(admin._id)}} className=\"border pointer\">{admin.name}: {admin.email}, click to assign</p>\n                                </div>\n                            )\n                        })\n                        :\n                        <Fragment></Fragment>\n                    }\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ShowAdmins;","import React, { useState, useEffect } from 'react';\nimport Layout from '../../core/Layout';\nimport { isAuthenticated } from '../../auth';\nimport { addDiamondValue, showBalance } from '../apiAdmin';\nimport { AdminLinks } from '../../user/AdminDashboard';\n\nconst ModifyDiamondsValue = () => {\n    const [values, setValues] = useState({\n        diamondValue: '',\n        oldDiamondValue: 0,\n        loading: false,\n        error: '',\n        createdDiamondValue: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        diamondValue,\n        oldDiamondValue,\n        loading,\n        error,\n        createdDiamondValue,\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        showBalance().then(data => {\n            \n                if (data.error) {\n                    setValues({ ...values, error: data.error });\n                } else {\n                    console.log(data);\n                    let diamondVal = 0;\n                    if(data.length === 1){\n                        diamondVal = data[0].takaPerDiamond;\n                    }\n                    setValues({\n                        ...values,\n                        oldDiamondValue: diamondVal,\n                        formData: new FormData()\n                    });\n                }\n            \n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        addDiamondValue(user._id, token, {diamondValue}).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                \n                setValues({\n                    ...values,\n                    oldDiamondValue: diamondValue,\n                    diamondValue: '',\n                    loading: false,\n                    createdDiamondValue: 'Balance'\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>How many taka equals to 1 diamond? Now {oldDiamondValue}tk = 1 Diamond</h4>\n\n            <div className=\"form-group\">\n                \n                <input onChange={handleChange('diamondValue')} type=\"number\" className=\"form-control\" value={diamondValue} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Add Diamond value</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdDiamondValue ? '' : 'none' }}>\n            <h2>{`${createdDiamondValue}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Add balance\" description={`for stock of topup ?`}>\n            <div className=\"row\">\n                <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-6 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default ModifyDiamondsValue;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport Layout from './../../core/Layout';\nimport { isAuthenticated } from './../../auth';\nimport { addCoupon, showCoupon } from './../apiAdmin';\nimport { AdminLinks } from '../../user/AdminDashboard';\nimport { getDiamonds, collectCouponByUser,getCouponsByUser } from '../../user/apiUser';\nimport './coupon.css'\n\nconst AddCoupon = () => {\n     const [userCoupons, setUserCoupons] = useState([]);\n    const [diamondAmount, setDiamondAmount] = useState(0);\n    const [values, setValues] = useState({\n        coupons: [],\n        couponName: '',\n        couponCode: '',\n        shortDetails: '',\n        discounts: 0,\n        diamonds: 0,\n        loading: false,\n        error: '',\n        createdCoupon: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        coupons,\n        discounts,\n        diamonds,\n        couponName,\n        couponCode,\n        shortDetails,\n        loading,\n        error,\n        createdCoupon,\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        showCoupon().then(data => {\n            \n                if (data.error) {\n                    setValues({ ...values, error: data.error });\n                } else {\n                    \n                    setValues({\n                        ...values,\n                        coupons: data,\n                        formData: new FormData()\n                    });\n                }\n            \n        });\n\n        getDiamonds(user, token).then(data=>{\n            if (data.error) {\n                setDiamondAmount(0);\n            } else{\n                setDiamondAmount(data.amount)\n            }\n        });\n\n        getCouponsByUser(user, token).then(data=>{\n            if(data.error){\n                setUserCoupons([])\n            }else{\n                if(user.coupon){\n                    setUserCoupons(data.coupon)\n                }else{\n                    setUserCoupons([])\n                }\n                \n            }\n        })\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        addCoupon(user._id, token, formData).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                \n                setValues({\n                    ...values,\n                    coupons: [...coupons, data],\n                    loading: false,\n                    createdCoupon: 'Coupon'\n                });\n            }\n        });\n    };\n\n    const collectCoupon = (couponId)=>{\n        collectCouponByUser(couponId, user, token).then(data=>{\n            if(data.error){\n                setValues({ ...values, error: data.error });\n            }else{\n                setUserCoupons(...userCoupons, data);\n            }\n        })\n    }\n\n    const newPostForm = () => (\n        <Fragment>\n            <form className=\"mb-3\" onSubmit={clickSubmit}>\n                <h4>Add a coupon </h4>\n                <div className=\"form-group\">\n                    <label className=\"text-muted\">Coupon Name</label>\n                    <input onChange={handleChange('couponName')} type=\"text\" className=\"form-control\" value={couponName} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label className=\"text-muted\">Coupon Code</label>\n                    <input onChange={handleChange('couponCode')} type=\"text\" className=\"form-control\" value={couponCode} />\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"text-muted\">Short Details</label>\n                    <input onChange={handleChange('shortDetails')} type=\"text\" className=\"form-control\" value={shortDetails} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label className=\"text-muted\">Discounts in Taka</label>\n                    <input onChange={handleChange('discounts')} type=\"number\" className=\"form-control\" value={discounts} />\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"text-muted\">Diamonds amount</label>\n                    <input onChange={handleChange('diamonds')} type=\"number\" className=\"form-control\" value={diamonds} />\n                </div>\n\n                <button className=\"btn btn-outline-primary\">Add a coupon</button>\n            </form>\n            <h4>Your diamonds or purchased points: {diamondAmount} </h4>\n            <h3>All coupons</h3>\n            <div className=\"row\">\n                \n                {\n                    coupons.map((coupon, index)=>{\n                        return(\n                            <div className=\"border col-md-5 bg-new p-2\">\n                                <p>{index + 1}</p>\n                                <h3>{coupon.couponName}</h3>\n                                <h5 className=\"bg-light p-2 rounded\"><b>{coupon.couponCode}</b></h5>\n                                <p>Discounts tk: - {coupon.discounts}</p>\n                                <p>Diamond need to buy: {coupon.diamonds}</p>\n                                { coupon.diamonds > diamondAmount ?\n                                    <p>You do not have enought diamond to avail this coupon</p>\n                                    :\n                                    <Fragment>\n                                        {userCoupons.indexOf(coupon._id) === -1 ?\n                                        <h3 onClick={()=>{collectCoupon(coupon._id)}} className=\"btn btn-primary cursor\" role=\"btn\" ><b>Collect</b></h3>\n                                        :\n                                        <h3 className=\"btn btn-primary cursor\" role=\"btn\" ><b>Collected</b></h3>\n\n                                        }\n                                    </Fragment>\n                                }\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </Fragment>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdCoupon ? '' : 'none' }}>\n            <h2>{`${createdCoupon}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Add balance\" description={`for stock of topup ?`}>\n            <div className=\"row\">\n                <div className=\"col-md-3\"><AdminLinks /></div>\n                <div className=\"col-md-6 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddCoupon;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport Layout from './../../core/Layout';\nimport { isAuthenticated } from './../../auth';\nimport { showCoupon } from './../apiAdmin';\nimport { UserLinks } from '../../user/UserDashboard';\nimport { getDiamonds, collectCouponByUser, getCouponsByUser } from '../../user/apiUser';\nimport './coupon.css'\n\nconst ShowCoupon = () => {\n    const [userCoupons, setUserCoupons] = useState([]);\n    const [diamondAmount, setDiamondAmount] = useState(0);\n    const [values, setValues] = useState({\n        coupons: [],\n        loading: false,\n        error: '',\n        boughtCoupon: '',\n        redirectToProfile: false,\n    });\n\n    const {coupons, loading, error, boughtCoupon, redirectToProfile} = values;\n\n\n    const { user, token } = isAuthenticated();\n\n    // load categories and set form data\n    const init = () => {\n        showCoupon().then(data => {\n            \n                if (data.error) {\n                    setValues({ ...values, error: data.error });\n                } else {\n                    \n                    setValues({...values, coupons: data});\n                }\n            \n        });\n\n        getDiamonds(user, token).then(data=>{\n            if (data.error) {\n                setDiamondAmount(0);\n            } else{\n                setDiamondAmount(data.amount)\n            }\n        });\n\n        getCouponsByUser(user, token).then(data=>{\n            if(data.error){\n                setUserCoupons([])\n            }else{\n                if(user.coupon){\n                    setUserCoupons(data.coupon)\n                }else{\n                    setUserCoupons([])\n                }\n                \n            }\n        })\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n\n    // const clickSubmit = event => {\n    //     event.preventDefault();\n    //     setValues({ ...values, error: '', loading: true });\n\n    //     addCoupon(user._id, token, formData).then(data => {\n    //         if (data.error) {\n    //             setValues({ ...values, error: data.error });\n    //         } else {\n                \n    //             setValues({\n    //                 ...values,\n    //                 coupons: [...coupons, data],\n    //                 loading: false,\n    //                 createdCoupon: 'Coupon'\n    //             });\n    //         }\n    //     });\n    // };\n\n    //collect coupon\n    const collectCoupon = (couponId)=>{\n        collectCouponByUser(couponId, user, token).then(data=>{\n            if(data.error){\n                setValues({ ...values, error: data.error });\n            }else{\n                setUserCoupons(...userCoupons, data);\n            }\n        })\n    }\n\n    const newPostForm = () => (\n        <Fragment>\n            <h4>Your diamonds or purchased points: {diamondAmount} </h4>\n\n            <h3>All coupons</h3>\n            <div className=\"row\">\n                \n                {\n                    coupons.map((coupon, index)=>{\n                        return(\n                            <div className=\"border col-md-5 bg-new p-2\">\n                                <p>{index + 1}</p>\n                                <h3>{coupon.couponName}</h3>\n                                <h5 className=\"bg-light p-2 rounded\"><b>{coupon.couponCode}</b></h5>\n                                <p>Discounts tk: - {coupon.discounts}</p>\n                                <p>Diamond need to buy: {coupon.diamonds}</p>\n                                { coupon.diamonds > diamondAmount ?\n                                    <p>You do not have enought diamond to avail this coupon</p>\n                                    :\n                                    <Fragment>\n                                        {userCoupons.filter(coupon._id) === -1 ?\n                                        <h3 onClick={()=>{collectCoupon(coupon._id)}} className=\"btn btn-primary cursor\" role=\"btn\" ><b>Collect</b></h3>\n                                        :\n                                        <h3 className=\"btn btn-primary cursor\" role=\"btn\" ><b>Collected</b></h3>\n\n                                        }\n                                    </Fragment>\n                                }\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </Fragment>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: boughtCoupon ? '' : 'none' }}>\n            <h2>{`${boughtCoupon}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Add balance\" description={`for stock of topup ?`}>\n            <div className=\"row\">\n                <div className=\"col-md-3\"><UserLinks /></div>\n                <div className=\"col-md-6 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default ShowCoupon;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Signup from './user/Signup';\nimport Signin from './user/Signin';\nimport Home from './core/Home';\nimport PrivateRoute from './auth/PrivateRoute';\nimport Dashboard from './user/UserDashboard';\nimport AdminRoute from './auth/AdminRoute';\nimport AdminDashboard from './user/AdminDashboard';\nimport AddCategory from './admin/AddCategory';\nimport AddProduct from './admin/AddProduct';\nimport Shop from './core/Shop';\nimport Product from './core/Product';\nimport Cart from './core/Cart';\nimport Orders from './admin/Orders';\nimport Profile from './user/Profile';\nimport ManageProducts from './admin/ManageProducts';\nimport UpdateProduct from './admin/UpdateProduct';\nimport UpdateCategory from './admin/updateCategory';\nimport AddTopupThumb from './admin/topup/AddTopupThumb';\nimport TopupForm from './core/topup/TopupForm.js';\nimport AddRechargePackage from './admin/rechargePackage/AddRechargePackage';\nimport ShowTopupOrders from './admin/topupOrder/ShowTopupOrders';\nimport AddBalance from './admin/balance/AddBalance';\nimport ShowMessagePair from './message/ShowMessagePair';\nimport ShowChat from './message/ShowChat';\nimport { UserProvider } from './context/notificationsContext';\nimport AssignedTopupOrders from './admin/topupOrder/AssignedTopupOrders';\nimport ShowAdmins from './admin/topupOrder/ShowAdmins';\nimport ModifyDiamondsValue from './admin/diamonds/ModifyDiamondsValue';\nimport AddCoupon from './admin/coupon/AddCoupon';\nimport ShowCoupon from './admin/coupon/ShowCoupon';\n\nconst Routes = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                \n                <Route path=\"/shop\" exact component={Shop} />\n                <Route path=\"/signin\" exact component={Signin} />\n                <Route path=\"/signup\" exact component={Signup} />\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/product/:productId\" exact component={Product} />\n                <Route path=\"/cart\" exact component={Cart} />\n                <UserProvider>\n                    <PrivateRoute path=\"/user/coupons\" exact component={ ShowCoupon } />\n                    <AdminRoute path=\"/admin/add-coupons\" exact component={ AddCoupon } />\n                    <AdminRoute path=\"/admin/diamond-value\" exact component={ ModifyDiamondsValue } />\n                    <AdminRoute path=\"/admin/topup\" exact component={AddTopupThumb} />\n                    <AdminRoute path=\"/admin/assign-topup-order/:topupOrderId\" exact component={ShowAdmins} />\n                    <AdminRoute path=\"/admin/balance-stock\" exact component={ AddBalance } />\n                    <AdminRoute path=\"/admin/topup-orders\" exact component={ShowTopupOrders} />\n                    <AdminRoute path=\"/admin/assigned-topup-orders\" exact component={AssignedTopupOrders} />\n                    <AdminRoute path=\"/admin/recharge-package\" exact component={AddRechargePackage} />\n                    <PrivateRoute path=\"/topups/:id/type/:type\" exact component={TopupForm} />\n                    <PrivateRoute path=\"/user/messages\" exact component={ShowMessagePair} />\n                    <AdminRoute path=\"/admin/messages\" exact component={ShowMessagePair} />\n                    <PrivateRoute path=\"/messages/pair/:pairId\" exact component={ShowChat} />\n                    \n                    <PrivateRoute path=\"/user/dashboard\" exact component={Dashboard} />\n                    <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashboard} />\n                    <AdminRoute path=\"/create/category\" exact component={AddCategory} />\n                    <AdminRoute path=\"/create/product\" exact component={AddProduct} />\n                    \n                    <AdminRoute path=\"/admin/orders\" exact component={Orders} />\n                    <PrivateRoute path=\"/profile/:userId\" exact component={Profile} />\n                    <PrivateRoute path=\"/admin/products\" exact component={ManageProducts} />\n                    <AdminRoute path=\"/admin/product/update/:productId\" exact component={UpdateProduct} />\n                    <AdminRoute path=\"/admin/category/update/:categoryId\" exact component={UpdateCategory} />\n                </UserProvider>\n            </Switch>\n        </BrowserRouter>\n    );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from \"./Routes\";\n\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/Logo.e93727e0.png\";"],"sourceRoot":""}